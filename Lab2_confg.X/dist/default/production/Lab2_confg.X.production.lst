

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Sep 23 17:37:15 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 05/05/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F46K40 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     
    74 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    75  0000                     
    76 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    77  0000                     
    78 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    79  0000                     
    80                           	psect	nvCOMRAM
    81  000028                     __pnvCOMRAM:
    82                           	callstack 0
    83  000028                     _EUSART1_ErrorHandler:
    84                           	callstack 0
    85  000028                     	ds	2
    86  00002A                     _EUSART1_OverrunErrorHandler:
    87                           	callstack 0
    88  00002A                     	ds	2
    89  00002C                     _EUSART1_FramingErrorHandler:
    90                           	callstack 0
    91  00002C                     	ds	2
    92  0000                     _PMD5	set	3814
    93  0000                     _PMD4	set	3813
    94  0000                     _PMD3	set	3812
    95  0000                     _PMD2	set	3811
    96  0000                     _PMD1	set	3810
    97  0000                     _PMD0	set	3809
    98  0000                     _OSCTUNE	set	3805
    99  0000                     _OSCFRQ	set	3806
   100  0000                     _OSCEN	set	3804
   101  0000                     _OSCCON3	set	3802
   102  0000                     _OSCCON1	set	3800
   103  0000                     _PIR3bits	set	3789
   104  0000                     _RC1PPS	set	3832
   105  0000                     _RX1PPS	set	3765
   106  0000                     _PIR4bits	set	3790
   107  0000                     _ADCON1bits	set	3929
   108  0000                     _ADCON2bits	set	3930
   109  0000                     _ADCON3bits	set	3931
   110  0000                     _ADACQ	set	3932
   111  0000                     _ADCLK	set	3927
   112  0000                     _ADACT	set	3926
   113  0000                     _ADREF	set	3928
   114  0000                     _ADCON3	set	3931
   115  0000                     _ADCON2	set	3930
   116  0000                     _ADCON1	set	3929
   117  0000                     _ADPRE	set	3934
   118  0000                     _ADCAP	set	3933
   119  0000                     _ADPCH	set	3935
   120  0000                     _INLVLE	set	3882
   121  0000                     _INLVLD	set	3874
   122  0000                     _INLVLC	set	3869
   123  0000                     _INLVLB	set	3861
   124  0000                     _INLVLA	set	3853
   125  0000                     _SLRCONE	set	3883
   126  0000                     _SLRCOND	set	3875
   127  0000                     _SLRCONC	set	3870
   128  0000                     _SLRCONB	set	3862
   129  0000                     _SLRCONA	set	3854
   130  0000                     _ODCOND	set	3876
   131  0000                     _ODCONC	set	3871
   132  0000                     _ODCONB	set	3863
   133  0000                     _ODCONA	set	3855
   134  0000                     _ODCONE	set	3884
   135  0000                     _WPUC	set	3872
   136  0000                     _WPUA	set	3856
   137  0000                     _WPUB	set	3864
   138  0000                     _WPUE	set	3885
   139  0000                     _WPUD	set	3877
   140  0000                     _ANSELA	set	3857
   141  0000                     _ANSELE	set	3886
   142  0000                     _ANSELB	set	3865
   143  0000                     _ANSELC	set	3873
   144  0000                     _ANSELD	set	3878
   145  0000                     _LATDbits	set	3974
   146  0000                     _ADERRL	set	3950
   147  0000                     _ADERRH	set	3951
   148  0000                     _ADPREVL	set	3937
   149  0000                     _ADPREVH	set	3938
   150  0000                     _ADFLTRL	set	3954
   151  0000                     _ADFLTRH	set	3955
   152  0000                     _ADSTATbits	set	3941
   153  0000                     _ADACCL	set	3952
   154  0000                     _ADACCH	set	3953
   155  0000                     _ADCNT	set	3943
   156  0000                     _ADRESL	set	3939
   157  0000                     _ADRESH	set	3940
   158  0000                     _ADCON0bits	set	3936
   159  0000                     _ADCON0	set	3936
   160  0000                     _ADSTAT	set	3941
   161  0000                     _ADRPT	set	3942
   162  0000                     _ADSTPTH	set	3945
   163  0000                     _ADSTPTL	set	3944
   164  0000                     _ADUTHH	set	3949
   165  0000                     _ADUTHL	set	3948
   166  0000                     _ADLTHH	set	3947
   167  0000                     _ADLTHL	set	3946
   168  0000                     _TX1REG	set	3994
   169  0000                     _RC1REG	set	3993
   170  0000                     _RC1STAbits	set	3997
   171  0000                     _TX1STAbits	set	3998
   172  0000                     _SP1BRGH	set	3996
   173  0000                     _SP1BRGL	set	3995
   174  0000                     _TX1STA	set	3998
   175  0000                     _RC1STA	set	3997
   176  0000                     _BAUD1CON	set	3999
   177  0000                     _TRISD	set	3979
   178  0000                     _TRISC	set	3978
   179  0000                     _TRISB	set	3977
   180  0000                     _TRISA	set	3976
   181  0000                     _TRISE	set	3980
   182  0000                     _LATC	set	3973
   183  0000                     _LATB	set	3972
   184  0000                     _LATA	set	3971
   185  0000                     _LATD	set	3974
   186  0000                     _LATE	set	3975
   187  0000                     _PR6	set	4016
   188  0000                     _TMR6	set	4015
   189  0000                     _T6CONbits	set	4017
   190  0000                     _T6RSTbits	set	4020
   191  0000                     _T6HLTbits	set	4018
   192  0000                     _T6CON	set	4017
   193  0000                     _T6TMR	set	4015
   194  0000                     _T6PR	set	4016
   195  0000                     _T6RST	set	4020
   196  0000                     _T6HLT	set	4018
   197  0000                     _T6CLKCON	set	4019
   198                           
   199                           ; #config settings
   200                           
   201                           	psect	cinit
   202  00F2FC                     __pcinit:
   203                           	callstack 0
   204  00F2FC                     start_initialization:
   205                           	callstack 0
   206  00F2FC                     __initialization:
   207                           	callstack 0
   208                           
   209                           ; Clear objects allocated to COMRAM (16 bytes)
   210  00F2FC  EE00  F018         	lfsr	0,__pbssCOMRAM
   211  00F300  0E10               	movlw	16
   212  00F302                     clear_0:
   213  00F302  6AEE               	clrf	postinc0,c
   214  00F304  06E8               	decf	wreg,f,c
   215  00F306  E1FD               	bnz	clear_0
   216  00F308                     end_of_initialization:
   217                           	callstack 0
   218  00F308                     __end_of__initialization:
   219                           	callstack 0
   220  00F308  0E00               	movlw	low (__Lmediumconst shr (0+16))
   221  00F30A  6EF8               	movwf	tblptru,c
   222  00F30C  0100               	movlb	0
   223  00F30E  EFAC  F07B         	goto	_main	;jump to C main() function
   224                           
   225                           	psect	bssCOMRAM
   226  000018                     __pbssCOMRAM:
   227                           	callstack 0
   228  000018                     _V_Recibido:
   229                           	callstack 0
   230  000018                     	ds	7
   231  00001F                     _recibidoo:
   232                           	callstack 0
   233  00001F                     	ds	2
   234  000021                     _recibido:
   235                           	callstack 0
   236  000021                     	ds	2
   237  000023                     _conteo:
   238                           	callstack 0
   239  000023                     	ds	2
   240  000025                     _Transmision_Completada:
   241                           	callstack 0
   242  000025                     	ds	1
   243  000026                     _Transmision_Error:
   244                           	callstack 0
   245  000026                     	ds	1
   246  000027                     _eusart1RxLastError:
   247                           	callstack 0
   248  000027                     	ds	1
   249                           
   250                           	psect	cstackCOMRAM
   251  000001                     __pcstackCOMRAM:
   252                           	callstack 0
   253  000001                     ?_ADCC_GetConversionResult:
   254                           	callstack 0
   255  000001                     ?___wmul:
   256                           	callstack 0
   257  000001                     ?___lwdiv:
   258                           	callstack 0
   259  000001                     ?___lwmod:
   260                           	callstack 0
   261  000001                     _EUSART1_is_tx_ready$556:
   262                           	callstack 0
   263  000001                     EUSART1_Write@txData:
   264                           	callstack 0
   265  000001                     EUSART1_SetFramingErrorHandler@interruptHandler:
   266                           	callstack 0
   267  000001                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   268                           	callstack 0
   269  000001                     EUSART1_SetErrorHandler@interruptHandler:
   270                           	callstack 0
   271  000001                     Inicializar_Maquinita@mqnt:
   272                           	callstack 0
   273  000001                     Inicializar_Paquete@mqnt:
   274                           	callstack 0
   275  000001                     Procese_UART@mqnt:
   276                           	callstack 0
   277  000001                     ___wmul@multiplier:
   278                           	callstack 0
   279  000001                     ___lwdiv@dividend:
   280                           	callstack 0
   281  000001                     ___lwmod@dividend:
   282                           	callstack 0
   283                           
   284                           ; 2 bytes @ 0x0
   285  000001                     	ds	2
   286  000003                     ??_ADCC_GetConversionResult:
   287  000003                     ??_Procese_UART:
   288  000003                     ___wmul@multiplicand:
   289                           	callstack 0
   290  000003                     ___lwdiv@divisor:
   291                           	callstack 0
   292  000003                     ___lwmod@divisor:
   293                           	callstack 0
   294                           
   295                           ; 2 bytes @ 0x2
   296  000003                     	ds	2
   297  000005                     ___lwmod@counter:
   298                           	callstack 0
   299  000005                     ___wmul@product:
   300                           	callstack 0
   301  000005                     ___lwdiv@quotient:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x4
   305  000005                     	ds	2
   306  000007                     ___lwdiv@counter:
   307                           	callstack 0
   308                           
   309                           ; 1 bytes @ 0x6
   310  000007                     	ds	1
   311  000008                     ??_Procese_Dato_Rebido:
   312  000008                     Ds_Separar_Digito@dsp:
   313                           	callstack 0
   314                           
   315                           ; 2 bytes @ 0x7
   316  000008                     	ds	2
   317  00000A                     Ds_Separar_Digito@datto:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0x9
   321  00000A                     	ds	2
   322  00000C                     main@ADC_Value:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0xB
   326  00000C                     	ds	2
   327  00000E                     main@enviar:
   328                           	callstack 0
   329                           
   330                           ; 1 bytes @ 0xD
   331  00000E                     	ds	1
   332  00000F                     main@My_Paquete_Salida:
   333                           	callstack 0
   334                           
   335                           ; 4 bytes @ 0xE
   336  00000F                     	ds	4
   337  000013                     main@My_Maquinita:
   338                           	callstack 0
   339                           
   340                           ; 5 bytes @ 0x12
   341  000013                     	ds	5
   342                           
   343 ;;
   344 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   345 ;;
   346 ;; *************** function _main *****************
   347 ;; Defined at:
   348 ;;		line 184 in file "main.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;		None
   351 ;; Auto vars:     Size  Location     Type
   352 ;;  My_Maquinita    5   18[COMRAM] struct Maquinita
   353 ;;  My_Paquete_S    4   14[COMRAM] struct Paquete_Salida
   354 ;;  ADC_Value       2   11[COMRAM] unsigned short 
   355 ;;  enviar          1   13[COMRAM] unsigned char 
   356 ;; Return value:  Size  Location     Type
   357 ;;                  1    wreg      void 
   358 ;; Registers used:
   359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   360 ;; Tracked objects:
   361 ;;		On entry : 0/0
   362 ;;		On exit  : 0/0
   363 ;;		Unchanged: 0/0
   364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   366 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   368 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   369 ;;Total ram usage:       12 bytes
   370 ;; Hardware stack levels required when called:    3
   371 ;; This function calls:
   372 ;;		_ADCC_GetConversionResult
   373 ;;		_ADCC_Initialize
   374 ;;		_ADCC_IsConversionDone
   375 ;;		_Ds_Separar_Digito
   376 ;;		_EUSART1_Write
   377 ;;		_EUSART1_is_rx_ready
   378 ;;		_EUSART1_is_tx_ready
   379 ;;		_Inicializar_Maquinita
   380 ;;		_Inicializar_Paquete
   381 ;;		_Procese_Dato_Rebido
   382 ;;		_Procese_UART
   383 ;;		_SYSTEM_Initialize
   384 ;; This function is called by:
   385 ;;		Startup code after reset
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           
   389                           	psect	text0
   390  00F758                     __ptext0:
   391                           	callstack 0
   392  00F758                     _main:
   393                           	callstack 28
   394  00F758                     
   395                           ;main.c: 185:     SYSTEM_Initialize();
   396  00F758  ECA1  F079         	call	_SYSTEM_Initialize	;wreg free
   397  00F75C                     
   398                           ;main.c: 187:  Maquinita My_Maquinita;;main.c: 188:  Inicializar_Maquinita(&My_Maquinita
      +                          );
   399  00F75C  0E13               	movlw	low main@My_Maquinita
   400  00F75E  6E01               	movwf	Inicializar_Maquinita@mqnt^0,c
   401  00F760  0E00               	movlw	high main@My_Maquinita
   402  00F762  6E02               	movwf	(Inicializar_Maquinita@mqnt+1)^0,c
   403  00F764  EC46  F07A         	call	_Inicializar_Maquinita	;wreg free
   404  00F768                     
   405                           ;main.c: 190:  Paquete_Salida My_Paquete_Salida;;main.c: 191:  Inicializar_Paquete(&My_P
      +                          aquete_Salida);
   406  00F768  0E0F               	movlw	low main@My_Paquete_Salida
   407  00F76A  6E01               	movwf	Inicializar_Paquete@mqnt^0,c
   408  00F76C  0E00               	movlw	high main@My_Paquete_Salida
   409  00F76E  6E02               	movwf	(Inicializar_Paquete@mqnt+1)^0,c
   410  00F770  EC08  F07A         	call	_Inicializar_Paquete	;wreg free
   411  00F774                     
   412                           ;main.c: 193:  ADCC_Initialize();
   413  00F774  EC67  F07A         	call	_ADCC_Initialize	;wreg free
   414  00F778                     
   415                           ;main.c: 196:  char enviar = 0;
   416  00F778  0E00               	movlw	0
   417  00F77A  6E0E               	movwf	main@enviar^0,c
   418  00F77C                     
   419                           ;main.c: 199:  T6PR = 0xDE;
   420  00F77C  0EDE               	movlw	222
   421  00F77E  6EB0               	movwf	176,c	;volatile
   422  00F780                     
   423                           ;main.c: 200:  T6CON = 0xF6;
   424  00F780  0EF6               	movlw	246
   425  00F782  6EB1               	movwf	177,c	;volatile
   426  00F784  9086               	bcf	134,0,c	;volatile
   427  00F786  9286               	bcf	134,1,c	;volatile
   428  00F788                     l2065:
   429                           
   430                           ;main.c: 205:   if (EUSART1_is_rx_ready()){
   431  00F788  EC73  F079         	call	_EUSART1_is_rx_ready	;wreg free
   432  00F78C  0900               	iorlw	0
   433  00F78E  B4D8               	btfsc	status,2,c
   434  00F790  EFCC  F07B         	goto	u951
   435  00F794  EFCE  F07B         	goto	u950
   436  00F798                     u951:
   437  00F798  EFD4  F07B         	goto	l2069
   438  00F79C                     u950:
   439  00F79C                     
   440                           ;main.c: 206:    Procese_UART (&My_Maquinita);
   441  00F79C  0E13               	movlw	low main@My_Maquinita
   442  00F79E  6E01               	movwf	Procese_UART@mqnt^0,c
   443  00F7A0  0E00               	movlw	high main@My_Maquinita
   444  00F7A2  6E02               	movwf	(Procese_UART@mqnt+1)^0,c
   445  00F7A4  EC28  F07C         	call	_Procese_UART	;wreg free
   446  00F7A8                     l2069:
   447                           
   448                           ;main.c: 210:   if (Transmision_Completada==1){
   449  00F7A8  0425               	decf	_Transmision_Completada^0,w,c	;volatile
   450  00F7AA  A4D8               	btfss	status,2,c
   451  00F7AC  EFDA  F07B         	goto	u961
   452  00F7B0  EFDC  F07B         	goto	u960
   453  00F7B4                     u961:
   454  00F7B4  EFE1  F07B         	goto	l2075
   455  00F7B8                     u960:
   456  00F7B8  8086               	bsf	134,0,c	;volatile
   457  00F7BA                     
   458                           ;main.c: 212:    Transmision_Completada = 0;
   459  00F7BA  0E00               	movlw	0
   460  00F7BC  6E25               	movwf	_Transmision_Completada^0,c	;volatile
   461  00F7BE                     
   462                           ;main.c: 213:    Procese_Dato_Rebido();
   463  00F7BE  ECD9  F07D         	call	_Procese_Dato_Rebido	;wreg free
   464  00F7C2                     l2075:
   465                           
   466                           ;main.c: 217:   if (ADCC_IsConversionDone()){
   467  00F7C2  EC69  F079         	call	_ADCC_IsConversionDone	;wreg free
   468  00F7C6  0900               	iorlw	0
   469  00F7C8  B4D8               	btfsc	status,2,c
   470  00F7CA  EFE9  F07B         	goto	u971
   471  00F7CE  EFEB  F07B         	goto	u970
   472  00F7D2                     u971:
   473  00F7D2  EFFD  F07B         	goto	l2083
   474  00F7D6                     u970:
   475  00F7D6                     
   476                           ;main.c: 218:    ADC_Value = ADCC_GetConversionResult();
   477  00F7D6  EC5F  F079         	call	_ADCC_GetConversionResult	;wreg free
   478  00F7DA  C001  F00C         	movff	?_ADCC_GetConversionResult,main@ADC_Value
   479  00F7DE  C002  F00D         	movff	?_ADCC_GetConversionResult+1,main@ADC_Value+1
   480  00F7E2                     
   481                           ;main.c: 219:    Ds_Separar_Digito(&My_Paquete_Salida, ADC_Value);
   482  00F7E2  0E0F               	movlw	low main@My_Paquete_Salida
   483  00F7E4  6E08               	movwf	Ds_Separar_Digito@dsp^0,c
   484  00F7E6  0E00               	movlw	high main@My_Paquete_Salida
   485  00F7E8  6E09               	movwf	(Ds_Separar_Digito@dsp+1)^0,c
   486  00F7EA  C00C  F00A         	movff	main@ADC_Value,Ds_Separar_Digito@datto
   487  00F7EE  C00D  F00B         	movff	main@ADC_Value+1,Ds_Separar_Digito@datto+1
   488  00F7F2  EC3B  F07B         	call	_Ds_Separar_Digito	;wreg free
   489  00F7F6                     
   490                           ;main.c: 220:    enviar = 1;
   491  00F7F6  0E01               	movlw	1
   492  00F7F8  6E0E               	movwf	main@enviar^0,c
   493  00F7FA                     l2083:
   494                           
   495                           ;main.c: 223:   if(enviar && EUSART1_is_tx_ready()){
   496  00F7FA  500E               	movf	main@enviar^0,w,c
   497  00F7FC  B4D8               	btfsc	status,2,c
   498  00F7FE  EF03  F07C         	goto	u981
   499  00F802  EF05  F07C         	goto	u980
   500  00F806                     u981:
   501  00F806  EFC4  F07B         	goto	l2065
   502  00F80A                     u980:
   503  00F80A  ECDE  F079         	call	_EUSART1_is_tx_ready	;wreg free
   504  00F80E  0900               	iorlw	0
   505  00F810  B4D8               	btfsc	status,2,c
   506  00F812  EF0D  F07C         	goto	u991
   507  00F816  EF0F  F07C         	goto	u990
   508  00F81A                     u991:
   509  00F81A  EFC4  F07B         	goto	l2065
   510  00F81E                     u990:
   511  00F81E                     
   512                           ;main.c: 224:    enviar = 0;
   513  00F81E  0E00               	movlw	0
   514  00F820  6E0E               	movwf	main@enviar^0,c
   515  00F822                     
   516                           ;main.c: 226:    EUSART1_Write(My_Paquete_Salida.Pack[0] + '0');
   517  00F822  500F               	movf	main@My_Paquete_Salida^0,w,c
   518  00F824  0F30               	addlw	48
   519  00F826  EC89  F079         	call	_EUSART1_Write
   520  00F82A                     
   521                           ;main.c: 227:    EUSART1_Write(My_Paquete_Salida.Pack[1] + '0');
   522  00F82A  5010               	movf	(main@My_Paquete_Salida+1)^0,w,c
   523  00F82C  0F30               	addlw	48
   524  00F82E  EC89  F079         	call	_EUSART1_Write
   525  00F832                     
   526                           ;main.c: 228:    EUSART1_Write(My_Paquete_Salida.Pack[2] + '0');
   527  00F832  5011               	movf	(main@My_Paquete_Salida+2)^0,w,c
   528  00F834  0F30               	addlw	48
   529  00F836  EC89  F079         	call	_EUSART1_Write
   530  00F83A                     
   531                           ;main.c: 229:    EUSART1_Write(My_Paquete_Salida.Pack[3] + '0');
   532  00F83A  5012               	movf	(main@My_Paquete_Salida+3)^0,w,c
   533  00F83C  0F30               	addlw	48
   534  00F83E  EC89  F079         	call	_EUSART1_Write
   535  00F842                     
   536                           ;main.c: 232:    EUSART1_Write(0x0D);
   537  00F842  0E0D               	movlw	13
   538  00F844  EC89  F079         	call	_EUSART1_Write
   539  00F848  EFC4  F07B         	goto	l2065
   540  00F84C  EF00  F000         	goto	start
   541  00F850                     __end_of_main:
   542                           	callstack 0
   543                           
   544 ;; *************** function _SYSTEM_Initialize *****************
   545 ;; Defined at:
   546 ;;		line 50 in file "mcc_generated_files/mcc.c"
   547 ;; Parameters:    Size  Location     Type
   548 ;;		None
   549 ;; Auto vars:     Size  Location     Type
   550 ;;		None
   551 ;; Return value:  Size  Location     Type
   552 ;;                  1    wreg      void 
   553 ;; Registers used:
   554 ;;		wreg, status,2, status,0, cstack
   555 ;; Tracked objects:
   556 ;;		On entry : 0/0
   557 ;;		On exit  : 0/0
   558 ;;		Unchanged: 0/0
   559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   564 ;;Total ram usage:        0 bytes
   565 ;; Hardware stack levels used:    1
   566 ;; Hardware stack levels required when called:    2
   567 ;; This function calls:
   568 ;;		_ADCC_Initialize
   569 ;;		_EUSART1_Initialize
   570 ;;		_OSCILLATOR_Initialize
   571 ;;		_PIN_MANAGER_Initialize
   572 ;;		_PMD_Initialize
   573 ;;		_TMR6_Initialize
   574 ;; This function is called by:
   575 ;;		_main
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           	psect	text1
   580  00F342                     __ptext1:
   581                           	callstack 0
   582  00F342                     _SYSTEM_Initialize:
   583                           	callstack 28
   584  00F342                     
   585                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
   586  00F342  ECAE  F079         	call	_PMD_Initialize	;wreg free
   587                           
   588                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   589  00F346  ECFB  F07A         	call	_PIN_MANAGER_Initialize	;wreg free
   590                           
   591                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   592  00F34A  EC95  F079         	call	_OSCILLATOR_Initialize	;wreg free
   593                           
   594                           ;mcc_generated_files/mcc.c: 55:     ADCC_Initialize();
   595  00F34E  EC67  F07A         	call	_ADCC_Initialize	;wreg free
   596                           
   597                           ;mcc_generated_files/mcc.c: 56:     TMR6_Initialize();
   598  00F352  ECBC  F079         	call	_TMR6_Initialize	;wreg free
   599  00F356                     
   600                           ;mcc_generated_files/mcc.c: 57:     EUSART1_Initialize();
   601  00F356  EC27  F07A         	call	_EUSART1_Initialize	;wreg free
   602  00F35A  0012               	return		;funcret
   603  00F35C                     __end_of_SYSTEM_Initialize:
   604                           	callstack 0
   605                           
   606 ;; *************** function _TMR6_Initialize *****************
   607 ;; Defined at:
   608 ;;		line 62 in file "mcc_generated_files/tmr6.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;		None
   611 ;; Auto vars:     Size  Location     Type
   612 ;;		None
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg, status,2
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   626 ;;Total ram usage:        0 bytes
   627 ;; Hardware stack levels used:    1
   628 ;; This function calls:
   629 ;;		Nothing
   630 ;; This function is called by:
   631 ;;		_SYSTEM_Initialize
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           	psect	text2
   636  00F378                     __ptext2:
   637                           	callstack 0
   638  00F378                     _TMR6_Initialize:
   639                           	callstack 29
   640  00F378                     
   641                           ;mcc_generated_files/tmr6.c: 67:     T6CLKCON = 0x03;
   642  00F378  0E03               	movlw	3
   643  00F37A  6EB3               	movwf	179,c	;volatile
   644                           
   645                           ;mcc_generated_files/tmr6.c: 70:     T6HLT = 0x20;
   646  00F37C  0E20               	movlw	32
   647  00F37E  6EB2               	movwf	178,c	;volatile
   648                           
   649                           ;mcc_generated_files/tmr6.c: 73:     T6RST = 0x00;
   650  00F380  0E00               	movlw	0
   651  00F382  6EB4               	movwf	180,c	;volatile
   652                           
   653                           ;mcc_generated_files/tmr6.c: 76:     T6PR = 0x04;
   654  00F384  0E04               	movlw	4
   655  00F386  6EB0               	movwf	176,c	;volatile
   656                           
   657                           ;mcc_generated_files/tmr6.c: 79:     T6TMR = 0x00;
   658  00F388  0E00               	movlw	0
   659  00F38A  6EAF               	movwf	175,c	;volatile
   660  00F38C                     
   661                           ;mcc_generated_files/tmr6.c: 82:     PIR4bits.TMR6IF = 0;
   662  00F38C  010E               	movlb	14	; () banked
   663  00F38E  9BCE               	bcf	206,5,b	;volatile
   664                           
   665                           ;mcc_generated_files/tmr6.c: 85:     T6CON = 0xFC;
   666  00F390  0EFC               	movlw	252
   667  00F392  6EB1               	movwf	177,c	;volatile
   668  00F394                     
   669                           ; BSR set to: 14
   670  00F394  0012               	return		;funcret
   671  00F396                     __end_of_TMR6_Initialize:
   672                           	callstack 0
   673                           
   674 ;; *************** function _PMD_Initialize *****************
   675 ;; Defined at:
   676 ;;		line 74 in file "mcc_generated_files/mcc.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;		None
   679 ;; Auto vars:     Size  Location     Type
   680 ;;		None
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      void 
   683 ;; Registers used:
   684 ;;		wreg, status,2
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   694 ;;Total ram usage:        0 bytes
   695 ;; Hardware stack levels used:    1
   696 ;; This function calls:
   697 ;;		Nothing
   698 ;; This function is called by:
   699 ;;		_SYSTEM_Initialize
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703                           	psect	text3
   704  00F35C                     __ptext3:
   705                           	callstack 0
   706  00F35C                     _PMD_Initialize:
   707                           	callstack 29
   708  00F35C                     
   709                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
   710  00F35C  0E00               	movlw	0
   711  00F35E  010E               	movlb	14	; () banked
   712  00F360  6FE1               	movwf	225,b	;volatile
   713                           
   714                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
   715  00F362  0E00               	movlw	0
   716  00F364  6FE2               	movwf	226,b	;volatile
   717                           
   718                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
   719  00F366  0E00               	movlw	0
   720  00F368  6FE3               	movwf	227,b	;volatile
   721                           
   722                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
   723  00F36A  0E00               	movlw	0
   724  00F36C  6FE4               	movwf	228,b	;volatile
   725                           
   726                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
   727  00F36E  0E00               	movlw	0
   728  00F370  6FE5               	movwf	229,b	;volatile
   729                           
   730                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
   731  00F372  0E00               	movlw	0
   732  00F374  6FE6               	movwf	230,b	;volatile
   733  00F376                     
   734                           ; BSR set to: 14
   735  00F376  0012               	return		;funcret
   736  00F378                     __end_of_PMD_Initialize:
   737                           	callstack 0
   738                           
   739 ;; *************** function _PIN_MANAGER_Initialize *****************
   740 ;; Defined at:
   741 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;		None
   744 ;; Auto vars:     Size  Location     Type
   745 ;;		None
   746 ;; Return value:  Size  Location     Type
   747 ;;                  1    wreg      void 
   748 ;; Registers used:
   749 ;;		wreg, status,2
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   759 ;;Total ram usage:        0 bytes
   760 ;; Hardware stack levels used:    1
   761 ;; This function calls:
   762 ;;		Nothing
   763 ;; This function is called by:
   764 ;;		_SYSTEM_Initialize
   765 ;; This function uses a non-reentrant model
   766 ;;
   767                           
   768                           	psect	text4
   769  00F5F6                     __ptext4:
   770                           	callstack 0
   771  00F5F6                     _PIN_MANAGER_Initialize:
   772                           	callstack 29
   773  00F5F6                     
   774                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
   775  00F5F6  0E00               	movlw	0
   776  00F5F8  6E87               	movwf	135,c	;volatile
   777                           
   778                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
   779  00F5FA  0E00               	movlw	0
   780  00F5FC  6E86               	movwf	134,c	;volatile
   781                           
   782                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
   783  00F5FE  0E00               	movlw	0
   784  00F600  6E83               	movwf	131,c	;volatile
   785                           
   786                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
   787  00F602  0E00               	movlw	0
   788  00F604  6E84               	movwf	132,c	;volatile
   789                           
   790                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
   791  00F606  0E00               	movlw	0
   792  00F608  6E85               	movwf	133,c	;volatile
   793                           
   794                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
   795  00F60A  0E07               	movlw	7
   796  00F60C  6E8C               	movwf	140,c	;volatile
   797  00F60E                     
   798                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
   799  00F60E  6888               	setf	136,c	;volatile
   800  00F610                     
   801                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
   802  00F610  6889               	setf	137,c	;volatile
   803                           
   804                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFD;
   805  00F612  0EFD               	movlw	253
   806  00F614  6E8A               	movwf	138,c	;volatile
   807                           
   808                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFC;
   809  00F616  0EFC               	movlw	252
   810  00F618  6E8B               	movwf	139,c	;volatile
   811  00F61A                     
   812                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
   813  00F61A  010F               	movlb	15	; () banked
   814  00F61C  6926               	setf	38,b	;volatile
   815                           
   816                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFE;
   817  00F61E  0EFE               	movlw	254
   818  00F620  6F21               	movwf	33,b	;volatile
   819  00F622                     
   820                           ; BSR set to: 15
   821                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xFF;
   822  00F622  6919               	setf	25,b	;volatile
   823                           
   824                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
   825  00F624  0E07               	movlw	7
   826  00F626  6F2E               	movwf	46,b	;volatile
   827  00F628                     
   828                           ; BSR set to: 15
   829                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
   830  00F628  6911               	setf	17,b	;volatile
   831                           
   832                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
   833  00F62A  0E00               	movlw	0
   834  00F62C  6F25               	movwf	37,b	;volatile
   835                           
   836                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
   837  00F62E  0E00               	movlw	0
   838  00F630  6F2D               	movwf	45,b	;volatile
   839                           
   840                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
   841  00F632  0E00               	movlw	0
   842  00F634  6F18               	movwf	24,b	;volatile
   843                           
   844                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
   845  00F636  0E00               	movlw	0
   846  00F638  6F10               	movwf	16,b	;volatile
   847                           
   848                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
   849  00F63A  0E00               	movlw	0
   850  00F63C  6F20               	movwf	32,b	;volatile
   851                           
   852                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
   853  00F63E  0E00               	movlw	0
   854  00F640  6F2C               	movwf	44,b	;volatile
   855                           
   856                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
   857  00F642  0E00               	movlw	0
   858  00F644  6F0F               	movwf	15,b	;volatile
   859                           
   860                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
   861  00F646  0E00               	movlw	0
   862  00F648  6F17               	movwf	23,b	;volatile
   863                           
   864                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
   865  00F64A  0E00               	movlw	0
   866  00F64C  6F1F               	movwf	31,b	;volatile
   867                           
   868                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
   869  00F64E  0E00               	movlw	0
   870  00F650  6F24               	movwf	36,b	;volatile
   871  00F652                     
   872                           ; BSR set to: 15
   873                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
   874  00F652  690E               	setf	14,b	;volatile
   875  00F654                     
   876                           ; BSR set to: 15
   877                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
   878  00F654  6916               	setf	22,b	;volatile
   879  00F656                     
   880                           ; BSR set to: 15
   881                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
   882  00F656  691E               	setf	30,b	;volatile
   883  00F658                     
   884                           ; BSR set to: 15
   885                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
   886  00F658  6923               	setf	35,b	;volatile
   887                           
   888                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
   889  00F65A  0E07               	movlw	7
   890  00F65C  6F2B               	movwf	43,b	;volatile
   891  00F65E                     
   892                           ; BSR set to: 15
   893                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
   894  00F65E  690D               	setf	13,b	;volatile
   895  00F660                     
   896                           ; BSR set to: 15
   897                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
   898  00F660  6915               	setf	21,b	;volatile
   899  00F662                     
   900                           ; BSR set to: 15
   901                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
   902  00F662  691D               	setf	29,b	;volatile
   903  00F664                     
   904                           ; BSR set to: 15
   905                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
   906  00F664  6922               	setf	34,b	;volatile
   907                           
   908                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
   909  00F666  0E0F               	movlw	15
   910  00F668  6F2A               	movwf	42,b	;volatile
   911                           
   912                           ;mcc_generated_files/pin_manager.c: 127:     RX1PPS = 0x10;
   913  00F66A  0E10               	movlw	16
   914  00F66C  010E               	movlb	14	; () banked
   915  00F66E  6FB5               	movwf	181,b	;volatile
   916                           
   917                           ;mcc_generated_files/pin_manager.c: 128:     RC1PPS = 0x09;
   918  00F670  0E09               	movlw	9
   919  00F672  6FF8               	movwf	248,b	;volatile
   920  00F674                     
   921                           ; BSR set to: 14
   922  00F674  0012               	return		;funcret
   923  00F676                     __end_of_PIN_MANAGER_Initialize:
   924                           	callstack 0
   925                           
   926 ;; *************** function _OSCILLATOR_Initialize *****************
   927 ;; Defined at:
   928 ;;		line 60 in file "mcc_generated_files/mcc.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;		None
   931 ;; Auto vars:     Size  Location     Type
   932 ;;		None
   933 ;; Return value:  Size  Location     Type
   934 ;;                  1    wreg      void 
   935 ;; Registers used:
   936 ;;		wreg, status,2
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   946 ;;Total ram usage:        0 bytes
   947 ;; Hardware stack levels used:    1
   948 ;; This function calls:
   949 ;;		Nothing
   950 ;; This function is called by:
   951 ;;		_SYSTEM_Initialize
   952 ;; This function uses a non-reentrant model
   953 ;;
   954                           
   955                           	psect	text5
   956  00F32A                     __ptext5:
   957                           	callstack 0
   958  00F32A                     _OSCILLATOR_Initialize:
   959                           	callstack 29
   960  00F32A                     
   961                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x60;
   962  00F32A  0E60               	movlw	96
   963  00F32C  010E               	movlb	14	; () banked
   964  00F32E  6FD8               	movwf	216,b	;volatile
   965                           
   966                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
   967  00F330  0E00               	movlw	0
   968  00F332  6FDA               	movwf	218,b	;volatile
   969                           
   970                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
   971  00F334  0E00               	movlw	0
   972  00F336  6FDC               	movwf	220,b	;volatile
   973                           
   974                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x03;
   975  00F338  0E03               	movlw	3
   976  00F33A  6FDE               	movwf	222,b	;volatile
   977                           
   978                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
   979  00F33C  0E00               	movlw	0
   980  00F33E  6FDD               	movwf	221,b	;volatile
   981  00F340                     
   982                           ; BSR set to: 14
   983  00F340  0012               	return		;funcret
   984  00F342                     __end_of_OSCILLATOR_Initialize:
   985                           	callstack 0
   986                           
   987 ;; *************** function _EUSART1_Initialize *****************
   988 ;; Defined at:
   989 ;;		line 66 in file "mcc_generated_files/eusart1.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;		None
   992 ;; Auto vars:     Size  Location     Type
   993 ;;		None
   994 ;; Return value:  Size  Location     Type
   995 ;;                  1    wreg      void 
   996 ;; Registers used:
   997 ;;		wreg, status,2, status,0, cstack
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1007 ;;Total ram usage:        0 bytes
  1008 ;; Hardware stack levels used:    1
  1009 ;; Hardware stack levels required when called:    1
  1010 ;; This function calls:
  1011 ;;		_EUSART1_SetErrorHandler
  1012 ;;		_EUSART1_SetFramingErrorHandler
  1013 ;;		_EUSART1_SetOverrunErrorHandler
  1014 ;; This function is called by:
  1015 ;;		_SYSTEM_Initialize
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019                           	psect	text6
  1020  00F44E                     __ptext6:
  1021                           	callstack 0
  1022  00F44E                     _EUSART1_Initialize:
  1023                           	callstack 28
  1024  00F44E                     
  1025                           ;mcc_generated_files/eusart1.c: 71:     BAUD1CON = 0x08;
  1026  00F44E  0E08               	movlw	8
  1027  00F450  6E9F               	movwf	159,c	;volatile
  1028                           
  1029                           ;mcc_generated_files/eusart1.c: 74:     RC1STA = 0x90;
  1030  00F452  0E90               	movlw	144
  1031  00F454  6E9D               	movwf	157,c	;volatile
  1032                           
  1033                           ;mcc_generated_files/eusart1.c: 77:     TX1STA = 0x24;
  1034  00F456  0E24               	movlw	36
  1035  00F458  6E9E               	movwf	158,c	;volatile
  1036                           
  1037                           ;mcc_generated_files/eusart1.c: 80:     SP1BRGL = 0x22;
  1038  00F45A  0E22               	movlw	34
  1039  00F45C  6E9B               	movwf	155,c	;volatile
  1040                           
  1041                           ;mcc_generated_files/eusart1.c: 83:     SP1BRGH = 0x00;
  1042  00F45E  0E00               	movlw	0
  1043  00F460  6E9C               	movwf	156,c	;volatile
  1044  00F462                     
  1045                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  1046  00F462  0E00               	movlw	0
  1047  00F464  6E01               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  1048  00F466  0E00               	movlw	0
  1049  00F468  6E02               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  1050  00F46A  EC55  F079         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  1051  00F46E                     
  1052                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  1053  00F46E  0E00               	movlw	0
  1054  00F470  6E01               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  1055  00F472  0E00               	movlw	0
  1056  00F474  6E02               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  1057  00F476  EC5A  F079         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  1058  00F47A                     
  1059                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  1060  00F47A  0E00               	movlw	0
  1061  00F47C  6E01               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  1062  00F47E  0E00               	movlw	0
  1063  00F480  6E02               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  1064  00F482  EC50  F079         	call	_EUSART1_SetErrorHandler	;wreg free
  1065  00F486                     
  1066                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  1067  00F486  0E00               	movlw	0
  1068  00F488  6E27               	movwf	_eusart1RxLastError^0,c	;volatile
  1069  00F48A  0012               	return		;funcret
  1070  00F48C                     __end_of_EUSART1_Initialize:
  1071                           	callstack 0
  1072                           
  1073 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  1074 ;; Defined at:
  1075 ;;		line 161 in file "mcc_generated_files/eusart1.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1078 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;		None
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  1    wreg      void 
  1083 ;; Registers used:
  1084 ;;		wreg, status,2, status,0
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1090 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1093 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1094 ;;Total ram usage:        2 bytes
  1095 ;; Hardware stack levels used:    1
  1096 ;; This function calls:
  1097 ;;		Nothing
  1098 ;; This function is called by:
  1099 ;;		_EUSART1_Initialize
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           	psect	text7
  1104  00F2B4                     __ptext7:
  1105                           	callstack 0
  1106  00F2B4                     _EUSART1_SetOverrunErrorHandler:
  1107                           	callstack 28
  1108  00F2B4                     
  1109                           ;mcc_generated_files/eusart1.c: 162:     EUSART1_OverrunErrorHandler = interruptHandler;
  1110  00F2B4  C001  F02A         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  1111  00F2B8  C002  F02B         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  1112  00F2BC  0012               	return		;funcret
  1113  00F2BE                     __end_of_EUSART1_SetOverrunErrorHandler:
  1114                           	callstack 0
  1115                           
  1116 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  1117 ;; Defined at:
  1118 ;;		line 157 in file "mcc_generated_files/eusart1.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1121 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;		None
  1124 ;; Return value:  Size  Location     Type
  1125 ;;                  1    wreg      void 
  1126 ;; Registers used:
  1127 ;;		wreg, status,2, status,0
  1128 ;; Tracked objects:
  1129 ;;		On entry : 0/0
  1130 ;;		On exit  : 0/0
  1131 ;;		Unchanged: 0/0
  1132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1133 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1136 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1137 ;;Total ram usage:        2 bytes
  1138 ;; Hardware stack levels used:    1
  1139 ;; This function calls:
  1140 ;;		Nothing
  1141 ;; This function is called by:
  1142 ;;		_EUSART1_Initialize
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           	psect	text8
  1147  00F2AA                     __ptext8:
  1148                           	callstack 0
  1149  00F2AA                     _EUSART1_SetFramingErrorHandler:
  1150                           	callstack 28
  1151  00F2AA                     
  1152                           ;mcc_generated_files/eusart1.c: 158:     EUSART1_FramingErrorHandler = interruptHandler;
  1153  00F2AA  C001  F02C         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  1154  00F2AE  C002  F02D         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  1155  00F2B2  0012               	return		;funcret
  1156  00F2B4                     __end_of_EUSART1_SetFramingErrorHandler:
  1157                           	callstack 0
  1158                           
  1159 ;; *************** function _EUSART1_SetErrorHandler *****************
  1160 ;; Defined at:
  1161 ;;		line 165 in file "mcc_generated_files/eusart1.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1164 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;		None
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  1    wreg      void 
  1169 ;; Registers used:
  1170 ;;		wreg, status,2, status,0
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1176 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1179 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1180 ;;Total ram usage:        2 bytes
  1181 ;; Hardware stack levels used:    1
  1182 ;; This function calls:
  1183 ;;		Nothing
  1184 ;; This function is called by:
  1185 ;;		_EUSART1_Initialize
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           	psect	text9
  1190  00F2A0                     __ptext9:
  1191                           	callstack 0
  1192  00F2A0                     _EUSART1_SetErrorHandler:
  1193                           	callstack 28
  1194  00F2A0                     
  1195                           ;mcc_generated_files/eusart1.c: 166:     EUSART1_ErrorHandler = interruptHandler;
  1196  00F2A0  C001  F028         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  1197  00F2A4  C002  F029         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  1198  00F2A8  0012               	return		;funcret
  1199  00F2AA                     __end_of_EUSART1_SetErrorHandler:
  1200                           	callstack 0
  1201                           
  1202 ;; *************** function _ADCC_Initialize *****************
  1203 ;; Defined at:
  1204 ;;		line 62 in file "mcc_generated_files/adcc.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;		None
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;		None
  1209 ;; Return value:  Size  Location     Type
  1210 ;;                  1    wreg      void 
  1211 ;; Registers used:
  1212 ;;		wreg, status,2
  1213 ;; Tracked objects:
  1214 ;;		On entry : 0/0
  1215 ;;		On exit  : 0/0
  1216 ;;		Unchanged: 0/0
  1217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1222 ;;Total ram usage:        0 bytes
  1223 ;; Hardware stack levels used:    1
  1224 ;; This function calls:
  1225 ;;		Nothing
  1226 ;; This function is called by:
  1227 ;;		_SYSTEM_Initialize
  1228 ;;		_main
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           	psect	text10
  1233  00F4CE                     __ptext10:
  1234                           	callstack 0
  1235  00F4CE                     _ADCC_Initialize:
  1236                           	callstack 29
  1237  00F4CE                     
  1238                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  1239  00F4CE  0E00               	movlw	0
  1240  00F4D0  6E6A               	movwf	106,c	;volatile
  1241                           
  1242                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  1243  00F4D2  0E00               	movlw	0
  1244  00F4D4  6E6B               	movwf	107,c	;volatile
  1245                           
  1246                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  1247  00F4D6  0E00               	movlw	0
  1248  00F4D8  6E6C               	movwf	108,c	;volatile
  1249                           
  1250                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  1251  00F4DA  0E00               	movlw	0
  1252  00F4DC  6E6D               	movwf	109,c	;volatile
  1253                           
  1254                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  1255  00F4DE  0E00               	movlw	0
  1256  00F4E0  6E68               	movwf	104,c	;volatile
  1257                           
  1258                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  1259  00F4E2  0E00               	movlw	0
  1260  00F4E4  6E69               	movwf	105,c	;volatile
  1261                           
  1262                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
  1263  00F4E6  0E00               	movlw	0
  1264  00F4E8  6E66               	movwf	102,c	;volatile
  1265                           
  1266                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x08;
  1267  00F4EA  0E08               	movlw	8
  1268  00F4EC  010F               	movlb	15	; () banked
  1269  00F4EE  6F5F               	movwf	95,b	;volatile
  1270                           
  1271                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
  1272  00F4F0  0E00               	movlw	0
  1273  00F4F2  6F5D               	movwf	93,b	;volatile
  1274                           
  1275                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
  1276  00F4F4  0E00               	movlw	0
  1277  00F4F6  6F5E               	movwf	94,b	;volatile
  1278                           
  1279                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
  1280  00F4F8  0E00               	movlw	0
  1281  00F4FA  6F59               	movwf	89,b	;volatile
  1282                           
  1283                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x00;
  1284  00F4FC  0E00               	movlw	0
  1285  00F4FE  6F5A               	movwf	90,b	;volatile
  1286                           
  1287                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
  1288  00F500  0E00               	movlw	0
  1289  00F502  6F5B               	movwf	91,b	;volatile
  1290                           
  1291                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
  1292  00F504  0E00               	movlw	0
  1293  00F506  6E65               	movwf	101,c	;volatile
  1294                           
  1295                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x00;
  1296  00F508  0E00               	movlw	0
  1297  00F50A  6F58               	movwf	88,b	;volatile
  1298                           
  1299                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x08;
  1300  00F50C  0E08               	movlw	8
  1301  00F50E  6F56               	movwf	86,b	;volatile
  1302                           
  1303                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x07;
  1304  00F510  0E07               	movlw	7
  1305  00F512  6F57               	movwf	87,b	;volatile
  1306                           
  1307                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x84;
  1308  00F514  0E84               	movlw	132
  1309  00F516  6E60               	movwf	96,c	;volatile
  1310                           
  1311                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x01;
  1312  00F518  0E01               	movlw	1
  1313  00F51A  6F5C               	movwf	92,b	;volatile
  1314  00F51C                     
  1315                           ; BSR set to: 15
  1316  00F51C  0012               	return		;funcret
  1317  00F51E                     __end_of_ADCC_Initialize:
  1318                           	callstack 0
  1319                           
  1320 ;; *************** function _Procese_UART *****************
  1321 ;; Defined at:
  1322 ;;		line 41 in file "main.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;  mqnt            2    0[COMRAM] PTR struct Maquinita
  1325 ;;		 -> main@My_Maquinita(5), 
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;		None
  1328 ;; Return value:  Size  Location     Type
  1329 ;;                  1    wreg      void 
  1330 ;; Registers used:
  1331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1337 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1339 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1340 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1341 ;;Total ram usage:        6 bytes
  1342 ;; Hardware stack levels used:    1
  1343 ;; Hardware stack levels required when called:    1
  1344 ;; This function calls:
  1345 ;;		_EUSART1_Read
  1346 ;; This function is called by:
  1347 ;;		_main
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351                           	psect	text11
  1352  00F850                     __ptext11:
  1353                           	callstack 0
  1354  00F850                     _Procese_UART:
  1355                           	callstack 29
  1356  00F850                     
  1357                           ;main.c: 43:  switch (mqnt->estados) {
  1358  00F850  EFA9  F07D         	goto	l1923
  1359  00F854                     l1871:
  1360                           
  1361                           ;main.c: 45:    V_Recibido[mqnt-> posicion] = EUSART1_Read();
  1362  00F854  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1363  00F858  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1364  00F85C  CFDE F003          	movff	postinc2,??_Procese_UART
  1365  00F860  CFDD F004          	movff	postdec2,??_Procese_UART+1
  1366  00F864  0E18               	movlw	low _V_Recibido
  1367  00F866  2403               	addwf	??_Procese_UART^0,w,c
  1368  00F868  6ED9               	movwf	fsr2l,c
  1369  00F86A  0E00               	movlw	high _V_Recibido
  1370  00F86C  2004               	addwfc	(??_Procese_UART+1)^0,w,c
  1371  00F86E  6EDA               	movwf	fsr2h,c
  1372  00F870  ECF3  F079         	call	_EUSART1_Read	;wreg free
  1373  00F874  6EDF               	movwf	indf2,c
  1374  00F876                     
  1375                           ;main.c: 46:    if (V_Recibido[mqnt-> posicion]== mqnt->inicio){
  1376  00F876  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1377  00F87A  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1378  00F87E  CFDE F003          	movff	postinc2,??_Procese_UART
  1379  00F882  CFDD F004          	movff	postdec2,??_Procese_UART+1
  1380  00F886  0E18               	movlw	low _V_Recibido
  1381  00F888  2403               	addwf	??_Procese_UART^0,w,c
  1382  00F88A  6ED9               	movwf	fsr2l,c
  1383  00F88C  0E00               	movlw	high _V_Recibido
  1384  00F88E  2004               	addwfc	(??_Procese_UART+1)^0,w,c
  1385  00F890  6EDA               	movwf	fsr2h,c
  1386  00F892  EE10 F002          	lfsr	1,2
  1387  00F896  5001               	movf	Procese_UART@mqnt^0,w,c
  1388  00F898  26E1               	addwf	fsr1l,f,c
  1389  00F89A  5002               	movf	(Procese_UART@mqnt+1)^0,w,c
  1390  00F89C  22E2               	addwfc	fsr1h,f,c
  1391  00F89E  50DE               	movf	postinc2,w,c
  1392  00F8A0  18E6               	xorwf	postinc1,w,c
  1393  00F8A2  A4D8               	btfss	status,2,c
  1394  00F8A4  EF56  F07C         	goto	u631
  1395  00F8A8  EF58  F07C         	goto	u630
  1396  00F8AC                     u631:
  1397  00F8AC  EF74  F07C         	goto	l1877
  1398  00F8B0                     u630:
  1399  00F8B0                     
  1400                           ;main.c: 48:                 mqnt->estados = 1;
  1401  00F8B0  EE20 F004          	lfsr	2,4
  1402  00F8B4  5001               	movf	Procese_UART@mqnt^0,w,c
  1403  00F8B6  26D9               	addwf	fsr2l,f,c
  1404  00F8B8  5002               	movf	(Procese_UART@mqnt+1)^0,w,c
  1405  00F8BA  22DA               	addwfc	fsr2h,f,c
  1406  00F8BC  0E01               	movlw	1
  1407  00F8BE  6EDF               	movwf	indf2,c
  1408                           
  1409                           ;main.c: 49:     mqnt-> posicion = mqnt-> posicion + 1;
  1410  00F8C0  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1411  00F8C4  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1412  00F8C8  CFDE F003          	movff	postinc2,??_Procese_UART
  1413  00F8CC  CFDD F004          	movff	postdec2,??_Procese_UART+1
  1414  00F8D0  0E01               	movlw	1
  1415  00F8D2  2603               	addwf	??_Procese_UART^0,f,c
  1416  00F8D4  0E00               	movlw	0
  1417  00F8D6  2204               	addwfc	(??_Procese_UART+1)^0,f,c
  1418  00F8D8  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1419  00F8DC  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1420  00F8E0  C003  FFDE         	movff	??_Procese_UART,postinc2
  1421  00F8E4  C004  FFDD         	movff	??_Procese_UART+1,postdec2
  1422  00F8E8                     l1877:
  1423                           
  1424                           ;main.c: 51:    Transmision_Error=0;
  1425  00F8E8  0E00               	movlw	0
  1426  00F8EA  6E26               	movwf	_Transmision_Error^0,c	;volatile
  1427                           
  1428                           ;main.c: 52:   break;
  1429  00F8EC  EFD8  F07D         	goto	l487
  1430  00F8F0                     l1879:
  1431                           
  1432                           ;main.c: 56:    V_Recibido[mqnt-> posicion] = EUSART1_Read();
  1433  00F8F0  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1434  00F8F4  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1435  00F8F8  CFDE F003          	movff	postinc2,??_Procese_UART
  1436  00F8FC  CFDD F004          	movff	postdec2,??_Procese_UART+1
  1437  00F900  0E18               	movlw	low _V_Recibido
  1438  00F902  2403               	addwf	??_Procese_UART^0,w,c
  1439  00F904  6ED9               	movwf	fsr2l,c
  1440  00F906  0E00               	movlw	high _V_Recibido
  1441  00F908  2004               	addwfc	(??_Procese_UART+1)^0,w,c
  1442  00F90A  6EDA               	movwf	fsr2h,c
  1443  00F90C  ECF3  F079         	call	_EUSART1_Read	;wreg free
  1444  00F910  6EDF               	movwf	indf2,c
  1445  00F912                     
  1446                           ;main.c: 57:    mqnt->estados = 2;
  1447  00F912  EE20 F004          	lfsr	2,4
  1448  00F916  5001               	movf	Procese_UART@mqnt^0,w,c
  1449  00F918  26D9               	addwf	fsr2l,f,c
  1450  00F91A  5002               	movf	(Procese_UART@mqnt+1)^0,w,c
  1451  00F91C  22DA               	addwfc	fsr2h,f,c
  1452  00F91E  0E02               	movlw	2
  1453  00F920  6EDF               	movwf	indf2,c
  1454  00F922                     
  1455                           ;main.c: 58:    mqnt-> posicion = mqnt-> posicion + 1;
  1456  00F922  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1457  00F926  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1458  00F92A  CFDE F003          	movff	postinc2,??_Procese_UART
  1459  00F92E  CFDD F004          	movff	postdec2,??_Procese_UART+1
  1460  00F932  0E01               	movlw	1
  1461  00F934  2603               	addwf	??_Procese_UART^0,f,c
  1462  00F936  0E00               	movlw	0
  1463  00F938  2204               	addwfc	(??_Procese_UART+1)^0,f,c
  1464  00F93A  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1465  00F93E  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1466  00F942  C003  FFDE         	movff	??_Procese_UART,postinc2
  1467  00F946  C004  FFDD         	movff	??_Procese_UART+1,postdec2
  1468                           
  1469                           ;main.c: 59:   break;
  1470  00F94A  EFD8  F07D         	goto	l487
  1471  00F94E                     l1885:
  1472                           
  1473                           ;main.c: 62:    V_Recibido[mqnt-> posicion] = EUSART1_Read();
  1474  00F94E  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1475  00F952  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1476  00F956  CFDE F003          	movff	postinc2,??_Procese_UART
  1477  00F95A  CFDD F004          	movff	postdec2,??_Procese_UART+1
  1478  00F95E  0E18               	movlw	low _V_Recibido
  1479  00F960  2403               	addwf	??_Procese_UART^0,w,c
  1480  00F962  6ED9               	movwf	fsr2l,c
  1481  00F964  0E00               	movlw	high _V_Recibido
  1482  00F966  2004               	addwfc	(??_Procese_UART+1)^0,w,c
  1483  00F968  6EDA               	movwf	fsr2h,c
  1484  00F96A  ECF3  F079         	call	_EUSART1_Read	;wreg free
  1485  00F96E  6EDF               	movwf	indf2,c
  1486  00F970                     
  1487                           ;main.c: 63:    mqnt->estados = 3;
  1488  00F970  EE20 F004          	lfsr	2,4
  1489  00F974  5001               	movf	Procese_UART@mqnt^0,w,c
  1490  00F976  26D9               	addwf	fsr2l,f,c
  1491  00F978  5002               	movf	(Procese_UART@mqnt+1)^0,w,c
  1492  00F97A  22DA               	addwfc	fsr2h,f,c
  1493  00F97C  0E03               	movlw	3
  1494  00F97E  6EDF               	movwf	indf2,c
  1495  00F980                     
  1496                           ;main.c: 64:    mqnt-> posicion = mqnt-> posicion + 1;
  1497  00F980  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1498  00F984  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1499  00F988  CFDE F003          	movff	postinc2,??_Procese_UART
  1500  00F98C  CFDD F004          	movff	postdec2,??_Procese_UART+1
  1501  00F990  0E01               	movlw	1
  1502  00F992  2603               	addwf	??_Procese_UART^0,f,c
  1503  00F994  0E00               	movlw	0
  1504  00F996  2204               	addwfc	(??_Procese_UART+1)^0,f,c
  1505  00F998  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1506  00F99C  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1507  00F9A0  C003  FFDE         	movff	??_Procese_UART,postinc2
  1508  00F9A4  C004  FFDD         	movff	??_Procese_UART+1,postdec2
  1509                           
  1510                           ;main.c: 65:   break;
  1511  00F9A8  EFD8  F07D         	goto	l487
  1512  00F9AC                     l1891:
  1513                           
  1514                           ;main.c: 68:    V_Recibido[mqnt-> posicion] = EUSART1_Read();
  1515  00F9AC  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1516  00F9B0  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1517  00F9B4  CFDE F003          	movff	postinc2,??_Procese_UART
  1518  00F9B8  CFDD F004          	movff	postdec2,??_Procese_UART+1
  1519  00F9BC  0E18               	movlw	low _V_Recibido
  1520  00F9BE  2403               	addwf	??_Procese_UART^0,w,c
  1521  00F9C0  6ED9               	movwf	fsr2l,c
  1522  00F9C2  0E00               	movlw	high _V_Recibido
  1523  00F9C4  2004               	addwfc	(??_Procese_UART+1)^0,w,c
  1524  00F9C6  6EDA               	movwf	fsr2h,c
  1525  00F9C8  ECF3  F079         	call	_EUSART1_Read	;wreg free
  1526  00F9CC  6EDF               	movwf	indf2,c
  1527  00F9CE                     
  1528                           ;main.c: 69:    mqnt->estados = 4;
  1529  00F9CE  EE20 F004          	lfsr	2,4
  1530  00F9D2  5001               	movf	Procese_UART@mqnt^0,w,c
  1531  00F9D4  26D9               	addwf	fsr2l,f,c
  1532  00F9D6  5002               	movf	(Procese_UART@mqnt+1)^0,w,c
  1533  00F9D8  22DA               	addwfc	fsr2h,f,c
  1534  00F9DA  0E04               	movlw	4
  1535  00F9DC  6EDF               	movwf	indf2,c
  1536  00F9DE                     
  1537                           ;main.c: 70:    mqnt-> posicion = mqnt-> posicion + 1;
  1538  00F9DE  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1539  00F9E2  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1540  00F9E6  CFDE F003          	movff	postinc2,??_Procese_UART
  1541  00F9EA  CFDD F004          	movff	postdec2,??_Procese_UART+1
  1542  00F9EE  0E01               	movlw	1
  1543  00F9F0  2603               	addwf	??_Procese_UART^0,f,c
  1544  00F9F2  0E00               	movlw	0
  1545  00F9F4  2204               	addwfc	(??_Procese_UART+1)^0,f,c
  1546  00F9F6  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1547  00F9FA  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1548  00F9FE  C003  FFDE         	movff	??_Procese_UART,postinc2
  1549  00FA02  C004  FFDD         	movff	??_Procese_UART+1,postdec2
  1550                           
  1551                           ;main.c: 71:   break;
  1552  00FA06  EFD8  F07D         	goto	l487
  1553  00FA0A                     l1897:
  1554                           
  1555                           ;main.c: 74:    V_Recibido[mqnt-> posicion] = EUSART1_Read();
  1556  00FA0A  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1557  00FA0E  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1558  00FA12  CFDE F003          	movff	postinc2,??_Procese_UART
  1559  00FA16  CFDD F004          	movff	postdec2,??_Procese_UART+1
  1560  00FA1A  0E18               	movlw	low _V_Recibido
  1561  00FA1C  2403               	addwf	??_Procese_UART^0,w,c
  1562  00FA1E  6ED9               	movwf	fsr2l,c
  1563  00FA20  0E00               	movlw	high _V_Recibido
  1564  00FA22  2004               	addwfc	(??_Procese_UART+1)^0,w,c
  1565  00FA24  6EDA               	movwf	fsr2h,c
  1566  00FA26  ECF3  F079         	call	_EUSART1_Read	;wreg free
  1567  00FA2A  6EDF               	movwf	indf2,c
  1568  00FA2C                     
  1569                           ;main.c: 75:    mqnt->estados = 5;
  1570  00FA2C  EE20 F004          	lfsr	2,4
  1571  00FA30  5001               	movf	Procese_UART@mqnt^0,w,c
  1572  00FA32  26D9               	addwf	fsr2l,f,c
  1573  00FA34  5002               	movf	(Procese_UART@mqnt+1)^0,w,c
  1574  00FA36  22DA               	addwfc	fsr2h,f,c
  1575  00FA38  0E05               	movlw	5
  1576  00FA3A  6EDF               	movwf	indf2,c
  1577  00FA3C                     
  1578                           ;main.c: 76:    mqnt-> posicion = mqnt-> posicion + 1;
  1579  00FA3C  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1580  00FA40  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1581  00FA44  CFDE F003          	movff	postinc2,??_Procese_UART
  1582  00FA48  CFDD F004          	movff	postdec2,??_Procese_UART+1
  1583  00FA4C  0E01               	movlw	1
  1584  00FA4E  2603               	addwf	??_Procese_UART^0,f,c
  1585  00FA50  0E00               	movlw	0
  1586  00FA52  2204               	addwfc	(??_Procese_UART+1)^0,f,c
  1587  00FA54  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1588  00FA58  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1589  00FA5C  C003  FFDE         	movff	??_Procese_UART,postinc2
  1590  00FA60  C004  FFDD         	movff	??_Procese_UART+1,postdec2
  1591                           
  1592                           ;main.c: 77:   break;
  1593  00FA64  EFD8  F07D         	goto	l487
  1594  00FA68                     l1903:
  1595                           
  1596                           ;main.c: 80:    V_Recibido[mqnt-> posicion] = EUSART1_Read();
  1597  00FA68  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1598  00FA6C  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1599  00FA70  CFDE F003          	movff	postinc2,??_Procese_UART
  1600  00FA74  CFDD F004          	movff	postdec2,??_Procese_UART+1
  1601  00FA78  0E18               	movlw	low _V_Recibido
  1602  00FA7A  2403               	addwf	??_Procese_UART^0,w,c
  1603  00FA7C  6ED9               	movwf	fsr2l,c
  1604  00FA7E  0E00               	movlw	high _V_Recibido
  1605  00FA80  2004               	addwfc	(??_Procese_UART+1)^0,w,c
  1606  00FA82  6EDA               	movwf	fsr2h,c
  1607  00FA84  ECF3  F079         	call	_EUSART1_Read	;wreg free
  1608  00FA88  6EDF               	movwf	indf2,c
  1609  00FA8A                     
  1610                           ;main.c: 81:    mqnt->estados = 6;
  1611  00FA8A  EE20 F004          	lfsr	2,4
  1612  00FA8E  5001               	movf	Procese_UART@mqnt^0,w,c
  1613  00FA90  26D9               	addwf	fsr2l,f,c
  1614  00FA92  5002               	movf	(Procese_UART@mqnt+1)^0,w,c
  1615  00FA94  22DA               	addwfc	fsr2h,f,c
  1616  00FA96  0E06               	movlw	6
  1617  00FA98  6EDF               	movwf	indf2,c
  1618  00FA9A                     
  1619                           ;main.c: 82:    mqnt-> posicion = mqnt-> posicion + 1;
  1620  00FA9A  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1621  00FA9E  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1622  00FAA2  CFDE F003          	movff	postinc2,??_Procese_UART
  1623  00FAA6  CFDD F004          	movff	postdec2,??_Procese_UART+1
  1624  00FAAA  0E01               	movlw	1
  1625  00FAAC  2603               	addwf	??_Procese_UART^0,f,c
  1626  00FAAE  0E00               	movlw	0
  1627  00FAB0  2204               	addwfc	(??_Procese_UART+1)^0,f,c
  1628  00FAB2  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1629  00FAB6  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1630  00FABA  C003  FFDE         	movff	??_Procese_UART,postinc2
  1631  00FABE  C004  FFDD         	movff	??_Procese_UART+1,postdec2
  1632                           
  1633                           ;main.c: 83:   break;
  1634  00FAC2  EFD8  F07D         	goto	l487
  1635  00FAC6                     l1909:
  1636                           
  1637                           ;main.c: 86:    V_Recibido[mqnt-> posicion] = EUSART1_Read();
  1638  00FAC6  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1639  00FACA  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1640  00FACE  CFDE F003          	movff	postinc2,??_Procese_UART
  1641  00FAD2  CFDD F004          	movff	postdec2,??_Procese_UART+1
  1642  00FAD6  0E18               	movlw	low _V_Recibido
  1643  00FAD8  2403               	addwf	??_Procese_UART^0,w,c
  1644  00FADA  6ED9               	movwf	fsr2l,c
  1645  00FADC  0E00               	movlw	high _V_Recibido
  1646  00FADE  2004               	addwfc	(??_Procese_UART+1)^0,w,c
  1647  00FAE0  6EDA               	movwf	fsr2h,c
  1648  00FAE2  ECF3  F079         	call	_EUSART1_Read	;wreg free
  1649  00FAE6  6EDF               	movwf	indf2,c
  1650  00FAE8                     
  1651                           ;main.c: 88:    if (V_Recibido[mqnt-> posicion] == mqnt->finall){
  1652  00FAE8  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1653  00FAEC  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1654  00FAF0  CFDE F003          	movff	postinc2,??_Procese_UART
  1655  00FAF4  CFDD F004          	movff	postdec2,??_Procese_UART+1
  1656  00FAF8  0E18               	movlw	low _V_Recibido
  1657  00FAFA  2403               	addwf	??_Procese_UART^0,w,c
  1658  00FAFC  6ED9               	movwf	fsr2l,c
  1659  00FAFE  0E00               	movlw	high _V_Recibido
  1660  00FB00  2004               	addwfc	(??_Procese_UART+1)^0,w,c
  1661  00FB02  6EDA               	movwf	fsr2h,c
  1662  00FB04  EE10 F003          	lfsr	1,3
  1663  00FB08  5001               	movf	Procese_UART@mqnt^0,w,c
  1664  00FB0A  26E1               	addwf	fsr1l,f,c
  1665  00FB0C  5002               	movf	(Procese_UART@mqnt+1)^0,w,c
  1666  00FB0E  22E2               	addwfc	fsr1h,f,c
  1667  00FB10  50DE               	movf	postinc2,w,c
  1668  00FB12  18E6               	xorwf	postinc1,w,c
  1669  00FB14  A4D8               	btfss	status,2,c
  1670  00FB16  EF8F  F07D         	goto	u641
  1671  00FB1A  EF91  F07D         	goto	u640
  1672  00FB1E                     u641:
  1673  00FB1E  EF95  F07D         	goto	l1915
  1674  00FB22                     u640:
  1675  00FB22                     
  1676                           ;main.c: 89:     Transmision_Completada = 1;
  1677  00FB22  0E01               	movlw	1
  1678  00FB24  6E25               	movwf	_Transmision_Completada^0,c	;volatile
  1679                           
  1680                           ;main.c: 90:    }else {
  1681  00FB26  EF97  F07D         	goto	l1917
  1682  00FB2A                     l1915:
  1683                           
  1684                           ;main.c: 91:     Transmision_Error = 1;
  1685  00FB2A  0E01               	movlw	1
  1686  00FB2C  6E26               	movwf	_Transmision_Error^0,c	;volatile
  1687  00FB2E                     l1917:
  1688                           
  1689                           ;main.c: 93:    mqnt->estados = 0;
  1690  00FB2E  EE20 F004          	lfsr	2,4
  1691  00FB32  5001               	movf	Procese_UART@mqnt^0,w,c
  1692  00FB34  26D9               	addwf	fsr2l,f,c
  1693  00FB36  5002               	movf	(Procese_UART@mqnt+1)^0,w,c
  1694  00FB38  22DA               	addwfc	fsr2h,f,c
  1695  00FB3A  0E00               	movlw	0
  1696  00FB3C  6EDF               	movwf	indf2,c
  1697  00FB3E                     
  1698                           ;main.c: 94:    mqnt-> posicion = 0;
  1699  00FB3E  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1700  00FB42  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1701  00FB46  0E00               	movlw	0
  1702  00FB48  6EDE               	movwf	postinc2,c
  1703  00FB4A  0E00               	movlw	0
  1704  00FB4C  6EDD               	movwf	postdec2,c
  1705                           
  1706                           ;main.c: 95:   break;
  1707  00FB4E  EFD8  F07D         	goto	l487
  1708  00FB52                     l1923:
  1709  00FB52  EE20 F004          	lfsr	2,4
  1710  00FB56  5001               	movf	Procese_UART@mqnt^0,w,c
  1711  00FB58  26D9               	addwf	fsr2l,f,c
  1712  00FB5A  5002               	movf	(Procese_UART@mqnt+1)^0,w,c
  1713  00FB5C  22DA               	addwfc	fsr2h,f,c
  1714  00FB5E  50DF               	movf	indf2,w,c
  1715  00FB60  6E03               	movwf	??_Procese_UART^0,c
  1716  00FB62  6A04               	clrf	(??_Procese_UART+1)^0,c
  1717                           
  1718                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1719                           ; Switch size 1, requested type "simple"
  1720                           ; Number of cases is 1, Range of values is 0 to 0
  1721                           ; switch strategies available:
  1722                           ; Name         Instructions Cycles
  1723                           ; simple_byte            4     3 (average)
  1724                           ;	Chosen strategy is simple_byte
  1725  00FB64  5004               	movf	(??_Procese_UART+1)^0,w,c
  1726  00FB66  0A00               	xorlw	0	; case 0
  1727  00FB68  B4D8               	btfsc	status,2,c
  1728  00FB6A  EFB9  F07D         	goto	l2119
  1729  00FB6E  EFD8  F07D         	goto	l487
  1730  00FB72                     l2119:
  1731                           
  1732                           ; Switch size 1, requested type "simple"
  1733                           ; Number of cases is 7, Range of values is 0 to 6
  1734                           ; switch strategies available:
  1735                           ; Name         Instructions Cycles
  1736                           ; simple_byte           22    12 (average)
  1737                           ;	Chosen strategy is simple_byte
  1738  00FB72  5003               	movf	??_Procese_UART^0,w,c
  1739  00FB74  0A00               	xorlw	0	; case 0
  1740  00FB76  B4D8               	btfsc	status,2,c
  1741  00FB78  EF2A  F07C         	goto	l1871
  1742  00FB7C  0A01               	xorlw	1	; case 1
  1743  00FB7E  B4D8               	btfsc	status,2,c
  1744  00FB80  EF78  F07C         	goto	l1879
  1745  00FB84  0A03               	xorlw	3	; case 2
  1746  00FB86  B4D8               	btfsc	status,2,c
  1747  00FB88  EFA7  F07C         	goto	l1885
  1748  00FB8C  0A01               	xorlw	1	; case 3
  1749  00FB8E  B4D8               	btfsc	status,2,c
  1750  00FB90  EFD6  F07C         	goto	l1891
  1751  00FB94  0A07               	xorlw	7	; case 4
  1752  00FB96  B4D8               	btfsc	status,2,c
  1753  00FB98  EF05  F07D         	goto	l1897
  1754  00FB9C  0A01               	xorlw	1	; case 5
  1755  00FB9E  B4D8               	btfsc	status,2,c
  1756  00FBA0  EF34  F07D         	goto	l1903
  1757  00FBA4  0A03               	xorlw	3	; case 6
  1758  00FBA6  B4D8               	btfsc	status,2,c
  1759  00FBA8  EF63  F07D         	goto	l1909
  1760  00FBAC  EFD8  F07D         	goto	l487
  1761  00FBB0                     l487:
  1762  00FBB0  0012               	return		;funcret
  1763  00FBB2                     __end_of_Procese_UART:
  1764                           	callstack 0
  1765                           
  1766 ;; *************** function _EUSART1_Read *****************
  1767 ;; Defined at:
  1768 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;		None
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;		None
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  1    wreg      unsigned char 
  1775 ;; Registers used:
  1776 ;;		wreg, status,2
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1786 ;;Total ram usage:        0 bytes
  1787 ;; Hardware stack levels used:    1
  1788 ;; This function calls:
  1789 ;;		Nothing
  1790 ;; This function is called by:
  1791 ;;		_Procese_UART
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text12
  1796  00F3E6                     __ptext12:
  1797                           	callstack 0
  1798  00F3E6                     _EUSART1_Read:
  1799                           	callstack 29
  1800  00F3E6                     l207:
  1801                           
  1802                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR3bits.RC1IF)
  1803  00F3E6  010E               	movlb	14	; () banked
  1804  00F3E8  ABCD               	btfss	205,5,b	;volatile
  1805  00F3EA  EFF9  F079         	goto	u11
  1806  00F3EE  EFFB  F079         	goto	u10
  1807  00F3F2                     u11:
  1808  00F3F2  EFF3  F079         	goto	l207
  1809  00F3F6                     u10:
  1810  00F3F6                     
  1811                           ; BSR set to: 14
  1812                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  1813  00F3F6  0E00               	movlw	0
  1814  00F3F8  6E27               	movwf	_eusart1RxLastError^0,c	;volatile
  1815  00F3FA                     
  1816                           ; BSR set to: 14
  1817                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RC1STAbits.OERR)
  1818  00F3FA  A29D               	btfss	157,1,c	;volatile
  1819  00F3FC  EF02  F07A         	goto	u21
  1820  00F400  EF04  F07A         	goto	u20
  1821  00F404                     u21:
  1822  00F404  EF06  F07A         	goto	l1285
  1823  00F408                     u20:
  1824  00F408                     
  1825                           ; BSR set to: 14
  1826                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          C1STAbits.CREN = 0;
  1827  00F408  989D               	bcf	157,4,c	;volatile
  1828                           
  1829                           ;mcc_generated_files/eusart1.c: 126:         RC1STAbits.CREN = 1;
  1830  00F40A  889D               	bsf	157,4,c	;volatile
  1831  00F40C                     l1285:
  1832                           
  1833                           ; BSR set to: 14
  1834                           ;mcc_generated_files/eusart1.c: 129:     return RC1REG;
  1835  00F40C  5099               	movf	153,w,c	;volatile
  1836  00F40E                     
  1837                           ; BSR set to: 14
  1838  00F40E  0012               	return		;funcret
  1839  00F410                     __end_of_EUSART1_Read:
  1840                           	callstack 0
  1841                           
  1842 ;; *************** function _Procese_Dato_Rebido *****************
  1843 ;; Defined at:
  1844 ;;		line 99 in file "main.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;		None
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;		None
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  1    wreg      void 
  1851 ;; Registers used:
  1852 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1860 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1861 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1862 ;;Total ram usage:        3 bytes
  1863 ;; Hardware stack levels used:    1
  1864 ;; Hardware stack levels required when called:    1
  1865 ;; This function calls:
  1866 ;;		___lwdiv
  1867 ;;		___wmul
  1868 ;; This function is called by:
  1869 ;;		_main
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           	psect	text13
  1874  00FBB2                     __ptext13:
  1875                           	callstack 0
  1876  00FBB2                     _Procese_Dato_Rebido:
  1877                           	callstack 29
  1878  00FBB2                     
  1879                           ;main.c: 101:  recibido=((V_Recibido[5]-'0')*1 + (V_Recibido[4]-'0')*10 + (V_Recibido[3]
      +                          -'0')*100 + (V_Recibido[2]-'0')*1000+(V_Recibido[1]-'0')*10000);
  1880  00FBB2  C019  F001         	movff	_V_Recibido+1,___wmul@multiplier	;volatile
  1881  00FBB6  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1882  00FBB8  0E27               	movlw	39
  1883  00FBBA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1884  00FBBC  0E10               	movlw	16
  1885  00FBBE  6E03               	movwf	___wmul@multiplicand^0,c
  1886  00FBC0  ECCB  F079         	call	___wmul	;wreg free
  1887  00FBC4  501B               	movf	(_V_Recibido+3)^0,w,c	;volatile
  1888  00FBC6  0D64               	mullw	100
  1889  00FBC8  CFF3 F008          	movff	prodl,??_Procese_Dato_Rebido
  1890  00FBCC  CFF4 F009          	movff	prodh,??_Procese_Dato_Rebido+1
  1891  00FBD0  501C               	movf	(_V_Recibido+4)^0,w,c	;volatile
  1892  00FBD2  0D0A               	mullw	10
  1893  00FBD4  50F3               	movf	243,w,c
  1894  00FBD6  2608               	addwf	??_Procese_Dato_Rebido^0,f,c
  1895  00FBD8  50F4               	movf	244,w,c
  1896  00FBDA  2209               	addwfc	(??_Procese_Dato_Rebido+1)^0,f,c
  1897  00FBDC  5001               	movf	?___wmul^0,w,c
  1898  00FBDE  2608               	addwf	??_Procese_Dato_Rebido^0,f,c
  1899  00FBE0  5002               	movf	(?___wmul+1)^0,w,c
  1900  00FBE2  2209               	addwfc	(??_Procese_Dato_Rebido+1)^0,f,c
  1901  00FBE4  C01A  F001         	movff	_V_Recibido+2,___wmul@multiplier	;volatile
  1902  00FBE8  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1903  00FBEA  0E03               	movlw	3
  1904  00FBEC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1905  00FBEE  0EE8               	movlw	232
  1906  00FBF0  6E03               	movwf	___wmul@multiplicand^0,c
  1907  00FBF2  ECCB  F079         	call	___wmul	;wreg free
  1908  00FBF6  5001               	movf	?___wmul^0,w,c
  1909  00FBF8  2608               	addwf	??_Procese_Dato_Rebido^0,f,c
  1910  00FBFA  5002               	movf	(?___wmul+1)^0,w,c
  1911  00FBFC  2209               	addwfc	(??_Procese_Dato_Rebido+1)^0,f,c
  1912  00FBFE  501D               	movf	(_V_Recibido+5)^0,w,c	;volatile
  1913  00FC00  2608               	addwf	??_Procese_Dato_Rebido^0,f,c
  1914  00FC02  0E00               	movlw	0
  1915  00FC04  2209               	addwfc	(??_Procese_Dato_Rebido+1)^0,f,c
  1916  00FC06  0EB0               	movlw	176
  1917  00FC08  2408               	addwf	??_Procese_Dato_Rebido^0,w,c
  1918  00FC0A  6E21               	movwf	_recibido^0,c	;volatile
  1919  00FC0C  0EDC               	movlw	220
  1920  00FC0E  2009               	addwfc	(??_Procese_Dato_Rebido+1)^0,w,c
  1921  00FC10  6E22               	movwf	(_recibido+1)^0,c	;volatile
  1922  00FC12                     
  1923                           ;main.c: 102:     if(recibido >= 500 && recibido <= 4100){
  1924  00FC12  0EF4               	movlw	244
  1925  00FC14  5C21               	subwf	_recibido^0,w,c	;volatile
  1926  00FC16  0E01               	movlw	1
  1927  00FC18  5822               	subwfb	(_recibido+1)^0,w,c	;volatile
  1928  00FC1A  A0D8               	btfss	status,0,c
  1929  00FC1C  EF12  F07E         	goto	u651
  1930  00FC20  EF14  F07E         	goto	u650
  1931  00FC24                     u651:
  1932  00FC24  EF31  F07E         	goto	l1939
  1933  00FC28                     u650:
  1934  00FC28  0E05               	movlw	5
  1935  00FC2A  5C21               	subwf	_recibido^0,w,c	;volatile
  1936  00FC2C  0E10               	movlw	16
  1937  00FC2E  5822               	subwfb	(_recibido+1)^0,w,c	;volatile
  1938  00FC30  B0D8               	btfsc	status,0,c
  1939  00FC32  EF1D  F07E         	goto	u661
  1940  00FC36  EF1F  F07E         	goto	u660
  1941  00FC3A                     u661:
  1942  00FC3A  EF31  F07E         	goto	l1939
  1943  00FC3E                     u660:
  1944  00FC3E                     
  1945                           ;main.c: 103:   T6CON = 0xF0;
  1946  00FC3E  0EF0               	movlw	240
  1947  00FC40  6EB1               	movwf	177,c	;volatile
  1948  00FC42                     
  1949                           ;main.c: 104:   conteo = recibido / 16;
  1950  00FC42  C021  F008         	movff	_recibido,??_Procese_Dato_Rebido	;volatile
  1951  00FC46  C022  F009         	movff	_recibido+1,??_Procese_Dato_Rebido+1	;volatile
  1952  00FC4A  0E04               	movlw	4
  1953  00FC4C  6E0A               	movwf	(??_Procese_Dato_Rebido+2)^0,c
  1954  00FC4E                     u675:
  1955  00FC4E  90D8               	bcf	status,0,c
  1956  00FC50  3209               	rrcf	(??_Procese_Dato_Rebido+1)^0,f,c
  1957  00FC52  3208               	rrcf	??_Procese_Dato_Rebido^0,f,c
  1958  00FC54  2E0A               	decfsz	(??_Procese_Dato_Rebido+2)^0,f,c
  1959  00FC56  EF27  F07E         	goto	u675
  1960  00FC5A  C008  F023         	movff	??_Procese_Dato_Rebido,_conteo	;volatile
  1961  00FC5E  C009  F024         	movff	??_Procese_Dato_Rebido+1,_conteo+1	;volatile
  1962  00FC62                     l1939:
  1963                           
  1964                           ;main.c: 107:  if(recibido > 4100 && recibido <= 8200){
  1965  00FC62  0E05               	movlw	5
  1966  00FC64  5C21               	subwf	_recibido^0,w,c	;volatile
  1967  00FC66  0E10               	movlw	16
  1968  00FC68  5822               	subwfb	(_recibido+1)^0,w,c	;volatile
  1969  00FC6A  A0D8               	btfss	status,0,c
  1970  00FC6C  EF3A  F07E         	goto	u681
  1971  00FC70  EF3C  F07E         	goto	u680
  1972  00FC74                     u681:
  1973  00FC74  EF59  F07E         	goto	l1947
  1974  00FC78                     u680:
  1975  00FC78  0E09               	movlw	9
  1976  00FC7A  5C21               	subwf	_recibido^0,w,c	;volatile
  1977  00FC7C  0E20               	movlw	32
  1978  00FC7E  5822               	subwfb	(_recibido+1)^0,w,c	;volatile
  1979  00FC80  B0D8               	btfsc	status,0,c
  1980  00FC82  EF45  F07E         	goto	u691
  1981  00FC86  EF47  F07E         	goto	u690
  1982  00FC8A                     u691:
  1983  00FC8A  EF59  F07E         	goto	l1947
  1984  00FC8E                     u690:
  1985  00FC8E                     
  1986                           ;main.c: 108:   T6CON = 0xF1;
  1987  00FC8E  0EF1               	movlw	241
  1988  00FC90  6EB1               	movwf	177,c	;volatile
  1989  00FC92                     
  1990                           ;main.c: 109:   conteo = recibido / 32;
  1991  00FC92  C021  F008         	movff	_recibido,??_Procese_Dato_Rebido	;volatile
  1992  00FC96  C022  F009         	movff	_recibido+1,??_Procese_Dato_Rebido+1	;volatile
  1993  00FC9A  0E05               	movlw	5
  1994  00FC9C  6E0A               	movwf	(??_Procese_Dato_Rebido+2)^0,c
  1995  00FC9E                     u705:
  1996  00FC9E  90D8               	bcf	status,0,c
  1997  00FCA0  3209               	rrcf	(??_Procese_Dato_Rebido+1)^0,f,c
  1998  00FCA2  3208               	rrcf	??_Procese_Dato_Rebido^0,f,c
  1999  00FCA4  2E0A               	decfsz	(??_Procese_Dato_Rebido+2)^0,f,c
  2000  00FCA6  EF4F  F07E         	goto	u705
  2001  00FCAA  C008  F023         	movff	??_Procese_Dato_Rebido,_conteo	;volatile
  2002  00FCAE  C009  F024         	movff	??_Procese_Dato_Rebido+1,_conteo+1	;volatile
  2003  00FCB2                     l1947:
  2004                           
  2005                           ;main.c: 112:  if(recibido > 8200 && recibido <= 12200){
  2006  00FCB2  0E09               	movlw	9
  2007  00FCB4  5C21               	subwf	_recibido^0,w,c	;volatile
  2008  00FCB6  0E20               	movlw	32
  2009  00FCB8  5822               	subwfb	(_recibido+1)^0,w,c	;volatile
  2010  00FCBA  A0D8               	btfss	status,0,c
  2011  00FCBC  EF62  F07E         	goto	u711
  2012  00FCC0  EF64  F07E         	goto	u710
  2013  00FCC4                     u711:
  2014  00FCC4  EF7F  F07E         	goto	l1955
  2015  00FCC8                     u710:
  2016  00FCC8  0EA9               	movlw	169
  2017  00FCCA  5C21               	subwf	_recibido^0,w,c	;volatile
  2018  00FCCC  0E2F               	movlw	47
  2019  00FCCE  5822               	subwfb	(_recibido+1)^0,w,c	;volatile
  2020  00FCD0  B0D8               	btfsc	status,0,c
  2021  00FCD2  EF6D  F07E         	goto	u721
  2022  00FCD6  EF6F  F07E         	goto	u720
  2023  00FCDA                     u721:
  2024  00FCDA  EF7F  F07E         	goto	l1955
  2025  00FCDE                     u720:
  2026  00FCDE                     
  2027                           ;main.c: 113:   T6CON = 0xF2;
  2028  00FCDE  0EF2               	movlw	242
  2029  00FCE0  6EB1               	movwf	177,c	;volatile
  2030  00FCE2                     
  2031                           ;main.c: 114:   conteo = recibido / 48;
  2032  00FCE2  C021  F001         	movff	_recibido,___lwdiv@dividend	;volatile
  2033  00FCE6  C022  F002         	movff	_recibido+1,___lwdiv@dividend+1	;volatile
  2034  00FCEA  0E00               	movlw	0
  2035  00FCEC  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2036  00FCEE  0E30               	movlw	48
  2037  00FCF0  6E03               	movwf	___lwdiv@divisor^0,c
  2038  00FCF2  ECC1  F07A         	call	___lwdiv	;wreg free
  2039  00FCF6  C001  F023         	movff	?___lwdiv,_conteo	;volatile
  2040  00FCFA  C002  F024         	movff	?___lwdiv+1,_conteo+1	;volatile
  2041  00FCFE                     l1955:
  2042                           
  2043                           ;main.c: 117:  if(recibido > 12200 && recibido <= 16200){
  2044  00FCFE  0EA9               	movlw	169
  2045  00FD00  5C21               	subwf	_recibido^0,w,c	;volatile
  2046  00FD02  0E2F               	movlw	47
  2047  00FD04  5822               	subwfb	(_recibido+1)^0,w,c	;volatile
  2048  00FD06  A0D8               	btfss	status,0,c
  2049  00FD08  EF88  F07E         	goto	u731
  2050  00FD0C  EF8A  F07E         	goto	u730
  2051  00FD10                     u731:
  2052  00FD10  EFA7  F07E         	goto	l1963
  2053  00FD14                     u730:
  2054  00FD14  0E49               	movlw	73
  2055  00FD16  5C21               	subwf	_recibido^0,w,c	;volatile
  2056  00FD18  0E3F               	movlw	63
  2057  00FD1A  5822               	subwfb	(_recibido+1)^0,w,c	;volatile
  2058  00FD1C  B0D8               	btfsc	status,0,c
  2059  00FD1E  EF93  F07E         	goto	u741
  2060  00FD22  EF95  F07E         	goto	u740
  2061  00FD26                     u741:
  2062  00FD26  EFA7  F07E         	goto	l1963
  2063  00FD2A                     u740:
  2064  00FD2A                     
  2065                           ;main.c: 118:   T6CON = 0xF3;
  2066  00FD2A  0EF3               	movlw	243
  2067  00FD2C  6EB1               	movwf	177,c	;volatile
  2068  00FD2E                     
  2069                           ;main.c: 119:   conteo = recibido / 64;
  2070  00FD2E  C021  F008         	movff	_recibido,??_Procese_Dato_Rebido	;volatile
  2071  00FD32  C022  F009         	movff	_recibido+1,??_Procese_Dato_Rebido+1	;volatile
  2072  00FD36  0E06               	movlw	6
  2073  00FD38  6E0A               	movwf	(??_Procese_Dato_Rebido+2)^0,c
  2074  00FD3A                     u755:
  2075  00FD3A  90D8               	bcf	status,0,c
  2076  00FD3C  3209               	rrcf	(??_Procese_Dato_Rebido+1)^0,f,c
  2077  00FD3E  3208               	rrcf	??_Procese_Dato_Rebido^0,f,c
  2078  00FD40  2E0A               	decfsz	(??_Procese_Dato_Rebido+2)^0,f,c
  2079  00FD42  EF9D  F07E         	goto	u755
  2080  00FD46  C008  F023         	movff	??_Procese_Dato_Rebido,_conteo	;volatile
  2081  00FD4A  C009  F024         	movff	??_Procese_Dato_Rebido+1,_conteo+1	;volatile
  2082  00FD4E                     l1963:
  2083                           
  2084                           ;main.c: 122:  if(recibido > 16200 && recibido <= 20400){
  2085  00FD4E  0E49               	movlw	73
  2086  00FD50  5C21               	subwf	_recibido^0,w,c	;volatile
  2087  00FD52  0E3F               	movlw	63
  2088  00FD54  5822               	subwfb	(_recibido+1)^0,w,c	;volatile
  2089  00FD56  A0D8               	btfss	status,0,c
  2090  00FD58  EFB0  F07E         	goto	u761
  2091  00FD5C  EFB2  F07E         	goto	u760
  2092  00FD60                     u761:
  2093  00FD60  EFCD  F07E         	goto	l1971
  2094  00FD64                     u760:
  2095  00FD64  0EB1               	movlw	177
  2096  00FD66  5C21               	subwf	_recibido^0,w,c	;volatile
  2097  00FD68  0E4F               	movlw	79
  2098  00FD6A  5822               	subwfb	(_recibido+1)^0,w,c	;volatile
  2099  00FD6C  B0D8               	btfsc	status,0,c
  2100  00FD6E  EFBB  F07E         	goto	u771
  2101  00FD72  EFBD  F07E         	goto	u770
  2102  00FD76                     u771:
  2103  00FD76  EFCD  F07E         	goto	l1971
  2104  00FD7A                     u770:
  2105  00FD7A                     
  2106                           ;main.c: 123:   T6CON = 0xF4;
  2107  00FD7A  0EF4               	movlw	244
  2108  00FD7C  6EB1               	movwf	177,c	;volatile
  2109  00FD7E                     
  2110                           ;main.c: 124:   conteo = recibido / 80;
  2111  00FD7E  C021  F001         	movff	_recibido,___lwdiv@dividend	;volatile
  2112  00FD82  C022  F002         	movff	_recibido+1,___lwdiv@dividend+1	;volatile
  2113  00FD86  0E00               	movlw	0
  2114  00FD88  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2115  00FD8A  0E50               	movlw	80
  2116  00FD8C  6E03               	movwf	___lwdiv@divisor^0,c
  2117  00FD8E  ECC1  F07A         	call	___lwdiv	;wreg free
  2118  00FD92  C001  F023         	movff	?___lwdiv,_conteo	;volatile
  2119  00FD96  C002  F024         	movff	?___lwdiv+1,_conteo+1	;volatile
  2120  00FD9A                     l1971:
  2121                           
  2122                           ;main.c: 127:  if(recibido > 20400 && recibido <= 24500){
  2123  00FD9A  0EB1               	movlw	177
  2124  00FD9C  5C21               	subwf	_recibido^0,w,c	;volatile
  2125  00FD9E  0E4F               	movlw	79
  2126  00FDA0  5822               	subwfb	(_recibido+1)^0,w,c	;volatile
  2127  00FDA2  A0D8               	btfss	status,0,c
  2128  00FDA4  EFD6  F07E         	goto	u781
  2129  00FDA8  EFD8  F07E         	goto	u780
  2130  00FDAC                     u781:
  2131  00FDAC  EFF3  F07E         	goto	l1979
  2132  00FDB0                     u780:
  2133  00FDB0  0EB5               	movlw	181
  2134  00FDB2  5C21               	subwf	_recibido^0,w,c	;volatile
  2135  00FDB4  0E5F               	movlw	95
  2136  00FDB6  5822               	subwfb	(_recibido+1)^0,w,c	;volatile
  2137  00FDB8  B0D8               	btfsc	status,0,c
  2138  00FDBA  EFE1  F07E         	goto	u791
  2139  00FDBE  EFE3  F07E         	goto	u790
  2140  00FDC2                     u791:
  2141  00FDC2  EFF3  F07E         	goto	l1979
  2142  00FDC6                     u790:
  2143  00FDC6                     
  2144                           ;main.c: 128:   T6CON = 0xF5;
  2145  00FDC6  0EF5               	movlw	245
  2146  00FDC8  6EB1               	movwf	177,c	;volatile
  2147  00FDCA                     
  2148                           ;main.c: 129:   conteo = recibido / 96;
  2149  00FDCA  C021  F001         	movff	_recibido,___lwdiv@dividend	;volatile
  2150  00FDCE  C022  F002         	movff	_recibido+1,___lwdiv@dividend+1	;volatile
  2151  00FDD2  0E00               	movlw	0
  2152  00FDD4  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2153  00FDD6  0E60               	movlw	96
  2154  00FDD8  6E03               	movwf	___lwdiv@divisor^0,c
  2155  00FDDA  ECC1  F07A         	call	___lwdiv	;wreg free
  2156  00FDDE  C001  F023         	movff	?___lwdiv,_conteo	;volatile
  2157  00FDE2  C002  F024         	movff	?___lwdiv+1,_conteo+1	;volatile
  2158  00FDE6                     l1979:
  2159                           
  2160                           ;main.c: 132:  if(recibido > 24500 && recibido <= 28600){
  2161  00FDE6  0EB5               	movlw	181
  2162  00FDE8  5C21               	subwf	_recibido^0,w,c	;volatile
  2163  00FDEA  0E5F               	movlw	95
  2164  00FDEC  5822               	subwfb	(_recibido+1)^0,w,c	;volatile
  2165  00FDEE  A0D8               	btfss	status,0,c
  2166  00FDF0  EFFC  F07E         	goto	u801
  2167  00FDF4  EFFE  F07E         	goto	u800
  2168  00FDF8                     u801:
  2169  00FDF8  EF19  F07F         	goto	l1987
  2170  00FDFC                     u800:
  2171  00FDFC  0EB9               	movlw	185
  2172  00FDFE  5C21               	subwf	_recibido^0,w,c	;volatile
  2173  00FE00  0E6F               	movlw	111
  2174  00FE02  5822               	subwfb	(_recibido+1)^0,w,c	;volatile
  2175  00FE04  B0D8               	btfsc	status,0,c
  2176  00FE06  EF07  F07F         	goto	u811
  2177  00FE0A  EF09  F07F         	goto	u810
  2178  00FE0E                     u811:
  2179  00FE0E  EF19  F07F         	goto	l1987
  2180  00FE12                     u810:
  2181  00FE12                     
  2182                           ;main.c: 133:   T6CON = 0xF6;
  2183  00FE12  0EF6               	movlw	246
  2184  00FE14  6EB1               	movwf	177,c	;volatile
  2185  00FE16                     
  2186                           ;main.c: 134:   conteo = recibido / 112;
  2187  00FE16  C021  F001         	movff	_recibido,___lwdiv@dividend	;volatile
  2188  00FE1A  C022  F002         	movff	_recibido+1,___lwdiv@dividend+1	;volatile
  2189  00FE1E  0E00               	movlw	0
  2190  00FE20  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2191  00FE22  0E70               	movlw	112
  2192  00FE24  6E03               	movwf	___lwdiv@divisor^0,c
  2193  00FE26  ECC1  F07A         	call	___lwdiv	;wreg free
  2194  00FE2A  C001  F023         	movff	?___lwdiv,_conteo	;volatile
  2195  00FE2E  C002  F024         	movff	?___lwdiv+1,_conteo+1	;volatile
  2196  00FE32                     l1987:
  2197                           
  2198                           ;main.c: 137:  if(recibido > 28600 && recibido <= 32700){
  2199  00FE32  0EB9               	movlw	185
  2200  00FE34  5C21               	subwf	_recibido^0,w,c	;volatile
  2201  00FE36  0E6F               	movlw	111
  2202  00FE38  5822               	subwfb	(_recibido+1)^0,w,c	;volatile
  2203  00FE3A  A0D8               	btfss	status,0,c
  2204  00FE3C  EF22  F07F         	goto	u821
  2205  00FE40  EF24  F07F         	goto	u820
  2206  00FE44                     u821:
  2207  00FE44  EF41  F07F         	goto	l1995
  2208  00FE48                     u820:
  2209  00FE48  0EBD               	movlw	189
  2210  00FE4A  5C21               	subwf	_recibido^0,w,c	;volatile
  2211  00FE4C  0E7F               	movlw	127
  2212  00FE4E  5822               	subwfb	(_recibido+1)^0,w,c	;volatile
  2213  00FE50  B0D8               	btfsc	status,0,c
  2214  00FE52  EF2D  F07F         	goto	u831
  2215  00FE56  EF2F  F07F         	goto	u830
  2216  00FE5A                     u831:
  2217  00FE5A  EF41  F07F         	goto	l1995
  2218  00FE5E                     u830:
  2219  00FE5E                     
  2220                           ;main.c: 138:   T6CON = 0xF7;
  2221  00FE5E  0EF7               	movlw	247
  2222  00FE60  6EB1               	movwf	177,c	;volatile
  2223  00FE62                     
  2224                           ;main.c: 139:   conteo = recibido / 128;
  2225  00FE62  C021  F008         	movff	_recibido,??_Procese_Dato_Rebido	;volatile
  2226  00FE66  C022  F009         	movff	_recibido+1,??_Procese_Dato_Rebido+1	;volatile
  2227  00FE6A  0E07               	movlw	7
  2228  00FE6C  6E0A               	movwf	(??_Procese_Dato_Rebido+2)^0,c
  2229  00FE6E                     u845:
  2230  00FE6E  90D8               	bcf	status,0,c
  2231  00FE70  3209               	rrcf	(??_Procese_Dato_Rebido+1)^0,f,c
  2232  00FE72  3208               	rrcf	??_Procese_Dato_Rebido^0,f,c
  2233  00FE74  2E0A               	decfsz	(??_Procese_Dato_Rebido+2)^0,f,c
  2234  00FE76  EF37  F07F         	goto	u845
  2235  00FE7A  C008  F023         	movff	??_Procese_Dato_Rebido,_conteo	;volatile
  2236  00FE7E  C009  F024         	movff	??_Procese_Dato_Rebido+1,_conteo+1	;volatile
  2237  00FE82                     l1995:
  2238                           
  2239                           ;main.c: 143:  if(recibido > 32700 && recibido <= 36800){
  2240  00FE82  0EBD               	movlw	189
  2241  00FE84  5C21               	subwf	_recibido^0,w,c	;volatile
  2242  00FE86  0E7F               	movlw	127
  2243  00FE88  5822               	subwfb	(_recibido+1)^0,w,c	;volatile
  2244  00FE8A  A0D8               	btfss	status,0,c
  2245  00FE8C  EF4A  F07F         	goto	u851
  2246  00FE90  EF4C  F07F         	goto	u850
  2247  00FE94                     u851:
  2248  00FE94  EF67  F07F         	goto	l2003
  2249  00FE98                     u850:
  2250  00FE98  0EC1               	movlw	193
  2251  00FE9A  5C21               	subwf	_recibido^0,w,c	;volatile
  2252  00FE9C  0E8F               	movlw	143
  2253  00FE9E  5822               	subwfb	(_recibido+1)^0,w,c	;volatile
  2254  00FEA0  B0D8               	btfsc	status,0,c
  2255  00FEA2  EF55  F07F         	goto	u861
  2256  00FEA6  EF57  F07F         	goto	u860
  2257  00FEAA                     u861:
  2258  00FEAA  EF67  F07F         	goto	l2003
  2259  00FEAE                     u860:
  2260  00FEAE                     
  2261                           ;main.c: 144:   T6CON = 0xF8;
  2262  00FEAE  0EF8               	movlw	248
  2263  00FEB0  6EB1               	movwf	177,c	;volatile
  2264  00FEB2                     
  2265                           ;main.c: 145:   conteo = recibido / 144;
  2266  00FEB2  C021  F001         	movff	_recibido,___lwdiv@dividend	;volatile
  2267  00FEB6  C022  F002         	movff	_recibido+1,___lwdiv@dividend+1	;volatile
  2268  00FEBA  0E00               	movlw	0
  2269  00FEBC  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2270  00FEBE  0E90               	movlw	144
  2271  00FEC0  6E03               	movwf	___lwdiv@divisor^0,c
  2272  00FEC2  ECC1  F07A         	call	___lwdiv	;wreg free
  2273  00FEC6  C001  F023         	movff	?___lwdiv,_conteo	;volatile
  2274  00FECA  C002  F024         	movff	?___lwdiv+1,_conteo+1	;volatile
  2275  00FECE                     l2003:
  2276                           
  2277                           ;main.c: 148:  if(recibido > 36800 && recibido <= 40100){
  2278  00FECE  0EC1               	movlw	193
  2279  00FED0  5C21               	subwf	_recibido^0,w,c	;volatile
  2280  00FED2  0E8F               	movlw	143
  2281  00FED4  5822               	subwfb	(_recibido+1)^0,w,c	;volatile
  2282  00FED6  A0D8               	btfss	status,0,c
  2283  00FED8  EF70  F07F         	goto	u871
  2284  00FEDC  EF72  F07F         	goto	u870
  2285  00FEE0                     u871:
  2286  00FEE0  EF8D  F07F         	goto	l2011
  2287  00FEE4                     u870:
  2288  00FEE4  0EA5               	movlw	165
  2289  00FEE6  5C21               	subwf	_recibido^0,w,c	;volatile
  2290  00FEE8  0E9C               	movlw	156
  2291  00FEEA  5822               	subwfb	(_recibido+1)^0,w,c	;volatile
  2292  00FEEC  B0D8               	btfsc	status,0,c
  2293  00FEEE  EF7B  F07F         	goto	u881
  2294  00FEF2  EF7D  F07F         	goto	u880
  2295  00FEF6                     u881:
  2296  00FEF6  EF8D  F07F         	goto	l2011
  2297  00FEFA                     u880:
  2298  00FEFA                     
  2299                           ;main.c: 149:   T6CON = 0xF9;
  2300  00FEFA  0EF9               	movlw	249
  2301  00FEFC  6EB1               	movwf	177,c	;volatile
  2302  00FEFE                     
  2303                           ;main.c: 150:   conteo = recibido / 160;
  2304  00FEFE  C021  F001         	movff	_recibido,___lwdiv@dividend	;volatile
  2305  00FF02  C022  F002         	movff	_recibido+1,___lwdiv@dividend+1	;volatile
  2306  00FF06  0E00               	movlw	0
  2307  00FF08  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2308  00FF0A  0EA0               	movlw	160
  2309  00FF0C  6E03               	movwf	___lwdiv@divisor^0,c
  2310  00FF0E  ECC1  F07A         	call	___lwdiv	;wreg free
  2311  00FF12  C001  F023         	movff	?___lwdiv,_conteo	;volatile
  2312  00FF16  C002  F024         	movff	?___lwdiv+1,_conteo+1	;volatile
  2313  00FF1A                     l2011:
  2314                           
  2315                           ;main.c: 153:  if(recibido > 40100 && recibido <= 45000){
  2316  00FF1A  0EA5               	movlw	165
  2317  00FF1C  5C21               	subwf	_recibido^0,w,c	;volatile
  2318  00FF1E  0E9C               	movlw	156
  2319  00FF20  5822               	subwfb	(_recibido+1)^0,w,c	;volatile
  2320  00FF22  A0D8               	btfss	status,0,c
  2321  00FF24  EF96  F07F         	goto	u891
  2322  00FF28  EF98  F07F         	goto	u890
  2323  00FF2C                     u891:
  2324  00FF2C  EFB3  F07F         	goto	l2019
  2325  00FF30                     u890:
  2326  00FF30  0EC9               	movlw	201
  2327  00FF32  5C21               	subwf	_recibido^0,w,c	;volatile
  2328  00FF34  0EAF               	movlw	175
  2329  00FF36  5822               	subwfb	(_recibido+1)^0,w,c	;volatile
  2330  00FF38  B0D8               	btfsc	status,0,c
  2331  00FF3A  EFA1  F07F         	goto	u901
  2332  00FF3E  EFA3  F07F         	goto	u900
  2333  00FF42                     u901:
  2334  00FF42  EFB3  F07F         	goto	l2019
  2335  00FF46                     u900:
  2336  00FF46                     
  2337                           ;main.c: 154:   T6CON = 0xFA;
  2338  00FF46  0EFA               	movlw	250
  2339  00FF48  6EB1               	movwf	177,c	;volatile
  2340  00FF4A                     
  2341                           ;main.c: 155:   conteo = recibido / 176;
  2342  00FF4A  C021  F001         	movff	_recibido,___lwdiv@dividend	;volatile
  2343  00FF4E  C022  F002         	movff	_recibido+1,___lwdiv@dividend+1	;volatile
  2344  00FF52  0E00               	movlw	0
  2345  00FF54  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2346  00FF56  0EB0               	movlw	176
  2347  00FF58  6E03               	movwf	___lwdiv@divisor^0,c
  2348  00FF5A  ECC1  F07A         	call	___lwdiv	;wreg free
  2349  00FF5E  C001  F023         	movff	?___lwdiv,_conteo	;volatile
  2350  00FF62  C002  F024         	movff	?___lwdiv+1,_conteo+1	;volatile
  2351  00FF66                     l2019:
  2352                           
  2353                           ;main.c: 158:  if(recibido > 45000 && recibido <= 49100){
  2354  00FF66  0EC9               	movlw	201
  2355  00FF68  5C21               	subwf	_recibido^0,w,c	;volatile
  2356  00FF6A  0EAF               	movlw	175
  2357  00FF6C  5822               	subwfb	(_recibido+1)^0,w,c	;volatile
  2358  00FF6E  A0D8               	btfss	status,0,c
  2359  00FF70  EFBC  F07F         	goto	u911
  2360  00FF74  EFBE  F07F         	goto	u910
  2361  00FF78                     u911:
  2362  00FF78  EFD9  F07F         	goto	l2027
  2363  00FF7C                     u910:
  2364  00FF7C  0ECD               	movlw	205
  2365  00FF7E  5C21               	subwf	_recibido^0,w,c	;volatile
  2366  00FF80  0EBF               	movlw	191
  2367  00FF82  5822               	subwfb	(_recibido+1)^0,w,c	;volatile
  2368  00FF84  B0D8               	btfsc	status,0,c
  2369  00FF86  EFC7  F07F         	goto	u921
  2370  00FF8A  EFC9  F07F         	goto	u920
  2371  00FF8E                     u921:
  2372  00FF8E  EFD9  F07F         	goto	l2027
  2373  00FF92                     u920:
  2374  00FF92                     
  2375                           ;main.c: 159:   T6CON = 0xFB;
  2376  00FF92  0EFB               	movlw	251
  2377  00FF94  6EB1               	movwf	177,c	;volatile
  2378  00FF96                     
  2379                           ;main.c: 160:   conteo = recibido / 192;
  2380  00FF96  C021  F001         	movff	_recibido,___lwdiv@dividend	;volatile
  2381  00FF9A  C022  F002         	movff	_recibido+1,___lwdiv@dividend+1	;volatile
  2382  00FF9E  0E00               	movlw	0
  2383  00FFA0  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2384  00FFA2  0EC0               	movlw	192
  2385  00FFA4  6E03               	movwf	___lwdiv@divisor^0,c
  2386  00FFA6  ECC1  F07A         	call	___lwdiv	;wreg free
  2387  00FFAA  C001  F023         	movff	?___lwdiv,_conteo	;volatile
  2388  00FFAE  C002  F024         	movff	?___lwdiv+1,_conteo+1	;volatile
  2389  00FFB2                     l2027:
  2390                           
  2391                           ;main.c: 163:  if(recibido > 49100 && recibido <= 53200){
  2392  00FFB2  0ECD               	movlw	205
  2393  00FFB4  5C21               	subwf	_recibido^0,w,c	;volatile
  2394  00FFB6  0EBF               	movlw	191
  2395  00FFB8  5822               	subwfb	(_recibido+1)^0,w,c	;volatile
  2396  00FFBA  A0D8               	btfss	status,0,c
  2397  00FFBC  EFE2  F07F         	goto	u931
  2398  00FFC0  EFE4  F07F         	goto	u930
  2399  00FFC4                     u931:
  2400  00FFC4  EFFF  F07F         	goto	l503
  2401  00FFC8                     u930:
  2402  00FFC8  0ED1               	movlw	209
  2403  00FFCA  5C21               	subwf	_recibido^0,w,c	;volatile
  2404  00FFCC  0ECF               	movlw	207
  2405  00FFCE  5822               	subwfb	(_recibido+1)^0,w,c	;volatile
  2406  00FFD0  B0D8               	btfsc	status,0,c
  2407  00FFD2  EFED  F07F         	goto	u941
  2408  00FFD6  EFEF  F07F         	goto	u940
  2409  00FFDA                     u941:
  2410  00FFDA  EFFF  F07F         	goto	l503
  2411  00FFDE                     u940:
  2412  00FFDE                     
  2413                           ;main.c: 164:   T6CON = 0xFC;
  2414  00FFDE  0EFC               	movlw	252
  2415  00FFE0  6EB1               	movwf	177,c	;volatile
  2416  00FFE2                     
  2417                           ;main.c: 165:   conteo = recibido / 208;
  2418  00FFE2  C021  F001         	movff	_recibido,___lwdiv@dividend	;volatile
  2419  00FFE6  C022  F002         	movff	_recibido+1,___lwdiv@dividend+1	;volatile
  2420  00FFEA  0E00               	movlw	0
  2421  00FFEC  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2422  00FFEE  0ED0               	movlw	208
  2423  00FFF0  6E03               	movwf	___lwdiv@divisor^0,c
  2424  00FFF2  ECC1  F07A         	call	___lwdiv	;wreg free
  2425  00FFF6  C001  F023         	movff	?___lwdiv,_conteo	;volatile
  2426  00FFFA  C002  F024         	movff	?___lwdiv+1,_conteo+1	;volatile
  2427  00FFFE                     l503:
  2428  00FFFE  0012               	return		;funcret
  2429  010000                     __end_of_Procese_Dato_Rebido:
  2430                           	callstack 0
  2431                           
  2432 ;; *************** function ___wmul *****************
  2433 ;; Defined at:
  2434 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;  multiplier      2    0[COMRAM] unsigned int 
  2437 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;  product         2    4[COMRAM] unsigned int 
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  2    0[COMRAM] unsigned int 
  2442 ;; Registers used:
  2443 ;;		wreg, status,2, status,0, prodl, prodh
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2449 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2450 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2452 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2453 ;;Total ram usage:        6 bytes
  2454 ;; Hardware stack levels used:    1
  2455 ;; This function calls:
  2456 ;;		Nothing
  2457 ;; This function is called by:
  2458 ;;		_Procese_Dato_Rebido
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           	psect	text14
  2463  00F396                     __ptext14:
  2464                           	callstack 0
  2465  00F396                     ___wmul:
  2466                           	callstack 29
  2467  00F396  5001               	movf	___wmul@multiplier^0,w,c
  2468  00F398  0203               	mulwf	___wmul@multiplicand^0,c
  2469  00F39A  CFF3 F005          	movff	prodl,___wmul@product
  2470  00F39E  CFF4 F006          	movff	prodh,___wmul@product+1
  2471  00F3A2  5001               	movf	___wmul@multiplier^0,w,c
  2472  00F3A4  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2473  00F3A6  50F3               	movf	243,w,c
  2474  00F3A8  2606               	addwf	(___wmul@product+1)^0,f,c
  2475  00F3AA  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2476  00F3AC  0203               	mulwf	___wmul@multiplicand^0,c
  2477  00F3AE  50F3               	movf	243,w,c
  2478  00F3B0  2606               	addwf	(___wmul@product+1)^0,f,c
  2479  00F3B2  C005  F001         	movff	___wmul@product,?___wmul
  2480  00F3B6  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2481  00F3BA  0012               	return		;funcret
  2482  00F3BC                     __end_of___wmul:
  2483                           	callstack 0
  2484                           
  2485 ;; *************** function _Inicializar_Paquete *****************
  2486 ;; Defined at:
  2487 ;;		line 34 in file "main.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;  mqnt            2    0[COMRAM] PTR struct Paquete_Salid
  2490 ;;		 -> main@My_Paquete_Salida(4), 
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;		None
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  1    wreg      void 
  2495 ;; Registers used:
  2496 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2502 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2505 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2506 ;;Total ram usage:        2 bytes
  2507 ;; Hardware stack levels used:    1
  2508 ;; This function calls:
  2509 ;;		Nothing
  2510 ;; This function is called by:
  2511 ;;		_main
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515                           	psect	text15
  2516  00F410                     __ptext15:
  2517                           	callstack 0
  2518  00F410                     _Inicializar_Paquete:
  2519                           	callstack 30
  2520  00F410                     
  2521                           ;main.c: 35:  mqnt-> Pack[0] = 0;
  2522  00F410  C001  FFD9         	movff	Inicializar_Paquete@mqnt,fsr2l
  2523  00F414  C002  FFDA         	movff	Inicializar_Paquete@mqnt+1,fsr2h
  2524  00F418  0E00               	movlw	0
  2525  00F41A  6EDF               	movwf	indf2,c
  2526  00F41C                     
  2527                           ;main.c: 36:  mqnt-> Pack[1] = 0;
  2528  00F41C  EE20 F001          	lfsr	2,1
  2529  00F420  5001               	movf	Inicializar_Paquete@mqnt^0,w,c
  2530  00F422  26D9               	addwf	fsr2l,f,c
  2531  00F424  5002               	movf	(Inicializar_Paquete@mqnt+1)^0,w,c
  2532  00F426  22DA               	addwfc	fsr2h,f,c
  2533  00F428  0E00               	movlw	0
  2534  00F42A  6EDF               	movwf	indf2,c
  2535  00F42C                     
  2536                           ;main.c: 37:  mqnt-> Pack[2] = 0;
  2537  00F42C  EE20 F002          	lfsr	2,2
  2538  00F430  5001               	movf	Inicializar_Paquete@mqnt^0,w,c
  2539  00F432  26D9               	addwf	fsr2l,f,c
  2540  00F434  5002               	movf	(Inicializar_Paquete@mqnt+1)^0,w,c
  2541  00F436  22DA               	addwfc	fsr2h,f,c
  2542  00F438  0E00               	movlw	0
  2543  00F43A  6EDF               	movwf	indf2,c
  2544  00F43C                     
  2545                           ;main.c: 38:  mqnt-> Pack[3] = 0;
  2546  00F43C  EE20 F003          	lfsr	2,3
  2547  00F440  5001               	movf	Inicializar_Paquete@mqnt^0,w,c
  2548  00F442  26D9               	addwf	fsr2l,f,c
  2549  00F444  5002               	movf	(Inicializar_Paquete@mqnt+1)^0,w,c
  2550  00F446  22DA               	addwfc	fsr2h,f,c
  2551  00F448  0E00               	movlw	0
  2552  00F44A  6EDF               	movwf	indf2,c
  2553  00F44C  0012               	return		;funcret
  2554  00F44E                     __end_of_Inicializar_Paquete:
  2555                           	callstack 0
  2556                           
  2557 ;; *************** function _Inicializar_Maquinita *****************
  2558 ;; Defined at:
  2559 ;;		line 22 in file "main.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;  mqnt            2    0[COMRAM] PTR struct Maquinita
  2562 ;;		 -> main@My_Maquinita(5), 
  2563 ;; Auto vars:     Size  Location     Type
  2564 ;;		None
  2565 ;; Return value:  Size  Location     Type
  2566 ;;                  1    wreg      void 
  2567 ;; Registers used:
  2568 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2569 ;; Tracked objects:
  2570 ;;		On entry : 0/0
  2571 ;;		On exit  : 0/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2574 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2577 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2578 ;;Total ram usage:        2 bytes
  2579 ;; Hardware stack levels used:    1
  2580 ;; This function calls:
  2581 ;;		Nothing
  2582 ;; This function is called by:
  2583 ;;		_main
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           	psect	text16
  2588  00F48C                     __ptext16:
  2589                           	callstack 0
  2590  00F48C                     _Inicializar_Maquinita:
  2591                           	callstack 30
  2592  00F48C                     
  2593                           ;main.c: 23:  mqnt-> posicion = 0;
  2594  00F48C  C001  FFD9         	movff	Inicializar_Maquinita@mqnt,fsr2l
  2595  00F490  C002  FFDA         	movff	Inicializar_Maquinita@mqnt+1,fsr2h
  2596  00F494  0E00               	movlw	0
  2597  00F496  6EDE               	movwf	postinc2,c
  2598  00F498  0E00               	movlw	0
  2599  00F49A  6EDD               	movwf	postdec2,c
  2600  00F49C                     
  2601                           ;main.c: 24:  mqnt-> inicio = '#';
  2602  00F49C  EE20 F002          	lfsr	2,2
  2603  00F4A0  5001               	movf	Inicializar_Maquinita@mqnt^0,w,c
  2604  00F4A2  26D9               	addwf	fsr2l,f,c
  2605  00F4A4  5002               	movf	(Inicializar_Maquinita@mqnt+1)^0,w,c
  2606  00F4A6  22DA               	addwfc	fsr2h,f,c
  2607  00F4A8  0E23               	movlw	35
  2608  00F4AA  6EDF               	movwf	indf2,c
  2609  00F4AC                     
  2610                           ;main.c: 25:  mqnt-> finall = '*';
  2611  00F4AC  EE20 F003          	lfsr	2,3
  2612  00F4B0  5001               	movf	Inicializar_Maquinita@mqnt^0,w,c
  2613  00F4B2  26D9               	addwf	fsr2l,f,c
  2614  00F4B4  5002               	movf	(Inicializar_Maquinita@mqnt+1)^0,w,c
  2615  00F4B6  22DA               	addwfc	fsr2h,f,c
  2616  00F4B8  0E2A               	movlw	42
  2617  00F4BA  6EDF               	movwf	indf2,c
  2618  00F4BC                     
  2619                           ;main.c: 26:  mqnt-> estados = 0;
  2620  00F4BC  EE20 F004          	lfsr	2,4
  2621  00F4C0  5001               	movf	Inicializar_Maquinita@mqnt^0,w,c
  2622  00F4C2  26D9               	addwf	fsr2l,f,c
  2623  00F4C4  5002               	movf	(Inicializar_Maquinita@mqnt+1)^0,w,c
  2624  00F4C6  22DA               	addwfc	fsr2h,f,c
  2625  00F4C8  0E00               	movlw	0
  2626  00F4CA  6EDF               	movwf	indf2,c
  2627  00F4CC  0012               	return		;funcret
  2628  00F4CE                     __end_of_Inicializar_Maquinita:
  2629                           	callstack 0
  2630                           
  2631 ;; *************** function _EUSART1_is_tx_ready *****************
  2632 ;; Defined at:
  2633 ;;		line 94 in file "mcc_generated_files/eusart1.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;		None
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;		None
  2638 ;; Return value:  Size  Location     Type
  2639 ;;                  1    wreg      _Bool 
  2640 ;; Registers used:
  2641 ;;		wreg, status,2
  2642 ;; Tracked objects:
  2643 ;;		On entry : 0/0
  2644 ;;		On exit  : 0/0
  2645 ;;		Unchanged: 0/0
  2646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2648 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2650 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2651 ;;Total ram usage:        1 bytes
  2652 ;; Hardware stack levels used:    1
  2653 ;; This function calls:
  2654 ;;		Nothing
  2655 ;; This function is called by:
  2656 ;;		_main
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660                           	psect	text17
  2661  00F3BC                     __ptext17:
  2662                           	callstack 0
  2663  00F3BC                     _EUSART1_is_tx_ready:
  2664                           	callstack 30
  2665  00F3BC                     
  2666                           ;mcc_generated_files/eusart1.c: 96:     return (_Bool)(PIR3bits.TX1IF && TX1STAbits.TXEN
      +                          );
  2667  00F3BC  0E00               	movlw	0
  2668  00F3BE  6E01               	movwf	_EUSART1_is_tx_ready$556^0,c
  2669  00F3C0  010E               	movlb	14	; () banked
  2670  00F3C2  A9CD               	btfss	205,4,b	;volatile
  2671  00F3C4  EFE6  F079         	goto	u611
  2672  00F3C8  EFE8  F079         	goto	u610
  2673  00F3CC                     u611:
  2674  00F3CC  EFF1  F079         	goto	l194
  2675  00F3D0                     u610:
  2676  00F3D0                     
  2677                           ; BSR set to: 14
  2678  00F3D0  AA9E               	btfss	158,5,c	;volatile
  2679  00F3D2  EFED  F079         	goto	u621
  2680  00F3D6  EFEF  F079         	goto	u620
  2681  00F3DA                     u621:
  2682  00F3DA  EFF1  F079         	goto	l194
  2683  00F3DE                     u620:
  2684  00F3DE                     
  2685                           ; BSR set to: 14
  2686  00F3DE  0E01               	movlw	1
  2687  00F3E0  6E01               	movwf	_EUSART1_is_tx_ready$556^0,c
  2688  00F3E2                     l194:
  2689                           
  2690                           ; BSR set to: 14
  2691  00F3E2  5001               	movf	_EUSART1_is_tx_ready$556^0,w,c
  2692  00F3E4                     
  2693                           ; BSR set to: 14
  2694  00F3E4  0012               	return		;funcret
  2695  00F3E6                     __end_of_EUSART1_is_tx_ready:
  2696                           	callstack 0
  2697                           
  2698 ;; *************** function _EUSART1_is_rx_ready *****************
  2699 ;; Defined at:
  2700 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;		None
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;		None
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  1    wreg      _Bool 
  2707 ;; Registers used:
  2708 ;;		wreg
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2718 ;;Total ram usage:        0 bytes
  2719 ;; Hardware stack levels used:    1
  2720 ;; This function calls:
  2721 ;;		Nothing
  2722 ;; This function is called by:
  2723 ;;		_main
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727                           	psect	text18
  2728  00F2E6                     __ptext18:
  2729                           	callstack 0
  2730  00F2E6                     _EUSART1_is_rx_ready:
  2731                           	callstack 30
  2732  00F2E6                     
  2733                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR3bits.RC1IF);
  2734  00F2E6  010E               	movlb	14	; () banked
  2735  00F2E8  BBCD               	btfsc	205,5,b	;volatile
  2736  00F2EA  EF79  F079         	goto	u111
  2737  00F2EE  EF7C  F079         	goto	u110
  2738  00F2F2                     u111:
  2739  00F2F2  0E01               	movlw	1
  2740  00F2F4  EF7D  F079         	goto	u116
  2741  00F2F8                     u110:
  2742  00F2F8  0E00               	movlw	0
  2743  00F2FA                     u116:
  2744  00F2FA                     
  2745                           ; BSR set to: 14
  2746  00F2FA  0012               	return		;funcret
  2747  00F2FC                     __end_of_EUSART1_is_rx_ready:
  2748                           	callstack 0
  2749                           
  2750 ;; *************** function _EUSART1_Write *****************
  2751 ;; Defined at:
  2752 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;  txData          1    wreg     unsigned char 
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;  txData          1    0[COMRAM] unsigned char 
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  1    wreg      void 
  2759 ;; Registers used:
  2760 ;;		wreg
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2767 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2769 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2770 ;;Total ram usage:        1 bytes
  2771 ;; Hardware stack levels used:    1
  2772 ;; This function calls:
  2773 ;;		Nothing
  2774 ;; This function is called by:
  2775 ;;		_main
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779                           	psect	text19
  2780  00F312                     __ptext19:
  2781                           	callstack 0
  2782  00F312                     _EUSART1_Write:
  2783                           	callstack 30
  2784                           
  2785                           ; BSR set to: 14
  2786                           ;incstack = 0
  2787                           ;EUSART1_Write@txData stored from wreg
  2788  00F312  6E01               	movwf	EUSART1_Write@txData^0,c
  2789  00F314                     l214:
  2790                           
  2791                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR3bits.TX1IF)
  2792  00F314  010E               	movlb	14	; () banked
  2793  00F316  A9CD               	btfss	205,4,b	;volatile
  2794  00F318  EF90  F079         	goto	u121
  2795  00F31C  EF92  F079         	goto	u120
  2796  00F320                     u121:
  2797  00F320  EF8A  F079         	goto	l214
  2798  00F324                     u120:
  2799  00F324                     
  2800                           ; BSR set to: 14
  2801                           ;mcc_generated_files/eusart1.c: 138:     TX1REG = txData;
  2802  00F324  C001  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
  2803  00F328                     
  2804                           ; BSR set to: 14
  2805  00F328  0012               	return		;funcret
  2806  00F32A                     __end_of_EUSART1_Write:
  2807                           	callstack 0
  2808                           
  2809 ;; *************** function _Ds_Separar_Digito *****************
  2810 ;; Defined at:
  2811 ;;		line 170 in file "main.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;  dsp             2    7[COMRAM] PTR struct Paquete_Salid
  2814 ;;		 -> main@My_Paquete_Salida(4), 
  2815 ;;  datto           2    9[COMRAM] unsigned short 
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;		None
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  1    wreg      void 
  2820 ;; Registers used:
  2821 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2827 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2830 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2831 ;;Total ram usage:        4 bytes
  2832 ;; Hardware stack levels used:    1
  2833 ;; Hardware stack levels required when called:    1
  2834 ;; This function calls:
  2835 ;;		___lwdiv
  2836 ;;		___lwmod
  2837 ;; This function is called by:
  2838 ;;		_main
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           	psect	text20
  2843  00F676                     __ptext20:
  2844                           	callstack 0
  2845  00F676                     _Ds_Separar_Digito:
  2846                           	callstack 29
  2847  00F676                     
  2848                           ;main.c: 171:                 dsp-> Pack[3] = datto % 10;
  2849  00F676  EE20 F003          	lfsr	2,3
  2850  00F67A  5008               	movf	Ds_Separar_Digito@dsp^0,w,c
  2851  00F67C  26D9               	addwf	fsr2l,f,c
  2852  00F67E  5009               	movf	(Ds_Separar_Digito@dsp+1)^0,w,c
  2853  00F680  22DA               	addwfc	fsr2h,f,c
  2854  00F682  C00A  F001         	movff	Ds_Separar_Digito@datto,___lwmod@dividend
  2855  00F686  C00B  F002         	movff	Ds_Separar_Digito@datto+1,___lwmod@dividend+1
  2856  00F68A  0E00               	movlw	0
  2857  00F68C  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2858  00F68E  0E0A               	movlw	10
  2859  00F690  6E03               	movwf	___lwmod@divisor^0,c
  2860  00F692  EC8F  F07A         	call	___lwmod	;wreg free
  2861  00F696  5001               	movf	?___lwmod^0,w,c
  2862  00F698  6EDF               	movwf	indf2,c
  2863  00F69A                     
  2864                           ;main.c: 172:                 datto = datto/10;
  2865  00F69A  C00A  F001         	movff	Ds_Separar_Digito@datto,___lwdiv@dividend
  2866  00F69E  C00B  F002         	movff	Ds_Separar_Digito@datto+1,___lwdiv@dividend+1
  2867  00F6A2  0E00               	movlw	0
  2868  00F6A4  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2869  00F6A6  0E0A               	movlw	10
  2870  00F6A8  6E03               	movwf	___lwdiv@divisor^0,c
  2871  00F6AA  ECC1  F07A         	call	___lwdiv	;wreg free
  2872  00F6AE  C001  F00A         	movff	?___lwdiv,Ds_Separar_Digito@datto
  2873  00F6B2  C002  F00B         	movff	?___lwdiv+1,Ds_Separar_Digito@datto+1
  2874  00F6B6                     
  2875                           ;main.c: 173:     dsp->Pack[2] = datto % 10;
  2876  00F6B6  EE20 F002          	lfsr	2,2
  2877  00F6BA  5008               	movf	Ds_Separar_Digito@dsp^0,w,c
  2878  00F6BC  26D9               	addwf	fsr2l,f,c
  2879  00F6BE  5009               	movf	(Ds_Separar_Digito@dsp+1)^0,w,c
  2880  00F6C0  22DA               	addwfc	fsr2h,f,c
  2881  00F6C2  C00A  F001         	movff	Ds_Separar_Digito@datto,___lwmod@dividend
  2882  00F6C6  C00B  F002         	movff	Ds_Separar_Digito@datto+1,___lwmod@dividend+1
  2883  00F6CA  0E00               	movlw	0
  2884  00F6CC  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2885  00F6CE  0E0A               	movlw	10
  2886  00F6D0  6E03               	movwf	___lwmod@divisor^0,c
  2887  00F6D2  EC8F  F07A         	call	___lwmod	;wreg free
  2888  00F6D6  5001               	movf	?___lwmod^0,w,c
  2889  00F6D8  6EDF               	movwf	indf2,c
  2890                           
  2891                           ;main.c: 174:     datto = datto/10;
  2892  00F6DA  C00A  F001         	movff	Ds_Separar_Digito@datto,___lwdiv@dividend
  2893  00F6DE  C00B  F002         	movff	Ds_Separar_Digito@datto+1,___lwdiv@dividend+1
  2894  00F6E2  0E00               	movlw	0
  2895  00F6E4  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2896  00F6E6  0E0A               	movlw	10
  2897  00F6E8  6E03               	movwf	___lwdiv@divisor^0,c
  2898  00F6EA  ECC1  F07A         	call	___lwdiv	;wreg free
  2899  00F6EE  C001  F00A         	movff	?___lwdiv,Ds_Separar_Digito@datto
  2900  00F6F2  C002  F00B         	movff	?___lwdiv+1,Ds_Separar_Digito@datto+1
  2901  00F6F6                     
  2902                           ;main.c: 175:     dsp->Pack[1] = datto % 10;
  2903  00F6F6  EE20 F001          	lfsr	2,1
  2904  00F6FA  5008               	movf	Ds_Separar_Digito@dsp^0,w,c
  2905  00F6FC  26D9               	addwf	fsr2l,f,c
  2906  00F6FE  5009               	movf	(Ds_Separar_Digito@dsp+1)^0,w,c
  2907  00F700  22DA               	addwfc	fsr2h,f,c
  2908  00F702  C00A  F001         	movff	Ds_Separar_Digito@datto,___lwmod@dividend
  2909  00F706  C00B  F002         	movff	Ds_Separar_Digito@datto+1,___lwmod@dividend+1
  2910  00F70A  0E00               	movlw	0
  2911  00F70C  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2912  00F70E  0E0A               	movlw	10
  2913  00F710  6E03               	movwf	___lwmod@divisor^0,c
  2914  00F712  EC8F  F07A         	call	___lwmod	;wreg free
  2915  00F716  5001               	movf	?___lwmod^0,w,c
  2916  00F718  6EDF               	movwf	indf2,c
  2917  00F71A                     
  2918                           ;main.c: 176:     datto = datto/10;
  2919  00F71A  C00A  F001         	movff	Ds_Separar_Digito@datto,___lwdiv@dividend
  2920  00F71E  C00B  F002         	movff	Ds_Separar_Digito@datto+1,___lwdiv@dividend+1
  2921  00F722  0E00               	movlw	0
  2922  00F724  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2923  00F726  0E0A               	movlw	10
  2924  00F728  6E03               	movwf	___lwdiv@divisor^0,c
  2925  00F72A  ECC1  F07A         	call	___lwdiv	;wreg free
  2926  00F72E  C001  F00A         	movff	?___lwdiv,Ds_Separar_Digito@datto
  2927  00F732  C002  F00B         	movff	?___lwdiv+1,Ds_Separar_Digito@datto+1
  2928                           
  2929                           ;main.c: 177:     dsp->Pack[0] = datto % 10;
  2930  00F736  C00A  F001         	movff	Ds_Separar_Digito@datto,___lwmod@dividend
  2931  00F73A  C00B  F002         	movff	Ds_Separar_Digito@datto+1,___lwmod@dividend+1
  2932  00F73E  0E00               	movlw	0
  2933  00F740  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2934  00F742  0E0A               	movlw	10
  2935  00F744  6E03               	movwf	___lwmod@divisor^0,c
  2936  00F746  EC8F  F07A         	call	___lwmod	;wreg free
  2937  00F74A  5001               	movf	?___lwmod^0,w,c
  2938  00F74C  C008  FFD9         	movff	Ds_Separar_Digito@dsp,fsr2l
  2939  00F750  C009  FFDA         	movff	Ds_Separar_Digito@dsp+1,fsr2h
  2940  00F754  6EDF               	movwf	indf2,c
  2941  00F756  0012               	return		;funcret
  2942  00F758                     __end_of_Ds_Separar_Digito:
  2943                           	callstack 0
  2944                           
  2945 ;; *************** function ___lwmod *****************
  2946 ;; Defined at:
  2947 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwmod.c"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;  dividend        2    0[COMRAM] unsigned int 
  2950 ;;  divisor         2    2[COMRAM] unsigned int 
  2951 ;; Auto vars:     Size  Location     Type
  2952 ;;  counter         1    4[COMRAM] unsigned char 
  2953 ;; Return value:  Size  Location     Type
  2954 ;;                  2    0[COMRAM] unsigned int 
  2955 ;; Registers used:
  2956 ;;		wreg, status,2, status,0
  2957 ;; Tracked objects:
  2958 ;;		On entry : 0/0
  2959 ;;		On exit  : 0/0
  2960 ;;		Unchanged: 0/0
  2961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2962 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2963 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2965 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2966 ;;Total ram usage:        5 bytes
  2967 ;; Hardware stack levels used:    1
  2968 ;; This function calls:
  2969 ;;		Nothing
  2970 ;; This function is called by:
  2971 ;;		_Ds_Separar_Digito
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           	psect	text21
  2976  00F51E                     __ptext21:
  2977                           	callstack 0
  2978  00F51E                     ___lwmod:
  2979                           	callstack 29
  2980  00F51E  5003               	movf	___lwmod@divisor^0,w,c
  2981  00F520  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  2982  00F522  B4D8               	btfsc	status,2,c
  2983  00F524  EF96  F07A         	goto	u581
  2984  00F528  EF98  F07A         	goto	u580
  2985  00F52C                     u581:
  2986  00F52C  EFBC  F07A         	goto	l1057
  2987  00F530                     u580:
  2988  00F530  0E01               	movlw	1
  2989  00F532  6E05               	movwf	___lwmod@counter^0,c
  2990  00F534  EFA0  F07A         	goto	l1825
  2991  00F538                     l1823:
  2992  00F538  90D8               	bcf	status,0,c
  2993  00F53A  3603               	rlcf	___lwmod@divisor^0,f,c
  2994  00F53C  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  2995  00F53E  2A05               	incf	___lwmod@counter^0,f,c
  2996  00F540                     l1825:
  2997  00F540  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  2998  00F542  EFA5  F07A         	goto	u591
  2999  00F546  EFA7  F07A         	goto	u590
  3000  00F54A                     u591:
  3001  00F54A  EF9C  F07A         	goto	l1823
  3002  00F54E                     u590:
  3003  00F54E                     l1827:
  3004  00F54E  5003               	movf	___lwmod@divisor^0,w,c
  3005  00F550  5C01               	subwf	___lwmod@dividend^0,w,c
  3006  00F552  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3007  00F554  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  3008  00F556  A0D8               	btfss	status,0,c
  3009  00F558  EFB0  F07A         	goto	u601
  3010  00F55C  EFB2  F07A         	goto	u600
  3011  00F560                     u601:
  3012  00F560  EFB6  F07A         	goto	l1831
  3013  00F564                     u600:
  3014  00F564  5003               	movf	___lwmod@divisor^0,w,c
  3015  00F566  5E01               	subwf	___lwmod@dividend^0,f,c
  3016  00F568  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3017  00F56A  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  3018  00F56C                     l1831:
  3019  00F56C  90D8               	bcf	status,0,c
  3020  00F56E  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  3021  00F570  3203               	rrcf	___lwmod@divisor^0,f,c
  3022  00F572  2E05               	decfsz	___lwmod@counter^0,f,c
  3023  00F574  EFA7  F07A         	goto	l1827
  3024  00F578                     l1057:
  3025  00F578  C001  F001         	movff	___lwmod@dividend,?___lwmod
  3026  00F57C  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  3027  00F580  0012               	return		;funcret
  3028  00F582                     __end_of___lwmod:
  3029                           	callstack 0
  3030                           
  3031 ;; *************** function ___lwdiv *****************
  3032 ;; Defined at:
  3033 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwdiv.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;  dividend        2    0[COMRAM] unsigned int 
  3036 ;;  divisor         2    2[COMRAM] unsigned int 
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;  quotient        2    4[COMRAM] unsigned int 
  3039 ;;  counter         1    6[COMRAM] unsigned char 
  3040 ;; Return value:  Size  Location     Type
  3041 ;;                  2    0[COMRAM] unsigned int 
  3042 ;; Registers used:
  3043 ;;		wreg, status,2, status,0
  3044 ;; Tracked objects:
  3045 ;;		On entry : 0/0
  3046 ;;		On exit  : 0/0
  3047 ;;		Unchanged: 0/0
  3048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3049 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3050 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3052 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3053 ;;Total ram usage:        7 bytes
  3054 ;; Hardware stack levels used:    1
  3055 ;; This function calls:
  3056 ;;		Nothing
  3057 ;; This function is called by:
  3058 ;;		_Procese_Dato_Rebido
  3059 ;;		_Ds_Separar_Digito
  3060 ;; This function uses a non-reentrant model
  3061 ;;
  3062                           
  3063                           	psect	text22
  3064  00F582                     __ptext22:
  3065                           	callstack 0
  3066  00F582                     ___lwdiv:
  3067                           	callstack 29
  3068  00F582  0E00               	movlw	0
  3069  00F584  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  3070  00F586  0E00               	movlw	0
  3071  00F588  6E05               	movwf	___lwdiv@quotient^0,c
  3072  00F58A  5003               	movf	___lwdiv@divisor^0,w,c
  3073  00F58C  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3074  00F58E  B4D8               	btfsc	status,2,c
  3075  00F590  EFCC  F07A         	goto	u551
  3076  00F594  EFCE  F07A         	goto	u550
  3077  00F598                     u551:
  3078  00F598  EFF6  F07A         	goto	l1047
  3079  00F59C                     u550:
  3080  00F59C  0E01               	movlw	1
  3081  00F59E  6E07               	movwf	___lwdiv@counter^0,c
  3082  00F5A0  EFD6  F07A         	goto	l1805
  3083  00F5A4                     l1803:
  3084  00F5A4  90D8               	bcf	status,0,c
  3085  00F5A6  3603               	rlcf	___lwdiv@divisor^0,f,c
  3086  00F5A8  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3087  00F5AA  2A07               	incf	___lwdiv@counter^0,f,c
  3088  00F5AC                     l1805:
  3089  00F5AC  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  3090  00F5AE  EFDB  F07A         	goto	u561
  3091  00F5B2  EFDD  F07A         	goto	u560
  3092  00F5B6                     u561:
  3093  00F5B6  EFD2  F07A         	goto	l1803
  3094  00F5BA                     u560:
  3095  00F5BA                     l1807:
  3096  00F5BA  90D8               	bcf	status,0,c
  3097  00F5BC  3605               	rlcf	___lwdiv@quotient^0,f,c
  3098  00F5BE  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3099  00F5C0  5003               	movf	___lwdiv@divisor^0,w,c
  3100  00F5C2  5C01               	subwf	___lwdiv@dividend^0,w,c
  3101  00F5C4  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3102  00F5C6  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3103  00F5C8  A0D8               	btfss	status,0,c
  3104  00F5CA  EFE9  F07A         	goto	u571
  3105  00F5CE  EFEB  F07A         	goto	u570
  3106  00F5D2                     u571:
  3107  00F5D2  EFF0  F07A         	goto	l1815
  3108  00F5D6                     u570:
  3109  00F5D6  5003               	movf	___lwdiv@divisor^0,w,c
  3110  00F5D8  5E01               	subwf	___lwdiv@dividend^0,f,c
  3111  00F5DA  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3112  00F5DC  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3113  00F5DE  8005               	bsf	___lwdiv@quotient^0,0,c
  3114  00F5E0                     l1815:
  3115  00F5E0  90D8               	bcf	status,0,c
  3116  00F5E2  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3117  00F5E4  3203               	rrcf	___lwdiv@divisor^0,f,c
  3118  00F5E6  2E07               	decfsz	___lwdiv@counter^0,f,c
  3119  00F5E8  EFDD  F07A         	goto	l1807
  3120  00F5EC                     l1047:
  3121  00F5EC  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3122  00F5F0  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3123  00F5F4  0012               	return		;funcret
  3124  00F5F6                     __end_of___lwdiv:
  3125                           	callstack 0
  3126                           
  3127 ;; *************** function _ADCC_IsConversionDone *****************
  3128 ;; Defined at:
  3129 ;;		line 119 in file "mcc_generated_files/adcc.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;		None
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;		None
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  1    wreg      _Bool 
  3136 ;; Registers used:
  3137 ;;		wreg
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3147 ;;Total ram usage:        0 bytes
  3148 ;; Hardware stack levels used:    1
  3149 ;; This function calls:
  3150 ;;		Nothing
  3151 ;; This function is called by:
  3152 ;;		_main
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           	psect	text23
  3157  00F2D2                     __ptext23:
  3158                           	callstack 0
  3159  00F2D2                     _ADCC_IsConversionDone:
  3160                           	callstack 30
  3161  00F2D2                     
  3162                           ;mcc_generated_files/adcc.c: 122:     return ((unsigned char)(!ADCON0bits.ADGO));
  3163  00F2D2  A060               	btfss	96,0,c	;volatile
  3164  00F2D4  EF6E  F079         	goto	u131
  3165  00F2D8  EF71  F079         	goto	u130
  3166  00F2DC                     u131:
  3167  00F2DC  0E01               	movlw	1
  3168  00F2DE  EF72  F079         	goto	u140
  3169  00F2E2                     u130:
  3170  00F2E2  0E00               	movlw	0
  3171  00F2E4                     u140:
  3172  00F2E4  0012               	return		;funcret
  3173  00F2E6                     __end_of_ADCC_IsConversionDone:
  3174                           	callstack 0
  3175                           
  3176 ;; *************** function _ADCC_GetConversionResult *****************
  3177 ;; Defined at:
  3178 ;;		line 125 in file "mcc_generated_files/adcc.c"
  3179 ;; Parameters:    Size  Location     Type
  3180 ;;		None
  3181 ;; Auto vars:     Size  Location     Type
  3182 ;;		None
  3183 ;; Return value:  Size  Location     Type
  3184 ;;                  2    0[COMRAM] unsigned short 
  3185 ;; Registers used:
  3186 ;;		wreg, status,2, status,0
  3187 ;; Tracked objects:
  3188 ;;		On entry : 0/0
  3189 ;;		On exit  : 0/0
  3190 ;;		Unchanged: 0/0
  3191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3192 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3194 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3195 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3196 ;;Total ram usage:        4 bytes
  3197 ;; Hardware stack levels used:    1
  3198 ;; This function calls:
  3199 ;;		Nothing
  3200 ;; This function is called by:
  3201 ;;		_main
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           	psect	text24
  3206  00F2BE                     __ptext24:
  3207                           	callstack 0
  3208  00F2BE                     _ADCC_GetConversionResult:
  3209                           	callstack 30
  3210  00F2BE                     
  3211                           ;mcc_generated_files/adcc.c: 128:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3212  00F2BE  5064               	movf	100,w,c	;volatile
  3213  00F2C0  6E04               	movwf	(??_ADCC_GetConversionResult+1)^0,c
  3214  00F2C2  6A03               	clrf	??_ADCC_GetConversionResult^0,c
  3215  00F2C4  5063               	movf	99,w,c	;volatile
  3216  00F2C6  2403               	addwf	??_ADCC_GetConversionResult^0,w,c
  3217  00F2C8  6E01               	movwf	?_ADCC_GetConversionResult^0,c
  3218  00F2CA  0E00               	movlw	0
  3219  00F2CC  2004               	addwfc	(??_ADCC_GetConversionResult+1)^0,w,c
  3220  00F2CE  6E02               	movwf	(?_ADCC_GetConversionResult+1)^0,c
  3221  00F2D0  0012               	return		;funcret
  3222  00F2D2                     __end_of_ADCC_GetConversionResult:
  3223                           	callstack 0
  3224  0000                     
  3225                           	psect	rparam
  3226  0000                     
  3227                           	psect	idloc
  3228                           
  3229                           ;Config register IDLOC0 @ 0x200000
  3230                           ;	unspecified, using default values
  3231  200000                     	org	2097152
  3232  200000  0FFF               	dw	4095
  3233                           
  3234                           ;Config register IDLOC1 @ 0x200002
  3235                           ;	unspecified, using default values
  3236  200002                     	org	2097154
  3237  200002  0FFF               	dw	4095
  3238                           
  3239                           ;Config register IDLOC2 @ 0x200004
  3240                           ;	unspecified, using default values
  3241  200004                     	org	2097156
  3242  200004  0FFF               	dw	4095
  3243                           
  3244                           ;Config register IDLOC3 @ 0x200006
  3245                           ;	unspecified, using default values
  3246  200006                     	org	2097158
  3247  200006  0FFF               	dw	4095
  3248                           
  3249                           ;Config register IDLOC4 @ 0x200008
  3250                           ;	unspecified, using default values
  3251  200008                     	org	2097160
  3252  200008  0FFF               	dw	4095
  3253                           
  3254                           ;Config register IDLOC5 @ 0x20000A
  3255                           ;	unspecified, using default values
  3256  20000A                     	org	2097162
  3257  20000A  0FFF               	dw	4095
  3258                           
  3259                           ;Config register IDLOC6 @ 0x20000C
  3260                           ;	unspecified, using default values
  3261  20000C                     	org	2097164
  3262  20000C  0FFF               	dw	4095
  3263                           
  3264                           ;Config register IDLOC7 @ 0x20000E
  3265                           ;	unspecified, using default values
  3266  20000E                     	org	2097166
  3267  20000E  0FFF               	dw	4095
  3268                           
  3269                           	psect	config
  3270                           
  3271                           ;Config register CONFIG1L @ 0x300000
  3272                           ;	External Oscillator mode Selection bits
  3273                           ;	FEXTOSC = OFF, Oscillator not enabled
  3274                           ;	Power-up default value for COSC bits
  3275                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  3276  300000                     	org	3145728
  3277  300000  8C                 	db	140
  3278                           
  3279                           ;Config register CONFIG1H @ 0x300001
  3280                           ;	Clock Out Enable bit
  3281                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3282                           ;	Clock Switch Enable bit
  3283                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3284                           ;	Fail-Safe Clock Monitor Enable bit
  3285                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3286  300001                     	org	3145729
  3287  300001  FF                 	db	255
  3288                           
  3289                           ;Config register CONFIG2L @ 0x300002
  3290                           ;	Master Clear Enable bit
  3291                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3292                           ;	Power-up Timer Enable bit
  3293                           ;	PWRTE = OFF, Power up timer disabled
  3294                           ;	Low-power BOR enable bit
  3295                           ;	LPBOREN = OFF, ULPBOR disabled
  3296                           ;	Brown-out Reset Enable bits
  3297                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  3298  300002                     	org	3145730
  3299  300002  FF                 	db	255
  3300                           
  3301                           ;Config register CONFIG2H @ 0x300003
  3302                           ;	Brown Out Reset Voltage selection bits
  3303                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  3304                           ;	ZCD Disable bit
  3305                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  3306                           ;	PPSLOCK bit One-Way Set Enable bit
  3307                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  3308                           ;	Stack Full/Underflow Reset Enable bit
  3309                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3310                           ;	Debugger Enable bit
  3311                           ;	DEBUG = OFF, Background debugger disabled
  3312                           ;	Extended Instruction Set Enable bit
  3313                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3314  300003                     	org	3145731
  3315  300003  FF                 	db	255
  3316                           
  3317                           ;Config register CONFIG3L @ 0x300004
  3318                           ;	WDT Period Select bits
  3319                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3320                           ;	WDT operating mode
  3321                           ;	WDTE = OFF, WDT Disabled
  3322  300004                     	org	3145732
  3323  300004  9F                 	db	159
  3324                           
  3325                           ;Config register CONFIG3H @ 0x300005
  3326                           ;	WDT Window Select bits
  3327                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3328                           ;	WDT input clock selector
  3329                           ;	WDTCCS = SC, Software Control
  3330  300005                     	org	3145733
  3331  300005  FF                 	db	255
  3332                           
  3333                           ;Config register CONFIG4L @ 0x300006
  3334                           ;	Write Protection Block 0
  3335                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3336                           ;	Write Protection Block 1
  3337                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3338                           ;	Write Protection Block 2
  3339                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3340                           ;	Write Protection Block 3
  3341                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3342  300006                     	org	3145734
  3343  300006  FF                 	db	255
  3344                           
  3345                           ;Config register CONFIG4H @ 0x300007
  3346                           ;	Configuration Register Write Protection bit
  3347                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  3348                           ;	Boot Block Write Protection bit
  3349                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3350                           ;	Data EEPROM Write Protection bit
  3351                           ;	WRTD = OFF, Data EEPROM not write-protected
  3352                           ;	Scanner Enable bit
  3353                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  3354                           ;	Low Voltage Programming Enable bit
  3355                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  3356  300007                     	org	3145735
  3357  300007  FF                 	db	255
  3358                           
  3359                           ;Config register CONFIG5L @ 0x300008
  3360                           ;	UserNVM Program Memory Code Protection bit
  3361                           ;	CP = OFF, UserNVM code protection disabled
  3362                           ;	DataNVM Memory Code Protection bit
  3363                           ;	CPD = OFF, DataNVM code protection disabled
  3364  300008                     	org	3145736
  3365  300008  FF                 	db	255
  3366                           
  3367                           ;Config register CONFIG5H @ 0x300009
  3368                           ;	unspecified, using default values
  3369  300009                     	org	3145737
  3370  300009  FF                 	db	255
  3371                           
  3372                           ;Config register CONFIG6L @ 0x30000A
  3373                           ;	Table Read Protection Block 0
  3374                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3375                           ;	Table Read Protection Block 1
  3376                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3377                           ;	Table Read Protection Block 2
  3378                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3379                           ;	Table Read Protection Block 3
  3380                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3381  30000A                     	org	3145738
  3382  30000A  FF                 	db	255
  3383                           
  3384                           ;Config register CONFIG6H @ 0x30000B
  3385                           ;	Boot Block Table Read Protection bit
  3386                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3387  30000B                     	org	3145739
  3388  30000B  FF                 	db	255
  3389                           tosu	equ	0xFFF
  3390                           tosh	equ	0xFFE
  3391                           tosl	equ	0xFFD
  3392                           stkptr	equ	0xFFC
  3393                           pclatu	equ	0xFFB
  3394                           pclath	equ	0xFFA
  3395                           pcl	equ	0xFF9
  3396                           tblptru	equ	0xFF8
  3397                           tblptrh	equ	0xFF7
  3398                           tblptrl	equ	0xFF6
  3399                           tablat	equ	0xFF5
  3400                           prodh	equ	0xFF4
  3401                           prodl	equ	0xFF3
  3402                           indf0	equ	0xFEF
  3403                           postinc0	equ	0xFEE
  3404                           postdec0	equ	0xFED
  3405                           preinc0	equ	0xFEC
  3406                           plusw0	equ	0xFEB
  3407                           fsr0h	equ	0xFEA
  3408                           fsr0l	equ	0xFE9
  3409                           wreg	equ	0xFE8
  3410                           indf1	equ	0xFE7
  3411                           postinc1	equ	0xFE6
  3412                           postdec1	equ	0xFE5
  3413                           preinc1	equ	0xFE4
  3414                           plusw1	equ	0xFE3
  3415                           fsr1h	equ	0xFE2
  3416                           fsr1l	equ	0xFE1
  3417                           bsr	equ	0xFE0
  3418                           indf2	equ	0xFDF
  3419                           postinc2	equ	0xFDE
  3420                           postdec2	equ	0xFDD
  3421                           preinc2	equ	0xFDC
  3422                           plusw2	equ	0xFDB
  3423                           fsr2h	equ	0xFDA
  3424                           fsr2l	equ	0xFD9
  3425                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         16
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     23      45
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    Ds_Separar_Digito@dsp	PTR struct Paquete_Salida size(2) Largest target is 4
		 -> main@My_Paquete_Salida(COMRAM[4]), 

    Procese_UART@mqnt	PTR struct Maquinita size(2) Largest target is 5
		 -> main@My_Maquinita(COMRAM[5]), 

    Inicializar_Paquete@mqnt	PTR struct Paquete_Salida size(2) Largest target is 4
		 -> main@My_Paquete_Salida(COMRAM[4]), 

    Inicializar_Maquinita@mqnt	PTR struct Maquinita size(2) Largest target is 5
		 -> main@My_Maquinita(COMRAM[5]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_Ds_Separar_Digito
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _Procese_Dato_Rebido->___lwdiv
    _Ds_Separar_Digito->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    7338
                                             11 COMRAM    12    12      0
           _ADCC_GetConversionResult
                    _ADCC_Initialize
              _ADCC_IsConversionDone
                  _Ds_Separar_Digito
                      _EUSART1_Write
                _EUSART1_is_rx_ready
                _EUSART1_is_tx_ready
              _Inicializar_Maquinita
                _Inicializar_Paquete
                _Procese_Dato_Rebido
                       _Procese_UART
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                    _ADCC_Initialize
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Procese_UART                                         6     4      2     780
                                              0 COMRAM     6     4      2
                       _EUSART1_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Procese_Dato_Rebido                                  3     3      0    2449
                                              7 COMRAM     3     3      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Inicializar_Paquete                                  2     0      2     164
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Inicializar_Maquinita                                2     0      2     164
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_tx_ready                                  1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ds_Separar_Digito                                    4     0      4    3150
                                              7 COMRAM     4     0      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     767
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1986
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetConversionResult                             4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetConversionResult
   _ADCC_Initialize
   _ADCC_IsConversionDone
   _Ds_Separar_Digito
     ___lwdiv
     ___lwmod
   _EUSART1_Write
   _EUSART1_is_rx_ready
   _EUSART1_is_tx_ready
   _Inicializar_Maquinita
   _Inicializar_Paquete
   _Procese_Dato_Rebido
     ___lwdiv
     ___wmul
   _Procese_UART
     _EUSART1_Read
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR6_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     17      2D       1       47.4%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2D       6        0.0%
DATA                 0      0      2D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Sep 23 17:37:15 2021

                                            l27 F394                                              u10 F3F6  
                                            u11 F3F2                                              u20 F408  
                                            u21 F404                             ___wmul@multiplicand 0003  
                                           l211 F40E                                             l214 F314  
                                           l207 F3E6                                             l232 F2BC  
                                           l144 F674                                             l217 F328  
                                           l235 F2A8                                             l229 F2B2  
                                           l190 F48A                                             l503 FFFE  
                                           l351 F51C                                             l360 F2D0  
                                           l272 F35A                                             l506 F756  
                                           l194 F3E2                                             l195 F3E4  
                                           l275 F340                                             l357 F2E4  
                                           l198 F2FA                                             l278 F376  
                                           l518 F7B8                                             l472 F44C  
                                           l556 F3BA                                             l469 F4CC  
                                           l487 FBB0                                             u110 F2F8  
                                           u111 F2F2                                             u120 F324  
                                           u121 F320                                             u130 F2E2  
                                           u131 F2DC                                             u140 F2E4  
                                           u116 F2FA                                             u600 F564  
                                           u601 F560                                             u610 F3D0  
                                           _PR6 000FB0                                             u611 F3CC  
                                           u620 F3DE                                             u621 F3DA  
                                           u550 F59C                                             u710 FCC8  
                                           u630 F8B0                                             u551 F598  
                                           u711 FCC4                                             u631 F8AC  
                                           u560 F5BA                                             u800 FDFC  
                                           u720 FCDE                                             u640 FB22  
                                           u561 F5B6                                             u801 FDF8  
                                           u721 FCDA                                             u705 FC9E  
                                           u641 FB1E                                             u570 F5D6  
                                           u810 FE12                                             u730 FD14  
                                           u650 FC28                                             u571 F5D2  
                                           u811 FE0E                                             u731 FD10  
                                           u651 FC24                                             u580 F530  
                                           u900 FF46                                             u820 FE48  
                                           u740 FD2A                                             u660 FC3E  
                                           u581 F52C                                             u901 FF42  
                                           u821 FE44                                             u741 FD26  
                                           u661 FC3A                                             u590 F54E  
                                           u910 FF7C                                             u830 FE5E  
                                           u591 F54A                                             u911 FF78  
                                           u831 FE5A                                             u920 FF92  
                                           u760 FD64                                             u680 FC78  
                                           u921 FF8E                                             u761 FD60  
                                           u681 FC74                                             u930 FFC8  
                                           u850 FE98                                             u770 FD7A  
                                           u690 FC8E                                             u931 FFC4  
                                           u851 FE94                                             u771 FD76  
                                           u755 FD3A                                             u691 FC8A  
                                           u675 FC4E                                             u940 FFDE  
                                           u860 FEAE                                             u780 FDB0  
                                           u941 FFDA                                             u861 FEAA  
                                           u845 FE6E                                             u781 FDAC  
                                           u870 FEE4                                             u790 FDC6  
                                           u950 F79C                                             u871 FEE0  
                                           u791 FDC2                                             u951 F798  
                                           u880 FEFA                                             u960 F7B8  
                                           u881 FEF6                                             u961 F7B4  
                                           u890 FF30                                             u970 F7D6  
                                           u891 FF2C                                             u971 F7D2  
                                           u980 F80A                                             u981 F806  
                                           u990 F81E                                             u991 F81A  
                       __size_of_PMD_Initialize 001C                                             wreg 000FE8  
                   __end_of_Inicializar_Paquete F44E                                            l2001 FEB2  
                                          l2011 FF1A                                            l2003 FECE  
                                          l2021 FF7C                                            l2013 FF30  
                                          l2005 FEE4                                            l1054 F5F4  
                                          l1047 F5EC                                            l2031 FFDE  
                                          l2023 FF92                                            l2015 FF46  
                                          l2007 FEFA                                            l1064 F580  
                                          l1057 F578                                            l2041 F6F6  
                                          l2033 FFE2                                            l2025 FF96  
                                          l2017 FF4A                                            l2009 FEFE  
                                          l1241 F60E                                            l2043 F71A  
                                          l2035 F676                                            l2027 FFB2  
                                          l2019 FF66                                            l1251 F652  
                                          l1243 F610                                            l1235 F378  
                                          l2051 F774                                            l2037 F69A  
                                          l2029 FFC8                                            l1261 F660  
                                          l1253 F654                                            l1245 F61A  
                                          l1237 F38C                                            l2061 F784  
                                          l2053 F778                                            l2045 F758  
                                          l2039 F6B6                                            l2119 FB72  
                                          l1263 F662                                            l1255 F656  
                                          l1247 F622                                            l1239 F5F6  
                                          l2071 F7BA                                            l2063 F786  
                                          l2055 F778                                            l2047 F75C  
                                          l1281 F3FA                                            l1265 F664  
                                          l1257 F658                                            l1249 F628  
                                          l2081 F7F6                                            l2073 F7BE  
                                          l2065 F788                                            l2057 F77C  
                                          l2049 F768                                            l1363 F2E6  
                                          l1283 F408                                            l1291 F32A  
                                          l1259 F65E                                            l2091 F82A  
                                          l2083 F7FA                                            l2075 F7C2  
                                          l2067 F79C                                            l2059 F780  
                                          l1285 F40C                                            l1277 F3E6  
                                          l1293 F4CE                                            l2093 F832  
                                          l2085 F80A                                            l2077 F7D6  
                                          l2069 F7A8                                            l1375 F2D2  
                                          l1367 F314                                            l1279 F3F6  
                                          l2095 F83A                                            l2087 F81E  
                                          l2079 F7E2                                            l1801 F59C  
                                          l1369 F324                                            l1289 F35C  
                                          l2097 F842                                            l2089 F822  
                                          l1811 F5D6                                            l1803 F5A4  
                                          l1813 F5DE                                            l1805 F5AC  
                                          l1821 F530                                            l1901 FA3C  
                                          l1815 F5E0                                            l1807 F5BA  
                                          l1831 F56C                                            l1823 F538  
                                          l1911 FAE8                                            l1903 FA68  
                                          l1817 F5E6                                            l1809 F5C0  
                                          l1833 F572                                            l1825 F540  
                                          l1841 F3DE                                            l1913 FB22  
                                          l1905 FA8A                                            l1827 F54E  
                                          l1819 F51E                                            l1835 F3BC  
                                          l1931 FC12                                            l1915 FB2A  
                                          l1907 FA9A                                            l1923 FB52  
                                          l1829 F564                                            l1837 F3C0  
                                          l1853 F48C                                            l1861 F410  
                                          l1941 FC78                                            l1933 FC28  
                                          l1917 FB2E                                            l1909 FAC6  
                                          l1781 F44E                                            l1845 F342  
                                          l1839 F3D0                                            l1855 F49C  
                                          l1863 F41C                                            l1791 F396  
                                          l1951 FCDE                                            l1943 FC8E  
                                          l1935 FC3E                                            l1919 FB3E  
                                          l1871 F854                                            l1775 F2AA  
                                          l1783 F462                                            l1847 F356  
                                          l1849 F2BE                                            l1857 F4AC  
                                          l1865 F42C                                            l1793 F3B2  
                                          l1961 FD2E                                            l1953 FCE2  
                                          l1945 FC92                                            l1937 FC42  
                                          l1929 FBB2                                            l1881 F912  
                                          l1873 F876                                            l1777 F2B4  
                                          l1785 F46E                                            l1859 F4BC  
                                          l1867 F43C                                            l1971 FD9A  
                                          l1963 FD4E                                            l1955 FCFE  
                                          l1947 FCB2                                            l1939 FC62  
                                          l1891 F9AC                                            l1883 F922  
                                          l1875 F8B0                                            l1779 F2A0  
                                          l1787 F47A                                            l1797 F582  
                                          l1981 FDFC                                            l1973 FDB0  
                                          l1965 FD64                                            l1957 FD14  
                                          l1949 FCC8                                            l1893 F9CE  
                                          l1885 F94E                                            l1877 F8E8  
                                          l1869 F850                                            l1789 F486  
                                          l1799 F58A                                            l1991 FE5E  
                                          l1983 FE12                                            l1975 FDC6  
                                          l1967 FD7A                                            l1959 FD2A  
                                          l1895 F9DE                                            l1887 F970  
                                          l1879 F8F0                                            l1993 FE62  
                                          l1985 FE16                                            l1977 FDCA  
                                          l1969 FD7E                                            l1897 FA0A  
                                          l1889 F980                                            l1995 FE82  
                                          l1987 FE32                                            l1979 FDE6  
                                          l1899 FA2C                                            l1997 FE98  
                                          l1989 FE48                                            l1999 FEAE  
                    __size_of_Ds_Separar_Digito 00E2                                            _LATA 000F83  
                                          _LATB 000F84                                            _LATC 000F85  
                                          _LATD 000F86                                            _LATE 000F87  
                                          _T6PR 000FB0                                            _PMD0 000EE1  
                                          _PMD1 000EE2                                            _PMD2 000EE3  
                                          _PMD3 000EE4                                            _PMD4 000EE5  
                                          _PMD5 000EE6                                            _TMR6 000FAF  
                                          _WPUA 000F10                                            _WPUB 000F18  
                                          _WPUC 000F20                                            _WPUD 000F25  
                                          _WPUE 000F2D                                   _EUSART1_Write F312  
                                          _main F758                                   ?_EUSART1_Read 0001  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          fsr2l 000FD9                                            prodh 000FF4  
                                          prodl 000FF3                                            start 0000  
                                  ___param_bank 000000                  __size_of_OSCILLATOR_Initialize 0018  
                 __end_of_OSCILLATOR_Initialize F342                                           _ADACQ 000F5C  
                                         _ADCAP 000F5D                                           _ADACT 000F56  
                                         ?_main 0001                                           _ADCLK 000F57  
                                         _ADCNT 000F67                                           _ADPCH 000F5F  
                                         _ADREF 000F58                                           _ADPRE 000F5E  
                                         _ADRPT 000F66                                           _T6CON 000FB1  
                               __end_of___lwdiv F5F6                                           _T6HLT 000FB2  
                               __end_of___lwmod F582                                           _T6TMR 000FAF  
                                         _T6RST 000FB4                                           _OSCEN 000EDC  
                                         _TRISA 000F88                                           _TRISB 000F89  
                                         _TRISC 000F8A                                           _TRISD 000F8B  
                                         _TRISE 000F8C                         ??_ADCC_IsConversionDone 0001  
                                ?_EUSART1_Write 0001                                  ??_EUSART1_Read 0001  
                                         status 000FD8              _EUSART1_DefaultFramingErrorHandler 000000  
                                    _V_Recibido 0018                                 __initialization F2FC  
                    __end_of_EUSART1_Initialize F48C                                    __end_of_main F850  
                __size_of_Inicializar_Maquinita 0042                   __end_of_Inicializar_Maquinita F4CE  
                                        ??_main 000C                                   __activetblptr 000002  
                               _TMR6_Initialize F378                                          _ADACCH 000F71  
                                        _ADACCL 000F70                                          _ADCON0 000F60  
                                        _ADCON1 000F59                                          _ADCON2 000F5A  
                                        _ADCON3 000F5B                                          _ADERRH 000F6F  
                                        _ADERRL 000F6E                                          _ADLTHH 000F6B  
                                        _ADLTHL 000F6A                                          _ADRESH 000F64  
                                        _ADRESL 000F63                                          _ADSTAT 000F65  
                                        _ADUTHH 000F6D                                          _ADUTHL 000F6C  
                                        _ANSELA 000F11                                          _ANSELB 000F19  
                                        _ANSELC 000F21                                          _ANSELD 000F26  
                                        _ANSELE 000F2E                                          _RC1REG 000F99  
                                        _RC1PPS 000EF8                                          _RC1STA 000F9D  
                                        _ODCONA 000F0F                                          _ODCONB 000F17  
                                        _ODCONC 000F1F                                          _ODCOND 000F24  
                                        _ODCONE 000F2C                    __size_of_EUSART1_is_rx_ready 0016  
                                        _INLVLA 000F0D                                          _INLVLB 000F15  
                                        _INLVLC 000F1D                                          _INLVLD 000F22  
                                        _INLVLE 000F2A                                          _OSCFRQ 000EDE  
                  __size_of_EUSART1_is_tx_ready 002A                                          _RX1PPS 000EB5  
                                        _TX1REG 000F9A                                          _TX1STA 000F9E  
                    ??_ADCC_GetConversionResult 0003                           main@My_Paquete_Salida 000F  
                                        ___wmul F396                                       ??___lwdiv 0005  
                          Ds_Separar_Digito@dsp 0008                                       ??___lwmod 0005  
                                        _conteo 0023                        ?_EUSART1_SetErrorHandler 0001  
                   __end_of_Procese_Dato_Rebido 0000                                          clear_0 F302  
              ??_EUSART1_SetOverrunErrorHandler 0003                 ?_EUSART1_SetOverrunErrorHandler 0001  
                        _Transmision_Completada 0025                                 _ADCC_Initialize F4CE  
                                _PMD_Initialize F35C                                          tblptru 000FF8  
                               ??_EUSART1_Write 0001                               _SYSTEM_Initialize F342  
                                    __accesstop 0060                         __end_of__initialization F308  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                                __pcstackCOMRAM 0001                             ??_SYSTEM_Initialize 0003  
                       __end_of_TMR6_Initialize F396                          __end_of_PMD_Initialize F378  
                          __end_of_EUSART1_Read F410                       __end_of_SYSTEM_Initialize F35C  
                                    __pnvCOMRAM 0028                 __end_of_EUSART1_SetErrorHandler F2AA  
                                       ?___wmul 0001                         __end_of_ADCC_Initialize F51E  
                                       _ADFLTRH 000F73                                         _ADFLTRL 000F72  
                                       _ADPREVH 000F62                                         _ADPREVL 000F61  
                                       _ADSTPTH 000F69                                         _ADSTPTL 000F68  
                               ?_PMD_Initialize 0001          __end_of_EUSART1_SetFramingErrorHandler F2B4  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler F2AA  
                                       _SP1BRGH 000F9C                                         _SP1BRGL 000F9B  
                                       _OSCCON1 000ED8                                         _OSCCON3 000EDA  
                                       _OSCTUNE 000EDD                                         _SLRCONA 000F0E  
                                       _SLRCONB 000F16                                         _SLRCONC 000F1E  
                                       _SLRCOND 000F23                                         _SLRCONE 000F2B  
                __size_of_ADCC_IsConversionDone 0014                   __end_of_ADCC_IsConversionDone F2E6  
                  __size_of_Inicializar_Paquete 003E                                   ?_Procese_UART 0001  
                                       __Hparam 0000                                         __Lparam 0000  
                               __size_of___wmul 0026                                         ___lwdiv F582  
                                       ___lwmod F51E                             _EUSART1_is_rx_ready F2E6  
                                       __pcinit F2FC                                ?_TMR6_Initialize 0001  
                                       __ramtop 0F00                             _EUSART1_is_tx_ready F3BC  
                                       __ptext0 F758                                         __ptext1 F342  
                                       __ptext2 F378                                         __ptext3 F35C  
                                       __ptext4 F5F6                                         __ptext5 F32A  
                                       __ptext6 F44E                                         __ptext7 F2B4  
                                       __ptext8 F2AA                                         __ptext9 F2A0  
                         _OSCILLATOR_Initialize F32A                              _EUSART1_Initialize F44E  
                      ??_PIN_MANAGER_Initialize 0001                                       _T6CONbits 000FB1  
                                     _T6HLTbits 000FB2                      __size_of_SYSTEM_Initialize 001A  
                          end_of_initialization F308                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                            ?_EUSART1_is_tx_ready 0001  
                                 __Lmediumconst 0000                     _EUSART1_OverrunErrorHandler 002A  
                                     _T6RSTbits 000FB4                                  ??_Procese_UART 0003  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 002A                                ?_ADCC_Initialize 0001  
                          ??_EUSART1_Initialize 0003                           _Inicializar_Maquinita F48C  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 0001  
                         ??_EUSART1_is_rx_ready 0001                           ??_EUSART1_is_tx_ready 0001  
                                  _EUSART1_Read F3E6                                      main@enviar 000E  
                              main@My_Maquinita 0013                                  __end_of___wmul F3BC  
                        ?_OSCILLATOR_Initialize 0001               __size_of_ADCC_GetConversionResult 0014  
                     ?_ADCC_GetConversionResult 0001                             start_initialization F2FC  
                  __size_of_Procese_Dato_Rebido 044E                 __size_of_PIN_MANAGER_Initialize 0080  
                         __end_of_EUSART1_Write F32A                                ??_PMD_Initialize 0001  
                                      ??___wmul 0005                         Inicializar_Paquete@mqnt 0001  
                        ?_Inicializar_Maquinita 0001                             _Inicializar_Paquete F410  
                          __end_of_Procese_UART FBB2                                     __pbssCOMRAM 0018  
              ??_EUSART1_SetFramingErrorHandler 0003                 ?_EUSART1_SetFramingErrorHandler 0001  
                          ?_Inicializar_Paquete 0001                       Inicializar_Maquinita@mqnt 0001  
                              ___lwdiv@dividend 0001                          _PIN_MANAGER_Initialize F5F6  
                       _EUSART1_is_tx_ready$556 0001                                        ?___lwdiv 0001  
                                      ?___lwmod 0001                                        _BAUD1CON 000F9F  
            _EUSART1_DefaultOverrunErrorHandler 000000                            _EUSART1_ErrorHandler 0028  
                       _EUSART1_SetErrorHandler F2A0                                ___lwdiv@quotient 0005  
                                      _T6CLKCON 000FB3                                       _recibidoo 001F  
                         _ADCC_IsConversionDone F2D2                                  ___wmul@product 0005  
       EUSART1_SetErrorHandler@interruptHandler 0001                                        _LATDbits 000F86  
                         ??_Inicializar_Paquete 0003                                        _PIR3bits 000ECD  
                                      _PIR4bits 000ECE                                      _ADCON0bits 000F60  
                                    _ADCON1bits 000F59                                      _ADCON2bits 000F5A  
                                    _ADCON3bits 000F5B                               ___wmul@multiplier 0001  
                      __size_of_TMR6_Initialize 001E                                      _ADSTATbits 000F65  
                                      __Hrparam 0000                __end_of_ADCC_GetConversionResult F2D2  
                           _Procese_Dato_Rebido FBB2                                        __Lrparam 0000  
                       ??_OSCILLATOR_Initialize 0001                                Procese_UART@mqnt 0001  
                   __size_of_EUSART1_Initialize 003E                                __size_of___lwdiv 0074  
                         __size_of_Procese_UART 0362                                __size_of___lwmod 0064  
                     ??_EUSART1_SetErrorHandler 0003                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready F2FC                        __size_of_ADCC_Initialize 0050  
                          ?_Procese_Dato_Rebido 0001                     __end_of_EUSART1_is_tx_ready F3E6  
                               ___lwdiv@divisor 0003                                 ___lwdiv@counter 0007  
                        Ds_Separar_Digito@datto 000A                                        __ptext10 F4CE  
                                      __ptext11 F850                                        __ptext20 F676  
                                      __ptext12 F3E6                                        __ptext21 F51E  
                                      __ptext13 FBB2                                        __ptext22 F582  
                                      __ptext14 F396                                        __ptext23 F2D2  
                                      __ptext15 F410                                        __ptext24 F2BE  
                                      __ptext16 F48C                                        __ptext17 F3BC  
                                      __ptext18 F2E6                                        __ptext19 F312  
                        ?_ADCC_IsConversionDone 0001                               _Ds_Separar_Digito F676  
                                 __size_of_main 00F8                                        _recibido 0021  
                            ?_Ds_Separar_Digito 0008                                    _Procese_UART F850  
                                    _RC1STAbits 000F9D  EUSART1_SetOverrunErrorHandler@interruptHandler 0001  
                           ??_Ds_Separar_Digito 000C                                   main@ADC_Value 000C  
                       ??_Inicializar_Maquinita 0003                               _Transmision_Error 0026  
                   _EUSART1_FramingErrorHandler 002C                           ??_Procese_Dato_Rebido 0008  
                     __end_of_Ds_Separar_Digito F758                                ___lwmod@dividend 0001  
                       ?_PIN_MANAGER_Initialize 0001                               ??_TMR6_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler F2BE         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler F2B4  EUSART1_SetFramingErrorHandler@interruptHandler 0001  
                      _ADCC_GetConversionResult F2BE                          __size_of_EUSART1_Write 0018  
                            _eusart1RxLastError 0027                                 ___lwmod@divisor 0003  
                               ___lwmod@counter 0005                                      _TX1STAbits 000F9E  
                __end_of_PIN_MANAGER_Initialize F676                               ??_ADCC_Initialize 0001  
