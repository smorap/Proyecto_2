

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Sep 09 00:11:41 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 05/05/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F46K40 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     
    65 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    66  0000                     
    67 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    68  0000                     
    69 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    70  0000                     
    71                           	psect	nvCOMRAM
    72  000011                     __pnvCOMRAM:
    73                           	callstack 0
    74  000011                     _EUSART1_ErrorHandler:
    75                           	callstack 0
    76  000011                     	ds	2
    77  000013                     _EUSART1_OverrunErrorHandler:
    78                           	callstack 0
    79  000013                     	ds	2
    80  000015                     _EUSART1_FramingErrorHandler:
    81                           	callstack 0
    82  000015                     	ds	2
    83  0000                     _PMD5	set	3814
    84  0000                     _PMD4	set	3813
    85  0000                     _PMD3	set	3812
    86  0000                     _PMD2	set	3811
    87  0000                     _PMD1	set	3810
    88  0000                     _PMD0	set	3809
    89  0000                     _OSCTUNE	set	3805
    90  0000                     _OSCFRQ	set	3806
    91  0000                     _OSCEN	set	3804
    92  0000                     _OSCCON3	set	3802
    93  0000                     _OSCCON1	set	3800
    94  0000                     _PIR3bits	set	3789
    95  0000                     _RC1PPS	set	3832
    96  0000                     _RX1PPS	set	3765
    97  0000                     _PIR4bits	set	3790
    98  0000                     _ADCON1bits	set	3929
    99  0000                     _ADCON2bits	set	3930
   100  0000                     _ADCON3bits	set	3931
   101  0000                     _ADACQ	set	3932
   102  0000                     _ADCLK	set	3927
   103  0000                     _ADACT	set	3926
   104  0000                     _ADREF	set	3928
   105  0000                     _ADCON3	set	3931
   106  0000                     _ADCON2	set	3930
   107  0000                     _ADCON1	set	3929
   108  0000                     _ADPRE	set	3934
   109  0000                     _ADCAP	set	3933
   110  0000                     _ADPCH	set	3935
   111  0000                     _INLVLE	set	3882
   112  0000                     _INLVLD	set	3874
   113  0000                     _INLVLC	set	3869
   114  0000                     _INLVLB	set	3861
   115  0000                     _INLVLA	set	3853
   116  0000                     _SLRCONE	set	3883
   117  0000                     _SLRCOND	set	3875
   118  0000                     _SLRCONC	set	3870
   119  0000                     _SLRCONB	set	3862
   120  0000                     _SLRCONA	set	3854
   121  0000                     _ODCOND	set	3876
   122  0000                     _ODCONC	set	3871
   123  0000                     _ODCONB	set	3863
   124  0000                     _ODCONA	set	3855
   125  0000                     _ODCONE	set	3884
   126  0000                     _WPUC	set	3872
   127  0000                     _WPUA	set	3856
   128  0000                     _WPUB	set	3864
   129  0000                     _WPUE	set	3885
   130  0000                     _WPUD	set	3877
   131  0000                     _ANSELA	set	3857
   132  0000                     _ANSELE	set	3886
   133  0000                     _ANSELB	set	3865
   134  0000                     _ANSELC	set	3873
   135  0000                     _ANSELD	set	3878
   136  0000                     _ADERRL	set	3950
   137  0000                     _ADERRH	set	3951
   138  0000                     _ADPREVL	set	3937
   139  0000                     _ADPREVH	set	3938
   140  0000                     _ADFLTRL	set	3954
   141  0000                     _ADFLTRH	set	3955
   142  0000                     _ADSTATbits	set	3941
   143  0000                     _ADACCL	set	3952
   144  0000                     _ADACCH	set	3953
   145  0000                     _ADCNT	set	3943
   146  0000                     _ADRESL	set	3939
   147  0000                     _ADRESH	set	3940
   148  0000                     _ADCON0bits	set	3936
   149  0000                     _ADCON0	set	3936
   150  0000                     _ADSTAT	set	3941
   151  0000                     _ADRPT	set	3942
   152  0000                     _ADSTPTH	set	3945
   153  0000                     _ADSTPTL	set	3944
   154  0000                     _ADUTHH	set	3949
   155  0000                     _ADUTHL	set	3948
   156  0000                     _ADLTHH	set	3947
   157  0000                     _ADLTHL	set	3946
   158  0000                     _LATDbits	set	3974
   159  0000                     _TX1REG	set	3994
   160  0000                     _RC1REG	set	3993
   161  0000                     _RC1STAbits	set	3997
   162  0000                     _TX1STAbits	set	3998
   163  0000                     _SP1BRGH	set	3996
   164  0000                     _SP1BRGL	set	3995
   165  0000                     _TX1STA	set	3998
   166  0000                     _RC1STA	set	3997
   167  0000                     _BAUD1CON	set	3999
   168  0000                     _TRISD	set	3979
   169  0000                     _TRISC	set	3978
   170  0000                     _TRISB	set	3977
   171  0000                     _TRISA	set	3976
   172  0000                     _TRISE	set	3980
   173  0000                     _LATC	set	3973
   174  0000                     _LATB	set	3972
   175  0000                     _LATA	set	3971
   176  0000                     _LATD	set	3974
   177  0000                     _LATE	set	3975
   178  0000                     _PR6	set	4016
   179  0000                     _TMR6	set	4015
   180  0000                     _T6CONbits	set	4017
   181  0000                     _T6RSTbits	set	4020
   182  0000                     _T6HLTbits	set	4018
   183  0000                     _T6CON	set	4017
   184  0000                     _T6TMR	set	4015
   185  0000                     _T6PR	set	4016
   186  0000                     _T6RST	set	4020
   187  0000                     _T6HLT	set	4018
   188  0000                     _T6CLKCON	set	4019
   189                           
   190                           ; #config settings
   191                           
   192                           	psect	cinit
   193  00FC64                     __pcinit:
   194                           	callstack 0
   195  00FC64                     start_initialization:
   196                           	callstack 0
   197  00FC64                     __initialization:
   198                           	callstack 0
   199                           
   200                           ; Clear objects allocated to COMRAM (1 bytes)
   201  00FC64  6A17               	clrf	__pbssCOMRAM& (0+255),c
   202  00FC66                     end_of_initialization:
   203                           	callstack 0
   204  00FC66                     __end_of__initialization:
   205                           	callstack 0
   206  00FC66  0E00               	movlw	low (__Lmediumconst shr (0+16))
   207  00FC68  6EF8               	movwf	tblptru,c
   208  00FC6A  0100               	movlb	0
   209  00FC6C  EF40  F07F         	goto	_main	;jump to C main() function
   210                           
   211                           	psect	bssCOMRAM
   212  000017                     __pbssCOMRAM:
   213                           	callstack 0
   214  000017                     _eusart1RxLastError:
   215                           	callstack 0
   216  000017                     	ds	1
   217                           
   218                           	psect	cstackCOMRAM
   219  000001                     __pcstackCOMRAM:
   220                           	callstack 0
   221  000001                     TMR6_HasOverflowOccured@status:
   222                           	callstack 0
   223  000001                     EUSART1_SetFramingErrorHandler@interruptHandler:
   224                           	callstack 0
   225  000001                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   226                           	callstack 0
   227  000001                     EUSART1_SetErrorHandler@interruptHandler:
   228                           	callstack 0
   229  000001                     Tm_Inicie_periodico@ctp:
   230                           	callstack 0
   231  000001                     Tm_Procese_tiempo@ctp:
   232                           	callstack 0
   233  000001                     Tm_Hubo_periodico@ctp:
   234                           	callstack 0
   235  000001                     Tm_Baje_periodico@ctp:
   236                           	callstack 0
   237                           
   238                           ; 2 bytes @ 0x0
   239  000001                     	ds	2
   240  000003                     ??_Tm_Procese_tiempo:
   241  000003                     Tm_Inicie_periodico@periodo:
   242                           	callstack 0
   243                           
   244                           ; 2 bytes @ 0x2
   245  000003                     	ds	2
   246  000005                     
   247                           ; 1 bytes @ 0x4
   248  000005                     	ds	2
   249  000007                     ??_main:
   250                           
   251                           ; 1 bytes @ 0x6
   252  000007                     	ds	1
   253  000008                     main@Mi_timer:
   254                           	callstack 0
   255                           
   256                           ; 9 bytes @ 0x7
   257  000008                     	ds	9
   258                           
   259 ;;
   260 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   261 ;;
   262 ;; *************** function _main *****************
   263 ;; Defined at:
   264 ;;		line 50 in file "main.c"
   265 ;; Parameters:    Size  Location     Type
   266 ;;		None
   267 ;; Auto vars:     Size  Location     Type
   268 ;;  Mi_timer        9    7[COMRAM] struct Tm_Periodico
   269 ;;  encienda        1    0        _Bool 
   270 ;; Return value:  Size  Location     Type
   271 ;;                  1    wreg      void 
   272 ;; Registers used:
   273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   274 ;; Tracked objects:
   275 ;;		On entry : 0/0
   276 ;;		On exit  : 0/0
   277 ;;		Unchanged: 0/0
   278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   280 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   281 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   282 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   283 ;;Total ram usage:       10 bytes
   284 ;; Hardware stack levels required when called: 3
   285 ;; This function calls:
   286 ;;		_SYSTEM_Initialize
   287 ;;		_TMR6_HasOverflowOccured
   288 ;;		_Tm_Baje_periodico
   289 ;;		_Tm_Hubo_periodico
   290 ;;		_Tm_Inicie_periodico
   291 ;;		_Tm_Procese_tiempo
   292 ;; This function is called by:
   293 ;;		Startup code after reset
   294 ;; This function uses a non-reentrant model
   295 ;;
   296                           
   297                           	psect	text0
   298  00FE80                     __ptext0:
   299                           	callstack 0
   300  00FE80                     _main:
   301                           	callstack 28
   302  00FE80                     
   303                           ;main.c: 53:     SYSTEM_Initialize();
   304  00FE80  EC56  F07E         	call	_SYSTEM_Initialize	;wreg free
   305  00FE84                     
   306                           ;main.c: 54:     Tm_Periodico Mi_timer;;main.c: 55:     Tm_Inicie_periodico (&Mi_timer ,
      +                          10000);
   307  00FE84  0E08               	movlw	low main@Mi_timer
   308  00FE86  6E01               	movwf	Tm_Inicie_periodico@ctp^0,c
   309  00FE88  0E00               	movlw	high main@Mi_timer
   310  00FE8A  6E02               	movwf	(Tm_Inicie_periodico@ctp+1)^0,c
   311  00FE8C  0E27               	movlw	39
   312  00FE8E  6E04               	movwf	(Tm_Inicie_periodico@periodo+1)^0,c
   313  00FE90  0E10               	movlw	16
   314  00FE92  6E03               	movwf	Tm_Inicie_periodico@periodo^0,c
   315  00FE94  ECB5  F07E         	call	_Tm_Inicie_periodico	;wreg free
   316  00FE98  9086               	bcf	134,0,c	;volatile
   317  00FE9A  8286               	bsf	134,1,c	;volatile
   318  00FE9C                     l1493:
   319                           
   320                           ;main.c: 75:     {;main.c: 76:         if(TMR6_HasOverflowOccured()){
   321  00FE9C  EC80  F07E         	call	_TMR6_HasOverflowOccured	;wreg free
   322  00FEA0  0900               	iorlw	0
   323  00FEA2  B4D8               	btfsc	status,2,c
   324  00FEA4  EF56  F07F         	goto	u191
   325  00FEA8  EF58  F07F         	goto	u190
   326  00FEAC                     u191:
   327  00FEAC  EF5E  F07F         	goto	l1497
   328  00FEB0                     u190:
   329  00FEB0                     
   330                           ;main.c: 77:             Tm_Procese_tiempo (&Mi_timer);
   331  00FEB0  0E08               	movlw	low main@Mi_timer
   332  00FEB2  6E01               	movwf	Tm_Procese_tiempo@ctp^0,c
   333  00FEB4  0E00               	movlw	high main@Mi_timer
   334  00FEB6  6E02               	movwf	(Tm_Procese_tiempo@ctp+1)^0,c
   335  00FEB8  EC97  F07F         	call	_Tm_Procese_tiempo	;wreg free
   336  00FEBC                     l1497:
   337                           
   338                           ;main.c: 79:         if(Tm_Hubo_periodico(&Mi_timer)){
   339  00FEBC  0E08               	movlw	low main@Mi_timer
   340  00FEBE  6E01               	movwf	Tm_Hubo_periodico@ctp^0,c
   341  00FEC0  0E00               	movlw	high main@Mi_timer
   342  00FEC2  6E02               	movwf	(Tm_Hubo_periodico@ctp+1)^0,c
   343  00FEC4  EC41  F07E         	call	_Tm_Hubo_periodico	;wreg free
   344  00FEC8  0900               	iorlw	0
   345  00FECA  B4D8               	btfsc	status,2,c
   346  00FECC  EF6A  F07F         	goto	u201
   347  00FED0  EF6C  F07F         	goto	u200
   348  00FED4                     u201:
   349  00FED4  EF4E  F07F         	goto	l1493
   350  00FED8                     u200:
   351  00FED8                     
   352                           ;main.c: 80:             Tm_Baje_periodico (&Mi_timer);
   353  00FED8  0E08               	movlw	low main@Mi_timer
   354  00FEDA  6E01               	movwf	Tm_Baje_periodico@ctp^0,c
   355  00FEDC  0E00               	movlw	high main@Mi_timer
   356  00FEDE  6E02               	movwf	(Tm_Baje_periodico@ctp+1)^0,c
   357  00FEE0  EC38  F07E         	call	_Tm_Baje_periodico	;wreg free
   358  00FEE4  B086               	btfsc	134,0,c	;volatile
   359  00FEE6  EF77  F07F         	goto	u211
   360  00FEEA  EF7A  F07F         	goto	u210
   361  00FEEE                     u211:
   362  00FEEE  0E01               	movlw	1
   363  00FEF0  EF7B  F07F         	goto	u216
   364  00FEF4                     u210:
   365  00FEF4  0E00               	movlw	0
   366  00FEF6                     u216:
   367  00FEF6  0AFF               	xorlw	255
   368  00FEF8  6E07               	movwf	??_main^0,c
   369  00FEFA  5086               	movf	134,w,c	;volatile
   370  00FEFC  1807               	xorwf	??_main^0,w,c
   371  00FEFE  0BFE               	andlw	-2
   372  00FF00  1807               	xorwf	??_main^0,w,c
   373  00FF02  6E86               	movwf	134,c	;volatile
   374  00FF04  B286               	btfsc	134,1,c	;volatile
   375  00FF06  EF87  F07F         	goto	u221
   376  00FF0A  EF8A  F07F         	goto	u220
   377  00FF0E                     u221:
   378  00FF0E  0E01               	movlw	1
   379  00FF10  EF8B  F07F         	goto	u226
   380  00FF14                     u220:
   381  00FF14  0E00               	movlw	0
   382  00FF16                     u226:
   383  00FF16  0AFF               	xorlw	255
   384  00FF18  6E07               	movwf	??_main^0,c
   385  00FF1A  4607               	rlncf	??_main^0,f,c
   386  00FF1C  5086               	movf	134,w,c	;volatile
   387  00FF1E  1807               	xorwf	??_main^0,w,c
   388  00FF20  0BFD               	andlw	-3
   389  00FF22  1807               	xorwf	??_main^0,w,c
   390  00FF24  6E86               	movwf	134,c	;volatile
   391  00FF26  EF4E  F07F         	goto	l1493
   392  00FF2A  EF00  F000         	goto	start
   393  00FF2E                     __end_of_main:
   394                           	callstack 0
   395                           
   396 ;; *************** function _Tm_Procese_tiempo *****************
   397 ;; Defined at:
   398 ;;		line 17 in file "nuestrostimers.c"
   399 ;; Parameters:    Size  Location     Type
   400 ;;  ctp             2    0[COMRAM] PTR struct Tm_Periodico
   401 ;;		 -> main@Mi_timer(9), 
   402 ;; Auto vars:     Size  Location     Type
   403 ;;		None
   404 ;; Return value:  Size  Location     Type
   405 ;;                  1    wreg      void 
   406 ;; Registers used:
   407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   408 ;; Tracked objects:
   409 ;;		On entry : 0/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   413 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   415 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   416 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   417 ;;Total ram usage:        6 bytes
   418 ;; Hardware stack levels used: 1
   419 ;; This function calls:
   420 ;;		Nothing
   421 ;; This function is called by:
   422 ;;		_main
   423 ;; This function uses a non-reentrant model
   424 ;;
   425                           
   426                           	psect	text1
   427  00FF2E                     __ptext1:
   428                           	callstack 0
   429  00FF2E                     _Tm_Procese_tiempo:
   430                           	callstack 30
   431  00FF2E                     
   432                           ;nuestrostimers.c: 17: void Tm_Procese_tiempo (Tm_Periodico *ctp);nuestrostimers.c: 18: 
      +                          {;nuestrostimers.c: 21:  if (ctp->banderas & 0x01U)
   433  00FF2E  EE20 F008          	lfsr	2,8
   434  00FF32  5001               	movf	Tm_Procese_tiempo@ctp^0,w,c
   435  00FF34  26D9               	addwf	fsr2l,f,c
   436  00FF36  5002               	movf	(Tm_Procese_tiempo@ctp+1)^0,w,c
   437  00FF38  22DA               	addwfc	fsr2h,f,c
   438  00FF3A  A0DF               	btfss	indf2,0,c
   439  00FF3C  EFA2  F07F         	goto	u161
   440  00FF40  EFA4  F07F         	goto	u160
   441  00FF44                     u161:
   442  00FF44  EFCE  F07F         	goto	l1473
   443  00FF48                     u160:
   444  00FF48                     
   445                           ;nuestrostimers.c: 22:  {;nuestrostimers.c: 23:   --(ctp->contador);
   446  00FF48  C001  FFD9         	movff	Tm_Procese_tiempo@ctp,fsr2l
   447  00FF4C  C002  FFDA         	movff	Tm_Procese_tiempo@ctp+1,fsr2h
   448  00FF50  06DE               	decf	postinc2,f,c
   449  00FF52  0E00               	movlw	0
   450  00FF54  5ADD               	subwfb	postdec2,f,c
   451                           
   452                           ;nuestrostimers.c: 24:   if ( !(ctp->contador) )
   453  00FF56  C001  FFD9         	movff	Tm_Procese_tiempo@ctp,fsr2l
   454  00FF5A  C002  FFDA         	movff	Tm_Procese_tiempo@ctp+1,fsr2h
   455  00FF5E  50DE               	movf	postinc2,w,c
   456  00FF60  10DE               	iorwf	postinc2,w,c
   457  00FF62  A4D8               	btfss	status,2,c
   458  00FF64  EFB6  F07F         	goto	u171
   459  00FF68  EFB8  F07F         	goto	u170
   460  00FF6C                     u171:
   461  00FF6C  EFCE  F07F         	goto	l1473
   462  00FF70                     u170:
   463  00FF70                     
   464                           ;nuestrostimers.c: 25:   {;nuestrostimers.c: 26:    ctp->banderas |= 0x02U;
   465  00FF70  EE20 F008          	lfsr	2,8
   466  00FF74  5001               	movf	Tm_Procese_tiempo@ctp^0,w,c
   467  00FF76  26D9               	addwf	fsr2l,f,c
   468  00FF78  5002               	movf	(Tm_Procese_tiempo@ctp+1)^0,w,c
   469  00FF7A  22DA               	addwfc	fsr2h,f,c
   470  00FF7C  0E00               	movlw	0
   471  00FF7E  82DB               	bsf	plusw2,1,c
   472  00FF80                     
   473                           ;nuestrostimers.c: 27:    ctp->contador = ctp-> periodo;
   474  00FF80  EE20 F002          	lfsr	2,2
   475  00FF84  5001               	movf	Tm_Procese_tiempo@ctp^0,w,c
   476  00FF86  26D9               	addwf	fsr2l,f,c
   477  00FF88  5002               	movf	(Tm_Procese_tiempo@ctp+1)^0,w,c
   478  00FF8A  22DA               	addwfc	fsr2h,f,c
   479  00FF8C  C001  FFE1         	movff	Tm_Procese_tiempo@ctp,fsr1l
   480  00FF90  C002  FFE2         	movff	Tm_Procese_tiempo@ctp+1,fsr1h
   481  00FF94  CFDE FFE6          	movff	postinc2,postinc1
   482  00FF98  CFDD FFE5          	movff	postdec2,postdec1
   483  00FF9C                     l1473:
   484                           
   485                           ;nuestrostimers.c: 30:  if ((ctp->timeout))
   486  00FF9C  EE20 F004          	lfsr	2,4
   487  00FFA0  5001               	movf	Tm_Procese_tiempo@ctp^0,w,c
   488  00FFA2  26D9               	addwf	fsr2l,f,c
   489  00FFA4  5002               	movf	(Tm_Procese_tiempo@ctp+1)^0,w,c
   490  00FFA6  22DA               	addwfc	fsr2h,f,c
   491  00FFA8  50DE               	movf	postinc2,w,c
   492  00FFAA  10DE               	iorwf	postinc2,w,c
   493  00FFAC  10DE               	iorwf	postinc2,w,c
   494  00FFAE  10DE               	iorwf	postinc2,w,c
   495  00FFB0  B4D8               	btfsc	status,2,c
   496  00FFB2  EFDD  F07F         	goto	u181
   497  00FFB6  EFDF  F07F         	goto	u180
   498  00FFBA                     u181:
   499  00FFBA  EFFF  F07F         	goto	l473
   500  00FFBE                     u180:
   501  00FFBE                     
   502                           ;nuestrostimers.c: 31:   ctp->timeout=ctp->timeout-1;
   503  00FFBE  EE20 F004          	lfsr	2,4
   504  00FFC2  5001               	movf	Tm_Procese_tiempo@ctp^0,w,c
   505  00FFC4  26D9               	addwf	fsr2l,f,c
   506  00FFC6  5002               	movf	(Tm_Procese_tiempo@ctp+1)^0,w,c
   507  00FFC8  22DA               	addwfc	fsr2h,f,c
   508  00FFCA  0EFF               	movlw	255
   509  00FFCC  24DE               	addwf	postinc2,w,c
   510  00FFCE  6E03               	movwf	??_Tm_Procese_tiempo^0,c
   511  00FFD0  0EFF               	movlw	255
   512  00FFD2  20DE               	addwfc	postinc2,w,c
   513  00FFD4  6E04               	movwf	(??_Tm_Procese_tiempo+1)^0,c
   514  00FFD6  0EFF               	movlw	255
   515  00FFD8  20DE               	addwfc	postinc2,w,c
   516  00FFDA  6E05               	movwf	(??_Tm_Procese_tiempo+2)^0,c
   517  00FFDC  0EFF               	movlw	255
   518  00FFDE  20DE               	addwfc	postinc2,w,c
   519  00FFE0  6E06               	movwf	(??_Tm_Procese_tiempo+3)^0,c
   520  00FFE2  EE20 F004          	lfsr	2,4
   521  00FFE6  5001               	movf	Tm_Procese_tiempo@ctp^0,w,c
   522  00FFE8  26D9               	addwf	fsr2l,f,c
   523  00FFEA  5002               	movf	(Tm_Procese_tiempo@ctp+1)^0,w,c
   524  00FFEC  22DA               	addwfc	fsr2h,f,c
   525  00FFEE  C003  FFDE         	movff	??_Tm_Procese_tiempo,postinc2
   526  00FFF2  C004  FFDE         	movff	??_Tm_Procese_tiempo+1,postinc2
   527  00FFF6  C005  FFDE         	movff	??_Tm_Procese_tiempo+2,postinc2
   528  00FFFA  C006  FFDE         	movff	??_Tm_Procese_tiempo+3,postinc2
   529  00FFFE                     l473:
   530  00FFFE  0012               	return		;funcret
   531  010000                     __end_of_Tm_Procese_tiempo:
   532                           	callstack 0
   533                           
   534 ;; *************** function _Tm_Inicie_periodico *****************
   535 ;; Defined at:
   536 ;;		line 11 in file "nuestrostimers.c"
   537 ;; Parameters:    Size  Location     Type
   538 ;;  ctp             2    0[COMRAM] PTR struct Tm_Periodico
   539 ;;		 -> main@Mi_timer(9), 
   540 ;;  periodo         2    2[COMRAM] unsigned int 
   541 ;; Auto vars:     Size  Location     Type
   542 ;;		None
   543 ;; Return value:  Size  Location     Type
   544 ;;                  1    wreg      void 
   545 ;; Registers used:
   546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   547 ;; Tracked objects:
   548 ;;		On entry : 0/0
   549 ;;		On exit  : 0/0
   550 ;;		Unchanged: 0/0
   551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   552 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   555 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   556 ;;Total ram usage:        4 bytes
   557 ;; Hardware stack levels used: 1
   558 ;; This function calls:
   559 ;;		Nothing
   560 ;; This function is called by:
   561 ;;		_main
   562 ;; This function uses a non-reentrant model
   563 ;;
   564                           
   565                           	psect	text2
   566  00FD6A                     __ptext2:
   567                           	callstack 0
   568  00FD6A                     _Tm_Inicie_periodico:
   569                           	callstack 30
   570  00FD6A                     
   571                           ;nuestrostimers.c: 11: void Tm_Inicie_periodico (Tm_Periodico *ctp,unsigned int periodo)
      +                          ;nuestrostimers.c: 12: {;nuestrostimers.c: 13:  ctp->banderas |= 0x01U;
   572  00FD6A  EE20 F008          	lfsr	2,8
   573  00FD6E  5001               	movf	Tm_Inicie_periodico@ctp^0,w,c
   574  00FD70  26D9               	addwf	fsr2l,f,c
   575  00FD72  5002               	movf	(Tm_Inicie_periodico@ctp+1)^0,w,c
   576  00FD74  22DA               	addwfc	fsr2h,f,c
   577  00FD76  0E00               	movlw	0
   578  00FD78  80DB               	bsf	plusw2,0,c
   579                           
   580                           ;nuestrostimers.c: 14:  ctp->banderas &= ~0x02U;
   581  00FD7A  EE20 F008          	lfsr	2,8
   582  00FD7E  5001               	movf	Tm_Inicie_periodico@ctp^0,w,c
   583  00FD80  26D9               	addwf	fsr2l,f,c
   584  00FD82  5002               	movf	(Tm_Inicie_periodico@ctp+1)^0,w,c
   585  00FD84  22DA               	addwfc	fsr2h,f,c
   586  00FD86  0EFD               	movlw	253
   587  00FD88  16DF               	andwf	indf2,f,c
   588  00FD8A                     
   589                           ;nuestrostimers.c: 15:  ctp->contador = ctp->periodo = periodo;
   590  00FD8A  EE20 F002          	lfsr	2,2
   591  00FD8E  5001               	movf	Tm_Inicie_periodico@ctp^0,w,c
   592  00FD90  26D9               	addwf	fsr2l,f,c
   593  00FD92  5002               	movf	(Tm_Inicie_periodico@ctp+1)^0,w,c
   594  00FD94  22DA               	addwfc	fsr2h,f,c
   595  00FD96  C003  FFDE         	movff	Tm_Inicie_periodico@periodo,postinc2
   596  00FD9A  C004  FFDD         	movff	Tm_Inicie_periodico@periodo+1,postdec2
   597  00FD9E  C001  FFE1         	movff	Tm_Inicie_periodico@ctp,fsr1l
   598  00FDA2  C002  FFE2         	movff	Tm_Inicie_periodico@ctp+1,fsr1h
   599  00FDA6  CFDE FFE6          	movff	postinc2,postinc1
   600  00FDAA  CFDD FFE5          	movff	postdec2,postdec1
   601  00FDAE  0012               	return		;funcret
   602  00FDB0                     __end_of_Tm_Inicie_periodico:
   603                           	callstack 0
   604                           
   605 ;; *************** function _Tm_Hubo_periodico *****************
   606 ;; Defined at:
   607 ;;		line 36 in file "nuestrostimers.c"
   608 ;; Parameters:    Size  Location     Type
   609 ;;  ctp             2    0[COMRAM] PTR struct Tm_Periodico
   610 ;;		 -> main@Mi_timer(9), 
   611 ;; Auto vars:     Size  Location     Type
   612 ;;		None
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      unsigned char 
   615 ;; Registers used:
   616 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   622 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   625 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   626 ;;Total ram usage:        2 bytes
   627 ;; Hardware stack levels used: 1
   628 ;; This function calls:
   629 ;;		Nothing
   630 ;; This function is called by:
   631 ;;		_main
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           	psect	text3
   636  00FC82                     __ptext3:
   637                           	callstack 0
   638  00FC82                     _Tm_Hubo_periodico:
   639                           	callstack 30
   640  00FC82                     
   641                           ;nuestrostimers.c: 36: char Tm_Hubo_periodico (Tm_Periodico *ctp);nuestrostimers.c: 37: 
      +                          {;nuestrostimers.c: 38:  return (ctp->banderas & 0x02U);
   642  00FC82  EE20 F008          	lfsr	2,8
   643  00FC86  5001               	movf	Tm_Hubo_periodico@ctp^0,w,c
   644  00FC88  26D9               	addwf	fsr2l,f,c
   645  00FC8A  5002               	movf	(Tm_Hubo_periodico@ctp+1)^0,w,c
   646  00FC8C  22DA               	addwfc	fsr2h,f,c
   647  00FC8E  50DF               	movf	indf2,w,c
   648  00FC90  0B02               	andlw	2
   649  00FC92  0012               	return		;funcret
   650  00FC94                     __end_of_Tm_Hubo_periodico:
   651                           	callstack 0
   652                           
   653 ;; *************** function _Tm_Baje_periodico *****************
   654 ;; Defined at:
   655 ;;		line 43 in file "nuestrostimers.c"
   656 ;; Parameters:    Size  Location     Type
   657 ;;  ctp             2    0[COMRAM] PTR struct Tm_Periodico
   658 ;;		 -> main@Mi_timer(9), 
   659 ;; Auto vars:     Size  Location     Type
   660 ;;		None
   661 ;; Return value:  Size  Location     Type
   662 ;;                  1    wreg      void 
   663 ;; Registers used:
   664 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   665 ;; Tracked objects:
   666 ;;		On entry : 0/0
   667 ;;		On exit  : 0/0
   668 ;;		Unchanged: 0/0
   669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   670 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   673 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   674 ;;Total ram usage:        2 bytes
   675 ;; Hardware stack levels used: 1
   676 ;; This function calls:
   677 ;;		Nothing
   678 ;; This function is called by:
   679 ;;		_main
   680 ;; This function uses a non-reentrant model
   681 ;;
   682                           
   683                           	psect	text4
   684  00FC70                     __ptext4:
   685                           	callstack 0
   686  00FC70                     _Tm_Baje_periodico:
   687                           	callstack 30
   688  00FC70                     
   689                           ;nuestrostimers.c: 43: void Tm_Baje_periodico (Tm_Periodico *ctp);nuestrostimers.c: 44: 
      +                          {;nuestrostimers.c: 45:  ctp->banderas &= ~0x02U;
   690  00FC70  EE20 F008          	lfsr	2,8
   691  00FC74  5001               	movf	Tm_Baje_periodico@ctp^0,w,c
   692  00FC76  26D9               	addwf	fsr2l,f,c
   693  00FC78  5002               	movf	(Tm_Baje_periodico@ctp+1)^0,w,c
   694  00FC7A  22DA               	addwfc	fsr2h,f,c
   695  00FC7C  0EFD               	movlw	253
   696  00FC7E  16DF               	andwf	indf2,f,c
   697  00FC80  0012               	return		;funcret
   698  00FC82                     __end_of_Tm_Baje_periodico:
   699                           	callstack 0
   700                           
   701 ;; *************** function _TMR6_HasOverflowOccured *****************
   702 ;; Defined at:
   703 ;;		line 157 in file "mcc_generated_files/tmr6.c"
   704 ;; Parameters:    Size  Location     Type
   705 ;;		None
   706 ;; Auto vars:     Size  Location     Type
   707 ;;  status          1    0[COMRAM] _Bool 
   708 ;; Return value:  Size  Location     Type
   709 ;;                  1    wreg      _Bool 
   710 ;; Registers used:
   711 ;;		wreg, status,2
   712 ;; Tracked objects:
   713 ;;		On entry : 0/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   718 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   720 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   721 ;;Total ram usage:        1 bytes
   722 ;; Hardware stack levels used: 1
   723 ;; This function calls:
   724 ;;		Nothing
   725 ;; This function is called by:
   726 ;;		_main
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           	psect	text5
   731  00FD00                     __ptext5:
   732                           	callstack 0
   733  00FD00                     _TMR6_HasOverflowOccured:
   734                           	callstack 30
   735  00FD00                     
   736                           ;mcc_generated_files/tmr6.c: 160:     _Bool status = PIR4bits.TMR6IF;
   737  00FD00  010E               	movlb	14	; () banked
   738  00FD02  BBCE               	btfsc	206,5,b	;volatile
   739  00FD04  EF86  F07E         	goto	u11
   740  00FD08  EF89  F07E         	goto	u10
   741  00FD0C                     u11:
   742  00FD0C  0E01               	movlw	1
   743  00FD0E  EF8A  F07E         	goto	u16
   744  00FD12                     u10:
   745  00FD12  0E00               	movlw	0
   746  00FD14                     u16:
   747  00FD14  6E01               	movwf	TMR6_HasOverflowOccured@status^0,c
   748                           
   749                           ;mcc_generated_files/tmr6.c: 161:     if(status)
   750  00FD16  5001               	movf	TMR6_HasOverflowOccured@status^0,w,c
   751  00FD18  B4D8               	btfsc	status,2,c
   752  00FD1A  EF91  F07E         	goto	u21
   753  00FD1E  EF93  F07E         	goto	u20
   754  00FD22                     u21:
   755  00FD22  EF94  F07E         	goto	l1241
   756  00FD26                     u20:
   757  00FD26                     
   758                           ; BSR set to: 14
   759                           ;mcc_generated_files/tmr6.c: 162:     {;mcc_generated_files/tmr6.c: 164:         PIR4bit
      +                          s.TMR6IF = 0;
   760  00FD26  9BCE               	bcf	206,5,b	;volatile
   761  00FD28                     l1241:
   762                           
   763                           ; BSR set to: 14
   764                           ;mcc_generated_files/tmr6.c: 166:     return status;
   765  00FD28  5001               	movf	TMR6_HasOverflowOccured@status^0,w,c
   766  00FD2A                     
   767                           ; BSR set to: 14
   768  00FD2A  0012               	return		;funcret
   769  00FD2C                     __end_of_TMR6_HasOverflowOccured:
   770                           	callstack 0
   771                           
   772 ;; *************** function _SYSTEM_Initialize *****************
   773 ;; Defined at:
   774 ;;		line 50 in file "mcc_generated_files/mcc.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;		None
   777 ;; Auto vars:     Size  Location     Type
   778 ;;		None
   779 ;; Return value:  Size  Location     Type
   780 ;;                  1    wreg      void 
   781 ;; Registers used:
   782 ;;		wreg, status,2, status,0, cstack
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   792 ;;Total ram usage:        0 bytes
   793 ;; Hardware stack levels used: 1
   794 ;; Hardware stack levels required when called: 2
   795 ;; This function calls:
   796 ;;		_ADCC_Initialize
   797 ;;		_EUSART1_Initialize
   798 ;;		_OSCILLATOR_Initialize
   799 ;;		_PIN_MANAGER_Initialize
   800 ;;		_PMD_Initialize
   801 ;;		_TMR6_Initialize
   802 ;; This function is called by:
   803 ;;		_main
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           	psect	text6
   808  00FCAC                     __ptext6:
   809                           	callstack 0
   810  00FCAC                     _SYSTEM_Initialize:
   811                           	callstack 28
   812  00FCAC                     
   813                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
   814  00FCAC  EC63  F07E         	call	_PMD_Initialize	;wreg free
   815                           
   816                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   817  00FCB0  EC00  F07F         	call	_PIN_MANAGER_Initialize	;wreg free
   818                           
   819                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   820  00FCB4  EC4A  F07E         	call	_OSCILLATOR_Initialize	;wreg free
   821                           
   822                           ;mcc_generated_files/mcc.c: 55:     ADCC_Initialize();
   823  00FCB8  ECD8  F07E         	call	_ADCC_Initialize	;wreg free
   824                           
   825                           ;mcc_generated_files/mcc.c: 56:     TMR6_Initialize();
   826  00FCBC  EC71  F07E         	call	_TMR6_Initialize	;wreg free
   827  00FCC0                     
   828                           ;mcc_generated_files/mcc.c: 57:     EUSART1_Initialize();
   829  00FCC0  EC96  F07E         	call	_EUSART1_Initialize	;wreg free
   830  00FCC4  0012               	return		;funcret
   831  00FCC6                     __end_of_SYSTEM_Initialize:
   832                           	callstack 0
   833                           
   834 ;; *************** function _TMR6_Initialize *****************
   835 ;; Defined at:
   836 ;;		line 62 in file "mcc_generated_files/tmr6.c"
   837 ;; Parameters:    Size  Location     Type
   838 ;;		None
   839 ;; Auto vars:     Size  Location     Type
   840 ;;		None
   841 ;; Return value:  Size  Location     Type
   842 ;;                  1    wreg      void 
   843 ;; Registers used:
   844 ;;		wreg, status,2
   845 ;; Tracked objects:
   846 ;;		On entry : 0/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   854 ;;Total ram usage:        0 bytes
   855 ;; Hardware stack levels used: 1
   856 ;; This function calls:
   857 ;;		Nothing
   858 ;; This function is called by:
   859 ;;		_SYSTEM_Initialize
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863                           	psect	text7
   864  00FCE2                     __ptext7:
   865                           	callstack 0
   866  00FCE2                     _TMR6_Initialize:
   867                           	callstack 29
   868  00FCE2                     
   869                           ;mcc_generated_files/tmr6.c: 67:     T6CLKCON = 0x03;
   870  00FCE2  0E03               	movlw	3
   871  00FCE4  6EB3               	movwf	179,c	;volatile
   872                           
   873                           ;mcc_generated_files/tmr6.c: 70:     T6HLT = 0x20;
   874  00FCE6  0E20               	movlw	32
   875  00FCE8  6EB2               	movwf	178,c	;volatile
   876                           
   877                           ;mcc_generated_files/tmr6.c: 73:     T6RST = 0x00;
   878  00FCEA  0E00               	movlw	0
   879  00FCEC  6EB4               	movwf	180,c	;volatile
   880                           
   881                           ;mcc_generated_files/tmr6.c: 76:     T6PR = 0xC7;
   882  00FCEE  0EC7               	movlw	199
   883  00FCF0  6EB0               	movwf	176,c	;volatile
   884                           
   885                           ;mcc_generated_files/tmr6.c: 79:     T6TMR = 0x00;
   886  00FCF2  0E00               	movlw	0
   887  00FCF4  6EAF               	movwf	175,c	;volatile
   888  00FCF6                     
   889                           ;mcc_generated_files/tmr6.c: 82:     PIR4bits.TMR6IF = 0;
   890  00FCF6  010E               	movlb	14	; () banked
   891  00FCF8  9BCE               	bcf	206,5,b	;volatile
   892                           
   893                           ;mcc_generated_files/tmr6.c: 85:     T6CON = 0xA7;
   894  00FCFA  0EA7               	movlw	167
   895  00FCFC  6EB1               	movwf	177,c	;volatile
   896  00FCFE                     
   897                           ; BSR set to: 14
   898  00FCFE  0012               	return		;funcret
   899  00FD00                     __end_of_TMR6_Initialize:
   900                           	callstack 0
   901                           
   902 ;; *************** function _PMD_Initialize *****************
   903 ;; Defined at:
   904 ;;		line 74 in file "mcc_generated_files/mcc.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;		None
   907 ;; Auto vars:     Size  Location     Type
   908 ;;		None
   909 ;; Return value:  Size  Location     Type
   910 ;;                  1    wreg      void 
   911 ;; Registers used:
   912 ;;		wreg, status,2
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   922 ;;Total ram usage:        0 bytes
   923 ;; Hardware stack levels used: 1
   924 ;; This function calls:
   925 ;;		Nothing
   926 ;; This function is called by:
   927 ;;		_SYSTEM_Initialize
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           	psect	text8
   932  00FCC6                     __ptext8:
   933                           	callstack 0
   934  00FCC6                     _PMD_Initialize:
   935                           	callstack 29
   936  00FCC6                     
   937                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
   938  00FCC6  0E00               	movlw	0
   939  00FCC8  010E               	movlb	14	; () banked
   940  00FCCA  6FE1               	movwf	225,b	;volatile
   941                           
   942                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
   943  00FCCC  0E00               	movlw	0
   944  00FCCE  6FE2               	movwf	226,b	;volatile
   945                           
   946                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
   947  00FCD0  0E00               	movlw	0
   948  00FCD2  6FE3               	movwf	227,b	;volatile
   949                           
   950                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
   951  00FCD4  0E00               	movlw	0
   952  00FCD6  6FE4               	movwf	228,b	;volatile
   953                           
   954                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
   955  00FCD8  0E00               	movlw	0
   956  00FCDA  6FE5               	movwf	229,b	;volatile
   957                           
   958                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
   959  00FCDC  0E00               	movlw	0
   960  00FCDE  6FE6               	movwf	230,b	;volatile
   961  00FCE0                     
   962                           ; BSR set to: 14
   963  00FCE0  0012               	return		;funcret
   964  00FCE2                     __end_of_PMD_Initialize:
   965                           	callstack 0
   966                           
   967 ;; *************** function _PIN_MANAGER_Initialize *****************
   968 ;; Defined at:
   969 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;		None
   972 ;; Auto vars:     Size  Location     Type
   973 ;;		None
   974 ;; Return value:  Size  Location     Type
   975 ;;                  1    wreg      void 
   976 ;; Registers used:
   977 ;;		wreg, status,2
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   987 ;;Total ram usage:        0 bytes
   988 ;; Hardware stack levels used: 1
   989 ;; This function calls:
   990 ;;		Nothing
   991 ;; This function is called by:
   992 ;;		_SYSTEM_Initialize
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           	psect	text9
   997  00FE00                     __ptext9:
   998                           	callstack 0
   999  00FE00                     _PIN_MANAGER_Initialize:
  1000                           	callstack 29
  1001  00FE00                     
  1002                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  1003  00FE00  0E00               	movlw	0
  1004  00FE02  6E87               	movwf	135,c	;volatile
  1005                           
  1006                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  1007  00FE04  0E00               	movlw	0
  1008  00FE06  6E86               	movwf	134,c	;volatile
  1009                           
  1010                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  1011  00FE08  0E00               	movlw	0
  1012  00FE0A  6E83               	movwf	131,c	;volatile
  1013                           
  1014                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  1015  00FE0C  0E00               	movlw	0
  1016  00FE0E  6E84               	movwf	132,c	;volatile
  1017                           
  1018                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  1019  00FE10  0E00               	movlw	0
  1020  00FE12  6E85               	movwf	133,c	;volatile
  1021                           
  1022                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  1023  00FE14  0E07               	movlw	7
  1024  00FE16  6E8C               	movwf	140,c	;volatile
  1025  00FE18                     
  1026                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  1027  00FE18  6888               	setf	136,c	;volatile
  1028  00FE1A                     
  1029                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  1030  00FE1A  6889               	setf	137,c	;volatile
  1031                           
  1032                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFD;
  1033  00FE1C  0EFD               	movlw	253
  1034  00FE1E  6E8A               	movwf	138,c	;volatile
  1035                           
  1036                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFC;
  1037  00FE20  0EFC               	movlw	252
  1038  00FE22  6E8B               	movwf	139,c	;volatile
  1039  00FE24                     
  1040                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  1041  00FE24  010F               	movlb	15	; () banked
  1042  00FE26  6926               	setf	38,b	;volatile
  1043                           
  1044                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFE;
  1045  00FE28  0EFE               	movlw	254
  1046  00FE2A  6F21               	movwf	33,b	;volatile
  1047  00FE2C                     
  1048                           ; BSR set to: 15
  1049                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xFF;
  1050  00FE2C  6919               	setf	25,b	;volatile
  1051                           
  1052                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  1053  00FE2E  0E07               	movlw	7
  1054  00FE30  6F2E               	movwf	46,b	;volatile
  1055  00FE32                     
  1056                           ; BSR set to: 15
  1057                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  1058  00FE32  6911               	setf	17,b	;volatile
  1059                           
  1060                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  1061  00FE34  0E00               	movlw	0
  1062  00FE36  6F25               	movwf	37,b	;volatile
  1063                           
  1064                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  1065  00FE38  0E00               	movlw	0
  1066  00FE3A  6F2D               	movwf	45,b	;volatile
  1067                           
  1068                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  1069  00FE3C  0E00               	movlw	0
  1070  00FE3E  6F18               	movwf	24,b	;volatile
  1071                           
  1072                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  1073  00FE40  0E00               	movlw	0
  1074  00FE42  6F10               	movwf	16,b	;volatile
  1075                           
  1076                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  1077  00FE44  0E00               	movlw	0
  1078  00FE46  6F20               	movwf	32,b	;volatile
  1079                           
  1080                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  1081  00FE48  0E00               	movlw	0
  1082  00FE4A  6F2C               	movwf	44,b	;volatile
  1083                           
  1084                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  1085  00FE4C  0E00               	movlw	0
  1086  00FE4E  6F0F               	movwf	15,b	;volatile
  1087                           
  1088                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  1089  00FE50  0E00               	movlw	0
  1090  00FE52  6F17               	movwf	23,b	;volatile
  1091                           
  1092                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  1093  00FE54  0E00               	movlw	0
  1094  00FE56  6F1F               	movwf	31,b	;volatile
  1095                           
  1096                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  1097  00FE58  0E00               	movlw	0
  1098  00FE5A  6F24               	movwf	36,b	;volatile
  1099  00FE5C                     
  1100                           ; BSR set to: 15
  1101                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  1102  00FE5C  690E               	setf	14,b	;volatile
  1103  00FE5E                     
  1104                           ; BSR set to: 15
  1105                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  1106  00FE5E  6916               	setf	22,b	;volatile
  1107  00FE60                     
  1108                           ; BSR set to: 15
  1109                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  1110  00FE60  691E               	setf	30,b	;volatile
  1111  00FE62                     
  1112                           ; BSR set to: 15
  1113                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  1114  00FE62  6923               	setf	35,b	;volatile
  1115                           
  1116                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  1117  00FE64  0E07               	movlw	7
  1118  00FE66  6F2B               	movwf	43,b	;volatile
  1119  00FE68                     
  1120                           ; BSR set to: 15
  1121                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  1122  00FE68  690D               	setf	13,b	;volatile
  1123  00FE6A                     
  1124                           ; BSR set to: 15
  1125                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  1126  00FE6A  6915               	setf	21,b	;volatile
  1127  00FE6C                     
  1128                           ; BSR set to: 15
  1129                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  1130  00FE6C  691D               	setf	29,b	;volatile
  1131  00FE6E                     
  1132                           ; BSR set to: 15
  1133                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  1134  00FE6E  6922               	setf	34,b	;volatile
  1135                           
  1136                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  1137  00FE70  0E0F               	movlw	15
  1138  00FE72  6F2A               	movwf	42,b	;volatile
  1139                           
  1140                           ;mcc_generated_files/pin_manager.c: 127:     RX1PPS = 0x10;
  1141  00FE74  0E10               	movlw	16
  1142  00FE76  010E               	movlb	14	; () banked
  1143  00FE78  6FB5               	movwf	181,b	;volatile
  1144                           
  1145                           ;mcc_generated_files/pin_manager.c: 128:     RC1PPS = 0x09;
  1146  00FE7A  0E09               	movlw	9
  1147  00FE7C  6FF8               	movwf	248,b	;volatile
  1148  00FE7E                     
  1149                           ; BSR set to: 14
  1150  00FE7E  0012               	return		;funcret
  1151  00FE80                     __end_of_PIN_MANAGER_Initialize:
  1152                           	callstack 0
  1153                           
  1154 ;; *************** function _OSCILLATOR_Initialize *****************
  1155 ;; Defined at:
  1156 ;;		line 60 in file "mcc_generated_files/mcc.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;		None
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;		None
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  1    wreg      void 
  1163 ;; Registers used:
  1164 ;;		wreg, status,2
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1174 ;;Total ram usage:        0 bytes
  1175 ;; Hardware stack levels used: 1
  1176 ;; This function calls:
  1177 ;;		Nothing
  1178 ;; This function is called by:
  1179 ;;		_SYSTEM_Initialize
  1180 ;; This function uses a non-reentrant model
  1181 ;;
  1182                           
  1183                           	psect	text10
  1184  00FC94                     __ptext10:
  1185                           	callstack 0
  1186  00FC94                     _OSCILLATOR_Initialize:
  1187                           	callstack 29
  1188  00FC94                     
  1189                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x60;
  1190  00FC94  0E60               	movlw	96
  1191  00FC96  010E               	movlb	14	; () banked
  1192  00FC98  6FD8               	movwf	216,b	;volatile
  1193                           
  1194                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  1195  00FC9A  0E00               	movlw	0
  1196  00FC9C  6FDA               	movwf	218,b	;volatile
  1197                           
  1198                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  1199  00FC9E  0E00               	movlw	0
  1200  00FCA0  6FDC               	movwf	220,b	;volatile
  1201                           
  1202                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x08;
  1203  00FCA2  0E08               	movlw	8
  1204  00FCA4  6FDE               	movwf	222,b	;volatile
  1205                           
  1206                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  1207  00FCA6  0E00               	movlw	0
  1208  00FCA8  6FDD               	movwf	221,b	;volatile
  1209  00FCAA                     
  1210                           ; BSR set to: 14
  1211  00FCAA  0012               	return		;funcret
  1212  00FCAC                     __end_of_OSCILLATOR_Initialize:
  1213                           	callstack 0
  1214                           
  1215 ;; *************** function _EUSART1_Initialize *****************
  1216 ;; Defined at:
  1217 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;		None
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;		None
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  1    wreg      void 
  1224 ;; Registers used:
  1225 ;;		wreg, status,2, status,0, cstack
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1235 ;;Total ram usage:        0 bytes
  1236 ;; Hardware stack levels used: 1
  1237 ;; Hardware stack levels required when called: 1
  1238 ;; This function calls:
  1239 ;;		_EUSART1_SetErrorHandler
  1240 ;;		_EUSART1_SetFramingErrorHandler
  1241 ;;		_EUSART1_SetOverrunErrorHandler
  1242 ;; This function is called by:
  1243 ;;		_SYSTEM_Initialize
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           	psect	text11
  1248  00FD2C                     __ptext11:
  1249                           	callstack 0
  1250  00FD2C                     _EUSART1_Initialize:
  1251                           	callstack 28
  1252  00FD2C                     
  1253                           ;mcc_generated_files/eusart1.c: 71:     BAUD1CON = 0x08;
  1254  00FD2C  0E08               	movlw	8
  1255  00FD2E  6E9F               	movwf	159,c	;volatile
  1256                           
  1257                           ;mcc_generated_files/eusart1.c: 74:     RC1STA = 0x90;
  1258  00FD30  0E90               	movlw	144
  1259  00FD32  6E9D               	movwf	157,c	;volatile
  1260                           
  1261                           ;mcc_generated_files/eusart1.c: 77:     TX1STA = 0x24;
  1262  00FD34  0E24               	movlw	36
  1263  00FD36  6E9E               	movwf	158,c	;volatile
  1264                           
  1265                           ;mcc_generated_files/eusart1.c: 80:     SP1BRGL = 0x8A;
  1266  00FD38  0E8A               	movlw	138
  1267  00FD3A  6E9B               	movwf	155,c	;volatile
  1268                           
  1269                           ;mcc_generated_files/eusart1.c: 83:     SP1BRGH = 0x00;
  1270  00FD3C  0E00               	movlw	0
  1271  00FD3E  6E9C               	movwf	156,c	;volatile
  1272  00FD40                     
  1273                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  1274  00FD40  0E00               	movlw	0
  1275  00FD42  6E01               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  1276  00FD44  0E00               	movlw	0
  1277  00FD46  6E02               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  1278  00FD48  EC28  F07E         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  1279  00FD4C                     
  1280                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  1281  00FD4C  0E00               	movlw	0
  1282  00FD4E  6E01               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  1283  00FD50  0E00               	movlw	0
  1284  00FD52  6E02               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  1285  00FD54  EC2D  F07E         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  1286  00FD58                     
  1287                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  1288  00FD58  0E00               	movlw	0
  1289  00FD5A  6E01               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  1290  00FD5C  0E00               	movlw	0
  1291  00FD5E  6E02               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  1292  00FD60  EC23  F07E         	call	_EUSART1_SetErrorHandler	;wreg free
  1293  00FD64                     
  1294                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  1295  00FD64  0E00               	movlw	0
  1296  00FD66  6E17               	movwf	_eusart1RxLastError^0,c	;volatile
  1297  00FD68  0012               	return		;funcret
  1298  00FD6A                     __end_of_EUSART1_Initialize:
  1299                           	callstack 0
  1300                           
  1301 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  1302 ;; Defined at:
  1303 ;;		line 161 in file "mcc_generated_files/eusart1.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1306 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;		None
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  1    wreg      void 
  1311 ;; Registers used:
  1312 ;;		wreg, status,2, status,0
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1318 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1321 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1322 ;;Total ram usage:        2 bytes
  1323 ;; Hardware stack levels used: 1
  1324 ;; This function calls:
  1325 ;;		Nothing
  1326 ;; This function is called by:
  1327 ;;		_EUSART1_Initialize
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331                           	psect	text12
  1332  00FC5A                     __ptext12:
  1333                           	callstack 0
  1334  00FC5A                     _EUSART1_SetOverrunErrorHandler:
  1335                           	callstack 28
  1336  00FC5A                     
  1337                           ;mcc_generated_files/eusart1.c: 162:     EUSART1_OverrunErrorHandler = interruptHandler;
  1338  00FC5A  C001  F013         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  1339  00FC5E  C002  F014         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  1340  00FC62  0012               	return		;funcret
  1341  00FC64                     __end_of_EUSART1_SetOverrunErrorHandler:
  1342                           	callstack 0
  1343                           
  1344 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  1345 ;; Defined at:
  1346 ;;		line 157 in file "mcc_generated_files/eusart1.c"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1349 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;		None
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  1    wreg      void 
  1354 ;; Registers used:
  1355 ;;		wreg, status,2, status,0
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1361 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1364 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1365 ;;Total ram usage:        2 bytes
  1366 ;; Hardware stack levels used: 1
  1367 ;; This function calls:
  1368 ;;		Nothing
  1369 ;; This function is called by:
  1370 ;;		_EUSART1_Initialize
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374                           	psect	text13
  1375  00FC50                     __ptext13:
  1376                           	callstack 0
  1377  00FC50                     _EUSART1_SetFramingErrorHandler:
  1378                           	callstack 28
  1379  00FC50                     
  1380                           ;mcc_generated_files/eusart1.c: 158:     EUSART1_FramingErrorHandler = interruptHandler;
  1381  00FC50  C001  F015         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  1382  00FC54  C002  F016         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  1383  00FC58  0012               	return		;funcret
  1384  00FC5A                     __end_of_EUSART1_SetFramingErrorHandler:
  1385                           	callstack 0
  1386                           
  1387 ;; *************** function _EUSART1_SetErrorHandler *****************
  1388 ;; Defined at:
  1389 ;;		line 165 in file "mcc_generated_files/eusart1.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1392 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;		None
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  1    wreg      void 
  1397 ;; Registers used:
  1398 ;;		wreg, status,2, status,0
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1404 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1407 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1408 ;;Total ram usage:        2 bytes
  1409 ;; Hardware stack levels used: 1
  1410 ;; This function calls:
  1411 ;;		Nothing
  1412 ;; This function is called by:
  1413 ;;		_EUSART1_Initialize
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           	psect	text14
  1418  00FC46                     __ptext14:
  1419                           	callstack 0
  1420  00FC46                     _EUSART1_SetErrorHandler:
  1421                           	callstack 28
  1422  00FC46                     
  1423                           ;mcc_generated_files/eusart1.c: 166:     EUSART1_ErrorHandler = interruptHandler;
  1424  00FC46  C001  F011         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  1425  00FC4A  C002  F012         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  1426  00FC4E  0012               	return		;funcret
  1427  00FC50                     __end_of_EUSART1_SetErrorHandler:
  1428                           	callstack 0
  1429                           
  1430 ;; *************** function _ADCC_Initialize *****************
  1431 ;; Defined at:
  1432 ;;		line 62 in file "mcc_generated_files/adcc.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;		None
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;		None
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      void 
  1439 ;; Registers used:
  1440 ;;		wreg, status,2
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1450 ;;Total ram usage:        0 bytes
  1451 ;; Hardware stack levels used: 1
  1452 ;; This function calls:
  1453 ;;		Nothing
  1454 ;; This function is called by:
  1455 ;;		_SYSTEM_Initialize
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           	psect	text15
  1460  00FDB0                     __ptext15:
  1461                           	callstack 0
  1462  00FDB0                     _ADCC_Initialize:
  1463                           	callstack 29
  1464  00FDB0                     
  1465                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  1466  00FDB0  0E00               	movlw	0
  1467  00FDB2  6E6A               	movwf	106,c	;volatile
  1468                           
  1469                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  1470  00FDB4  0E00               	movlw	0
  1471  00FDB6  6E6B               	movwf	107,c	;volatile
  1472                           
  1473                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  1474  00FDB8  0E00               	movlw	0
  1475  00FDBA  6E6C               	movwf	108,c	;volatile
  1476                           
  1477                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  1478  00FDBC  0E00               	movlw	0
  1479  00FDBE  6E6D               	movwf	109,c	;volatile
  1480                           
  1481                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  1482  00FDC0  0E00               	movlw	0
  1483  00FDC2  6E68               	movwf	104,c	;volatile
  1484                           
  1485                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  1486  00FDC4  0E00               	movlw	0
  1487  00FDC6  6E69               	movwf	105,c	;volatile
  1488                           
  1489                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
  1490  00FDC8  0E00               	movlw	0
  1491  00FDCA  6E66               	movwf	102,c	;volatile
  1492                           
  1493                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x08;
  1494  00FDCC  0E08               	movlw	8
  1495  00FDCE  010F               	movlb	15	; () banked
  1496  00FDD0  6F5F               	movwf	95,b	;volatile
  1497                           
  1498                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
  1499  00FDD2  0E00               	movlw	0
  1500  00FDD4  6F5D               	movwf	93,b	;volatile
  1501                           
  1502                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
  1503  00FDD6  0E00               	movlw	0
  1504  00FDD8  6F5E               	movwf	94,b	;volatile
  1505                           
  1506                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
  1507  00FDDA  0E00               	movlw	0
  1508  00FDDC  6F59               	movwf	89,b	;volatile
  1509                           
  1510                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x00;
  1511  00FDDE  0E00               	movlw	0
  1512  00FDE0  6F5A               	movwf	90,b	;volatile
  1513                           
  1514                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
  1515  00FDE2  0E00               	movlw	0
  1516  00FDE4  6F5B               	movwf	91,b	;volatile
  1517                           
  1518                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
  1519  00FDE6  0E00               	movlw	0
  1520  00FDE8  6E65               	movwf	101,c	;volatile
  1521                           
  1522                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x00;
  1523  00FDEA  0E00               	movlw	0
  1524  00FDEC  6F58               	movwf	88,b	;volatile
  1525                           
  1526                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
  1527  00FDEE  0E00               	movlw	0
  1528  00FDF0  6F56               	movwf	86,b	;volatile
  1529                           
  1530                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x1F;
  1531  00FDF2  0E1F               	movlw	31
  1532  00FDF4  6F57               	movwf	87,b	;volatile
  1533                           
  1534                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x84;
  1535  00FDF6  0E84               	movlw	132
  1536  00FDF8  6E60               	movwf	96,c	;volatile
  1537                           
  1538                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x01;
  1539  00FDFA  0E01               	movlw	1
  1540  00FDFC  6F5C               	movwf	92,b	;volatile
  1541  00FDFE                     
  1542                           ; BSR set to: 15
  1543  00FDFE  0012               	return		;funcret
  1544  00FE00                     __end_of_ADCC_Initialize:
  1545                           	callstack 0
  1546  0000                     
  1547                           	psect	rparam
  1548  0000                     
  1549                           	psect	idloc
  1550                           
  1551                           ;Config register IDLOC0 @ 0x200000
  1552                           ;	unspecified, using default values
  1553  200000                     	org	2097152
  1554  200000  0FFF               	dw	4095
  1555                           
  1556                           ;Config register IDLOC1 @ 0x200002
  1557                           ;	unspecified, using default values
  1558  200002                     	org	2097154
  1559  200002  0FFF               	dw	4095
  1560                           
  1561                           ;Config register IDLOC2 @ 0x200004
  1562                           ;	unspecified, using default values
  1563  200004                     	org	2097156
  1564  200004  0FFF               	dw	4095
  1565                           
  1566                           ;Config register IDLOC3 @ 0x200006
  1567                           ;	unspecified, using default values
  1568  200006                     	org	2097158
  1569  200006  0FFF               	dw	4095
  1570                           
  1571                           ;Config register IDLOC4 @ 0x200008
  1572                           ;	unspecified, using default values
  1573  200008                     	org	2097160
  1574  200008  0FFF               	dw	4095
  1575                           
  1576                           ;Config register IDLOC5 @ 0x20000A
  1577                           ;	unspecified, using default values
  1578  20000A                     	org	2097162
  1579  20000A  0FFF               	dw	4095
  1580                           
  1581                           ;Config register IDLOC6 @ 0x20000C
  1582                           ;	unspecified, using default values
  1583  20000C                     	org	2097164
  1584  20000C  0FFF               	dw	4095
  1585                           
  1586                           ;Config register IDLOC7 @ 0x20000E
  1587                           ;	unspecified, using default values
  1588  20000E                     	org	2097166
  1589  20000E  0FFF               	dw	4095
  1590                           
  1591                           	psect	config
  1592                           
  1593                           ;Config register CONFIG1L @ 0x300000
  1594                           ;	External Oscillator mode Selection bits
  1595                           ;	FEXTOSC = OFF, Oscillator not enabled
  1596                           ;	Power-up default value for COSC bits
  1597                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  1598  300000                     	org	3145728
  1599  300000  8C                 	db	140
  1600                           
  1601                           ;Config register CONFIG1H @ 0x300001
  1602                           ;	Clock Out Enable bit
  1603                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1604                           ;	Clock Switch Enable bit
  1605                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1606                           ;	Fail-Safe Clock Monitor Enable bit
  1607                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1608  300001                     	org	3145729
  1609  300001  FF                 	db	255
  1610                           
  1611                           ;Config register CONFIG2L @ 0x300002
  1612                           ;	Master Clear Enable bit
  1613                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1614                           ;	Power-up Timer Enable bit
  1615                           ;	PWRTE = OFF, Power up timer disabled
  1616                           ;	Low-power BOR enable bit
  1617                           ;	LPBOREN = OFF, ULPBOR disabled
  1618                           ;	Brown-out Reset Enable bits
  1619                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1620  300002                     	org	3145730
  1621  300002  FF                 	db	255
  1622                           
  1623                           ;Config register CONFIG2H @ 0x300003
  1624                           ;	Brown Out Reset Voltage selection bits
  1625                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  1626                           ;	ZCD Disable bit
  1627                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1628                           ;	PPSLOCK bit One-Way Set Enable bit
  1629                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  1630                           ;	Stack Full/Underflow Reset Enable bit
  1631                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1632                           ;	Debugger Enable bit
  1633                           ;	DEBUG = OFF, Background debugger disabled
  1634                           ;	Extended Instruction Set Enable bit
  1635                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1636  300003                     	org	3145731
  1637  300003  FF                 	db	255
  1638                           
  1639                           ;Config register CONFIG3L @ 0x300004
  1640                           ;	WDT Period Select bits
  1641                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1642                           ;	WDT operating mode
  1643                           ;	WDTE = OFF, WDT Disabled
  1644  300004                     	org	3145732
  1645  300004  9F                 	db	159
  1646                           
  1647                           ;Config register CONFIG3H @ 0x300005
  1648                           ;	WDT Window Select bits
  1649                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1650                           ;	WDT input clock selector
  1651                           ;	WDTCCS = SC, Software Control
  1652  300005                     	org	3145733
  1653  300005  FF                 	db	255
  1654                           
  1655                           ;Config register CONFIG4L @ 0x300006
  1656                           ;	Write Protection Block 0
  1657                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1658                           ;	Write Protection Block 1
  1659                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1660                           ;	Write Protection Block 2
  1661                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1662                           ;	Write Protection Block 3
  1663                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1664  300006                     	org	3145734
  1665  300006  FF                 	db	255
  1666                           
  1667                           ;Config register CONFIG4H @ 0x300007
  1668                           ;	Configuration Register Write Protection bit
  1669                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  1670                           ;	Boot Block Write Protection bit
  1671                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1672                           ;	Data EEPROM Write Protection bit
  1673                           ;	WRTD = OFF, Data EEPROM not write-protected
  1674                           ;	Scanner Enable bit
  1675                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  1676                           ;	Low Voltage Programming Enable bit
  1677                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  1678  300007                     	org	3145735
  1679  300007  FF                 	db	255
  1680                           
  1681                           ;Config register CONFIG5L @ 0x300008
  1682                           ;	UserNVM Program Memory Code Protection bit
  1683                           ;	CP = OFF, UserNVM code protection disabled
  1684                           ;	DataNVM Memory Code Protection bit
  1685                           ;	CPD = OFF, DataNVM code protection disabled
  1686  300008                     	org	3145736
  1687  300008  FF                 	db	255
  1688                           
  1689                           ;Config register CONFIG5H @ 0x300009
  1690                           ;	unspecified, using default values
  1691  300009                     	org	3145737
  1692  300009  FF                 	db	255
  1693                           
  1694                           ;Config register CONFIG6L @ 0x30000A
  1695                           ;	Table Read Protection Block 0
  1696                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1697                           ;	Table Read Protection Block 1
  1698                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1699                           ;	Table Read Protection Block 2
  1700                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1701                           ;	Table Read Protection Block 3
  1702                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1703  30000A                     	org	3145738
  1704  30000A  FF                 	db	255
  1705                           
  1706                           ;Config register CONFIG6H @ 0x30000B
  1707                           ;	Boot Block Table Read Protection bit
  1708                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1709  30000B                     	org	3145739
  1710  30000B  FF                 	db	255
  1711                           tosu	equ	0xFFF
  1712                           tosh	equ	0xFFE
  1713                           tosl	equ	0xFFD
  1714                           stkptr	equ	0xFFC
  1715                           pclatu	equ	0xFFB
  1716                           pclath	equ	0xFFA
  1717                           pcl	equ	0xFF9
  1718                           tblptru	equ	0xFF8
  1719                           tblptrh	equ	0xFF7
  1720                           tblptrl	equ	0xFF6
  1721                           tablat	equ	0xFF5
  1722                           prodh	equ	0xFF4
  1723                           prodl	equ	0xFF3
  1724                           indf0	equ	0xFEF
  1725                           postinc0	equ	0xFEE
  1726                           postdec0	equ	0xFED
  1727                           preinc0	equ	0xFEC
  1728                           plusw0	equ	0xFEB
  1729                           fsr0h	equ	0xFEA
  1730                           fsr0l	equ	0xFE9
  1731                           wreg	equ	0xFE8
  1732                           indf1	equ	0xFE7
  1733                           postinc1	equ	0xFE6
  1734                           postdec1	equ	0xFE5
  1735                           preinc1	equ	0xFE4
  1736                           plusw1	equ	0xFE3
  1737                           fsr1h	equ	0xFE2
  1738                           fsr1l	equ	0xFE1
  1739                           bsr	equ	0xFE0
  1740                           indf2	equ	0xFDF
  1741                           postinc2	equ	0xFDE
  1742                           postdec2	equ	0xFDD
  1743                           preinc2	equ	0xFDC
  1744                           plusw2	equ	0xFDB
  1745                           fsr2h	equ	0xFDA
  1746                           fsr2l	equ	0xFD9
  1747                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     16      23
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    Tm_Baje_periodico@ctp	PTR struct Tm_Periodico size(2) Largest target is 9
		 -> main@Mi_timer(COMRAM[9]), 

    Tm_Hubo_periodico@ctp	PTR struct Tm_Periodico size(2) Largest target is 9
		 -> main@Mi_timer(COMRAM[9]), 

    Tm_Procese_tiempo@ctp	PTR struct Tm_Periodico size(2) Largest target is 9
		 -> main@Mi_timer(COMRAM[9]), 

    Tm_Inicie_periodico@ctp	PTR struct Tm_Periodico size(2) Largest target is 9
		 -> main@Mi_timer(COMRAM[9]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_Tm_Procese_tiempo
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    1169
                                              6 COMRAM    10    10      0
                  _SYSTEM_Initialize
            _TMR6_HasOverflowOccured
                  _Tm_Baje_periodico
                  _Tm_Hubo_periodico
                _Tm_Inicie_periodico
                  _Tm_Procese_tiempo
 ---------------------------------------------------------------------------------
 (1) _Tm_Procese_tiempo                                    6     4      2     274
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Tm_Inicie_periodico                                  4     0      4     262
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _Tm_Hubo_periodico                                    2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Tm_Baje_periodico                                    2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR6_HasOverflowOccured                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                    _ADCC_Initialize
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR6_Initialize
   _TMR6_HasOverflowOccured
   _Tm_Baje_periodico
   _Tm_Hubo_periodico
   _Tm_Inicie_periodico
   _Tm_Procese_tiempo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     10      17       1       24.2%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      17       6        0.0%
DATA                 0      0      17       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Sep 09 00:11:41 2021

                                            l27 FCFE                                              l67 FD2A  
               __end_of_TMR6_HasOverflowOccured FD2C                                              u10 FD12  
                                            u11 FD0C                                              u20 FD26  
                                            u21 FD22                                              u16 FD14  
                                           l310 FCE0                                             l232 FC62  
                                           l144 FE7E                                             l304 FCC4  
                                           l235 FC4E                                             l307 FCAA  
                                           l229 FC58                                             l190 FD68  
                                           l383 FDFE                                             l473 FFFE  
                                           l467 FDAE                                             l476 FC92  
                                           l479 FC80                                             u200 FED8  
                                           u201 FED4                                             u210 FEF4  
                                           u211 FEEE                                             u220 FF14  
                                           u221 FF0E                                             u160 FF48  
                                           u216 FEF6                                             u161 FF44  
                                           u170 FF70                                             u226 FF16  
                                           u171 FF6C                                             u180 FFBE  
                                           u181 FFBA                                             u190 FEB0  
                                           u191 FEAC                                             _PR6 000FB0  
                                  main@Mi_timer 0008                         __size_of_PMD_Initialize 001C  
                                          l1201 FE6A                                            l1203 FE6C  
                                          l1221 FDB0                                            l1205 FE6E  
                                          l1217 FCC6                                            l1241 FD28  
                                          l1219 FC94                                            l1181 FE18  
                                          l1237 FD00                                            l1501 FEE4  
                                          l1191 FE5C                                            l1183 FE1A  
                                          l1175 FCE2                                            l1239 FD26  
                                          l1503 FF04                                            l1441 FC50  
                                          l1193 FE5E                                            l1185 FE24  
                                          l1177 FCF6                                            l1443 FC5A  
                                          l1451 FD4C                                            l1195 FE60  
                                          l1187 FE2C                                            l1179 FE00  
                                          l1445 FC46                                            l1453 FD58  
                                          l1197 FE62                                            l1189 FE32  
                                          l1461 FD6A                                            l1455 FD64  
                                          l1447 FD2C                                            l1199 FE68  
                                          l1463 FD8A                                            l1471 FF80  
                                          l1449 FD40                                            l1457 FCAC  
                                          l1481 FC70                                            l1473 FF9C  
                                          l1465 FF2E                                            l1459 FCC0  
                                          l1475 FFBE                                            l1467 FF48  
                                          l1491 FE9C                                            l1483 FE80  
                                          l1477 FC82                                            l1469 FF70  
                                          l1493 FE9C                                            l1485 FE84  
                                          l1495 FEB0                                            l1487 FE98  
                                          l1497 FEBC                                            l1489 FE9A  
                                          l1499 FED8                                            _LATA 000F83  
                                          _LATB 000F84                                            _LATC 000F85  
                                          _LATD 000F86                                            _LATE 000F87  
                                          _T6PR 000FB0                                            _PMD0 000EE1  
                                          _PMD1 000EE2                                            _PMD2 000EE3  
                                          _PMD3 000EE4                                            _PMD4 000EE5  
                                          _PMD5 000EE6                                            _TMR6 000FAF  
                                          _WPUA 000F10                                            _WPUB 000F18  
                                          _WPUC 000F20                                            _WPUD 000F25  
                                          _WPUE 000F2D                                            _main FE80  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          fsr2l 000FD9                                            start 0000  
                                  ___param_bank 000000                  __size_of_OSCILLATOR_Initialize 0018  
                 __end_of_OSCILLATOR_Initialize FCAC                                           _ADACQ 000F5C  
                                         _ADCAP 000F5D                                           _ADACT 000F56  
                                         ?_main 0001                                           _ADCLK 000F57  
                                         _ADCNT 000F67                                           _ADPCH 000F5F  
                                         _ADREF 000F58                                           _ADPRE 000F5E  
                                         _ADRPT 000F66                                           _T6CON 000FB1  
                                         _T6HLT 000FB2                                           _T6TMR 000FAF  
                                         _T6RST 000FB4                                           _OSCEN 000EDC  
                                         _TRISA 000F88                                           _TRISB 000F89  
                                         _TRISC 000F8A                                           _TRISD 000F8B  
                                         _TRISE 000F8C                                           plusw2 000FDB  
                                         status 000FD8                     __end_of_Tm_Inicie_periodico FDB0  
            _EUSART1_DefaultFramingErrorHandler 000000                                 __initialization FC64  
                    __end_of_EUSART1_Initialize FD6A                                    __end_of_main FF2E  
                             _Tm_Baje_periodico FC70                              ?_Tm_Baje_periodico 0001  
                                        ??_main 0007                                   __activetblptr 000002  
                               _TMR6_Initialize FCE2                             ??_Tm_Baje_periodico 0003  
                                        _ADACCH 000F71                                          _ADACCL 000F70  
                                        _ADCON0 000F60                                          _ADCON1 000F59  
                                        _ADCON2 000F5A                                          _ADCON3 000F5B  
                                        _ADERRH 000F6F                                          _ADERRL 000F6E  
                                        _ADLTHH 000F6B                                          _ADLTHL 000F6A  
                                        _ADRESH 000F64                                          _ADRESL 000F63  
                                        _ADSTAT 000F65                                          _ADUTHH 000F6D  
                                        _ADUTHL 000F6C                                          _ANSELA 000F11  
                                        _ANSELB 000F19                                          _ANSELC 000F21  
                                        _ANSELD 000F26                                          _ANSELE 000F2E  
                                        _RC1REG 000F99                                          _RC1PPS 000EF8  
                                        _RC1STA 000F9D                                          _ODCONA 000F0F  
                                        _ODCONB 000F17                                          _ODCONC 000F1F  
                                        _ODCOND 000F24                                          _ODCONE 000F2C  
                                        _INLVLA 000F0D                                          _INLVLB 000F15  
                                        _INLVLC 000F1D                                          _INLVLD 000F22  
                                        _INLVLE 000F2A                                          _OSCFRQ 000EDE  
                                        _RX1PPS 000EB5                                          _TX1REG 000F9A  
                                        _TX1STA 000F9E                __size_of_TMR6_HasOverflowOccured 002C  
                     __end_of_Tm_Baje_periodico FC82                               _Tm_Hubo_periodico FC82  
                      ?_EUSART1_SetErrorHandler 0001                              ?_Tm_Hubo_periodico 0001  
                                        isa$std 000001                ??_EUSART1_SetOverrunErrorHandler 0003  
               ?_EUSART1_SetOverrunErrorHandler 0001                                 _ADCC_Initialize FDB0  
                                _PMD_Initialize FCC6                             ??_Tm_Hubo_periodico 0003  
                                        tblptru 000FF8                               _SYSTEM_Initialize FCAC  
                                    __accesstop 0060                         __end_of__initialization FC66  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                     __end_of_Tm_Hubo_periodico FC94                                  __pcstackCOMRAM 0001  
                           ??_SYSTEM_Initialize 0003                         __end_of_TMR6_Initialize FD00  
                        __end_of_PMD_Initialize FCE2                       __end_of_SYSTEM_Initialize FCC6  
                                    __pnvCOMRAM 0011                 __end_of_EUSART1_SetErrorHandler FC50  
                    __size_of_Tm_Baje_periodico 0012                         __end_of_ADCC_Initialize FE00  
                                       _ADFLTRH 000F73                                         _ADFLTRL 000F72  
                                       _ADPREVH 000F62                                         _ADPREVL 000F61  
                                       _ADSTPTH 000F69                                         _ADSTPTL 000F68  
                               ?_PMD_Initialize 0001          __end_of_EUSART1_SetFramingErrorHandler FC5A  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler FC50  
                                       _SP1BRGH 000F9C                                         _SP1BRGL 000F9B  
                                       _OSCCON1 000ED8                                         _OSCCON3 000EDA  
                                       _OSCTUNE 000EDD                                         _SLRCONA 000F0E  
                                       _SLRCONB 000F16                                         _SLRCONC 000F1E  
                                       _SLRCOND 000F23                                         _SLRCONE 000F2B  
                             _Tm_Procese_tiempo FF2E                         _TMR6_HasOverflowOccured FD00  
                            ?_Tm_Procese_tiempo 0001                                         __Hparam 0000  
                           ??_Tm_Procese_tiempo 0003                                         __Lparam 0000  
                    __size_of_Tm_Hubo_periodico 0012                                         __pcinit FC64  
                              ?_TMR6_Initialize 0001                                         __ramtop 0F00  
                                       __ptext0 FE80                                         __ptext1 FF2E  
                                       __ptext2 FD6A                                         __ptext3 FC82  
                                       __ptext4 FC70                                         __ptext5 FD00  
                                       __ptext6 FCAC                                         __ptext7 FCE2  
                                       __ptext8 FCC6                                         __ptext9 FE00  
                         _OSCILLATOR_Initialize FC94                              _EUSART1_Initialize FD2C  
                      ??_PIN_MANAGER_Initialize 0001                       __end_of_Tm_Procese_tiempo 0000  
                                     _T6CONbits 000FB1                                       _T6HLTbits 000FB2  
                    __size_of_SYSTEM_Initialize 001A                            end_of_initialization FC66  
                           ?_EUSART1_Initialize 0001                                   __Lmediumconst 0000  
                   _EUSART1_OverrunErrorHandler 0013                                       _T6RSTbits 000FB4  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc1 000FE6                                         postinc2 000FDE  
                  __size_of_Tm_Inicie_periodico 0046                                ?_ADCC_Initialize 0001  
                          ??_EUSART1_Initialize 0003                   TMR6_HasOverflowOccured@status 0001  
                     ??_TMR6_HasOverflowOccured 0001                __size_of_EUSART1_SetErrorHandler 000A  
                        ?_OSCILLATOR_Initialize 0001                            Tm_Procese_tiempo@ctp 0001  
                           start_initialization FC64                      __size_of_Tm_Procese_tiempo 00D2  
               __size_of_PIN_MANAGER_Initialize 0080                          Tm_Inicie_periodico@ctp 0001  
                              ??_PMD_Initialize 0001                                     __pbssCOMRAM 0017  
              ??_EUSART1_SetFramingErrorHandler 0003                 ?_EUSART1_SetFramingErrorHandler 0001  
                        _PIN_MANAGER_Initialize FE00                                        _BAUD1CON 000F9F  
            _EUSART1_DefaultOverrunErrorHandler 000000                            _EUSART1_ErrorHandler 0011  
                       _EUSART1_SetErrorHandler FC46                             _Tm_Inicie_periodico FD6A  
                                      _T6CLKCON 000FB3         EUSART1_SetErrorHandler@interruptHandler 0001  
                                      _LATDbits 000F86                                        _PIR3bits 000ECD  
                                      _PIR4bits 000ECE                            ?_Tm_Inicie_periodico 0001  
                                    _ADCON0bits 000F60                                      _ADCON1bits 000F59  
                                    _ADCON2bits 000F5A                                      _ADCON3bits 000F5B  
                      __size_of_TMR6_Initialize 001E                                      _ADSTATbits 000F65  
                                      __Hrparam 0000                                        __Lrparam 0000  
                         ??_Tm_Inicie_periodico 0005                         ??_OSCILLATOR_Initialize 0001  
                   __size_of_EUSART1_Initialize 003E                       ??_EUSART1_SetErrorHandler 0003  
                   _EUSART1_DefaultErrorHandler 000000                      Tm_Inicie_periodico@periodo 0003  
                      __size_of_ADCC_Initialize 0050                                        __ptext10 FC94  
                                      __ptext11 FD2C                                        __ptext12 FC5A  
                                      __ptext13 FC50                                        __ptext14 FC46  
                                      __ptext15 FDB0                                   __size_of_main 00AE  
                          Tm_Baje_periodico@ctp 0001                                      _RC1STAbits 000F9D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0001                                        isa$xinst 000000  
                   _EUSART1_FramingErrorHandler 0015                        ?_TMR6_HasOverflowOccured 0001  
                          Tm_Hubo_periodico@ctp 0001                         ?_PIN_MANAGER_Initialize 0001  
                             ??_TMR6_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler FC64  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler FC5A  
EUSART1_SetFramingErrorHandler@interruptHandler 0001                              _eusart1RxLastError 0017  
                                    _TX1STAbits 000F9E                  __end_of_PIN_MANAGER_Initialize FE80  
                             ??_ADCC_Initialize 0001  
