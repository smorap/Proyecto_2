

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Sep 30 16:07:27 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 05/05/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F46K40 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    76  0000                     
    77 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    78  0000                     
    79 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    80  0000                     
    81                           	psect	nvCOMRAM
    82  000028                     __pnvCOMRAM:
    83                           	callstack 0
    84  000028                     _EUSART1_ErrorHandler:
    85                           	callstack 0
    86  000028                     	ds	2
    87  00002A                     _EUSART1_OverrunErrorHandler:
    88                           	callstack 0
    89  00002A                     	ds	2
    90  00002C                     _EUSART1_FramingErrorHandler:
    91                           	callstack 0
    92  00002C                     	ds	2
    93  0000                     _PMD5	set	3814
    94  0000                     _PMD4	set	3813
    95  0000                     _PMD3	set	3812
    96  0000                     _PMD2	set	3811
    97  0000                     _PMD1	set	3810
    98  0000                     _PMD0	set	3809
    99  0000                     _OSCTUNE	set	3805
   100  0000                     _OSCFRQ	set	3806
   101  0000                     _OSCEN	set	3804
   102  0000                     _OSCCON3	set	3802
   103  0000                     _OSCCON1	set	3800
   104  0000                     _PIR3bits	set	3789
   105  0000                     _RC1PPS	set	3832
   106  0000                     _RX1PPS	set	3765
   107  0000                     _PIR4bits	set	3790
   108  0000                     _ADCON1bits	set	3929
   109  0000                     _ADCON2bits	set	3930
   110  0000                     _ADCON3bits	set	3931
   111  0000                     _ADACQ	set	3932
   112  0000                     _ADCLK	set	3927
   113  0000                     _ADACT	set	3926
   114  0000                     _ADREF	set	3928
   115  0000                     _ADCON3	set	3931
   116  0000                     _ADCON2	set	3930
   117  0000                     _ADCON1	set	3929
   118  0000                     _ADPRE	set	3934
   119  0000                     _ADCAP	set	3933
   120  0000                     _ADPCH	set	3935
   121  0000                     _INLVLE	set	3882
   122  0000                     _INLVLD	set	3874
   123  0000                     _INLVLC	set	3869
   124  0000                     _INLVLB	set	3861
   125  0000                     _INLVLA	set	3853
   126  0000                     _SLRCONE	set	3883
   127  0000                     _SLRCOND	set	3875
   128  0000                     _SLRCONC	set	3870
   129  0000                     _SLRCONB	set	3862
   130  0000                     _SLRCONA	set	3854
   131  0000                     _ODCOND	set	3876
   132  0000                     _ODCONC	set	3871
   133  0000                     _ODCONB	set	3863
   134  0000                     _ODCONA	set	3855
   135  0000                     _ODCONE	set	3884
   136  0000                     _WPUC	set	3872
   137  0000                     _WPUA	set	3856
   138  0000                     _WPUB	set	3864
   139  0000                     _WPUE	set	3885
   140  0000                     _WPUD	set	3877
   141  0000                     _ANSELA	set	3857
   142  0000                     _ANSELE	set	3886
   143  0000                     _ANSELB	set	3865
   144  0000                     _ANSELC	set	3873
   145  0000                     _ANSELD	set	3878
   146  0000                     _LATBbits	set	3972
   147  0000                     _LATDbits	set	3974
   148  0000                     _ADERRL	set	3950
   149  0000                     _ADERRH	set	3951
   150  0000                     _ADPREVL	set	3937
   151  0000                     _ADPREVH	set	3938
   152  0000                     _ADFLTRL	set	3954
   153  0000                     _ADFLTRH	set	3955
   154  0000                     _ADSTATbits	set	3941
   155  0000                     _ADACCL	set	3952
   156  0000                     _ADACCH	set	3953
   157  0000                     _ADCNT	set	3943
   158  0000                     _ADRESL	set	3939
   159  0000                     _ADRESH	set	3940
   160  0000                     _ADCON0bits	set	3936
   161  0000                     _ADCON0	set	3936
   162  0000                     _ADSTAT	set	3941
   163  0000                     _ADRPT	set	3942
   164  0000                     _ADSTPTH	set	3945
   165  0000                     _ADSTPTL	set	3944
   166  0000                     _ADUTHH	set	3949
   167  0000                     _ADUTHL	set	3948
   168  0000                     _ADLTHH	set	3947
   169  0000                     _ADLTHL	set	3946
   170  0000                     _TX1REG	set	3994
   171  0000                     _RC1REG	set	3993
   172  0000                     _RC1STAbits	set	3997
   173  0000                     _TX1STAbits	set	3998
   174  0000                     _SP1BRGH	set	3996
   175  0000                     _SP1BRGL	set	3995
   176  0000                     _TX1STA	set	3998
   177  0000                     _RC1STA	set	3997
   178  0000                     _BAUD1CON	set	3999
   179  0000                     _TRISD	set	3979
   180  0000                     _TRISC	set	3978
   181  0000                     _TRISB	set	3977
   182  0000                     _TRISA	set	3976
   183  0000                     _TRISE	set	3980
   184  0000                     _LATC	set	3973
   185  0000                     _LATB	set	3972
   186  0000                     _LATA	set	3971
   187  0000                     _LATD	set	3974
   188  0000                     _LATE	set	3975
   189  0000                     _PR6	set	4016
   190  0000                     _TMR6	set	4015
   191  0000                     _T6CONbits	set	4017
   192  0000                     _T6RSTbits	set	4020
   193  0000                     _T6HLTbits	set	4018
   194  0000                     _T6CON	set	4017
   195  0000                     _T6TMR	set	4015
   196  0000                     _T6PR	set	4016
   197  0000                     _T6RST	set	4020
   198  0000                     _T6HLT	set	4018
   199  0000                     _T6CLKCON	set	4019
   200                           
   201                           ; #config settings
   202                           
   203                           	psect	cinit
   204  00F276                     __pcinit:
   205                           	callstack 0
   206  00F276                     start_initialization:
   207                           	callstack 0
   208  00F276                     __initialization:
   209                           	callstack 0
   210                           
   211                           ; Clear objects allocated to COMRAM (15 bytes)
   212  00F276  EE00  F019         	lfsr	0,__pbssCOMRAM
   213  00F27A  0E0F               	movlw	15
   214  00F27C                     clear_0:
   215  00F27C  6AEE               	clrf	postinc0,c
   216  00F27E  06E8               	decf	wreg,f,c
   217  00F280  E1FD               	bnz	clear_0
   218  00F282                     end_of_initialization:
   219                           	callstack 0
   220  00F282                     __end_of__initialization:
   221                           	callstack 0
   222  00F282  0E00               	movlw	low (__Lmediumconst shr (0+16))
   223  00F284  6EF8               	movwf	tblptru,c
   224  00F286  0100               	movlb	0
   225  00F288  EF80  F07B         	goto	_main	;jump to C main() function
   226                           
   227                           	psect	bssCOMRAM
   228  000019                     __pbssCOMRAM:
   229                           	callstack 0
   230  000019                     _V_Recibido:
   231                           	callstack 0
   232  000019                     	ds	7
   233  000020                     _recibidoo:
   234                           	callstack 0
   235  000020                     	ds	2
   236  000022                     _recibido:
   237                           	callstack 0
   238  000022                     	ds	2
   239  000024                     _conteo:
   240                           	callstack 0
   241  000024                     	ds	1
   242  000025                     _Transmision_Completada:
   243                           	callstack 0
   244  000025                     	ds	1
   245  000026                     _Transmision_Error:
   246                           	callstack 0
   247  000026                     	ds	1
   248  000027                     _eusart1RxLastError:
   249                           	callstack 0
   250  000027                     	ds	1
   251                           
   252                           	psect	cstackCOMRAM
   253  000001                     __pcstackCOMRAM:
   254                           	callstack 0
   255  000001                     ?_ADCC_GetConversionResult:
   256                           	callstack 0
   257  000001                     ?___wmul:
   258                           	callstack 0
   259  000001                     ?___lwdiv:
   260                           	callstack 0
   261  000001                     ?___lwmod:
   262                           	callstack 0
   263  000001                     TMR6_HasOverflowOccured@status:
   264                           	callstack 0
   265  000001                     _EUSART1_is_tx_ready$556:
   266                           	callstack 0
   267  000001                     EUSART1_Write@txData:
   268                           	callstack 0
   269  000001                     EUSART1_SetFramingErrorHandler@interruptHandler:
   270                           	callstack 0
   271  000001                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   272                           	callstack 0
   273  000001                     EUSART1_SetErrorHandler@interruptHandler:
   274                           	callstack 0
   275  000001                     Inicializar_Maquinita@mqnt:
   276                           	callstack 0
   277  000001                     Inicializar_Paquete@mqnt:
   278                           	callstack 0
   279  000001                     Procese_UART@mqnt:
   280                           	callstack 0
   281  000001                     ___wmul@multiplier:
   282                           	callstack 0
   283  000001                     ___lwdiv@dividend:
   284                           	callstack 0
   285  000001                     ___lwmod@dividend:
   286                           	callstack 0
   287                           
   288                           ; 2 bytes @ 0x0
   289  000001                     	ds	2
   290  000003                     ??_ADCC_GetConversionResult:
   291  000003                     ??_Procese_UART:
   292  000003                     ___wmul@multiplicand:
   293                           	callstack 0
   294  000003                     ___lwdiv@divisor:
   295                           	callstack 0
   296  000003                     ___lwmod@divisor:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0x2
   300  000003                     	ds	2
   301  000005                     ___lwmod@counter:
   302                           	callstack 0
   303  000005                     ___wmul@product:
   304                           	callstack 0
   305  000005                     ___lwdiv@quotient:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x4
   309  000005                     	ds	2
   310  000007                     ___lwdiv@counter:
   311                           	callstack 0
   312                           
   313                           ; 1 bytes @ 0x6
   314  000007                     	ds	1
   315  000008                     ??_Procese_Dato_Rebido:
   316  000008                     Ds_Separar_Digito@dsp:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0x7
   320  000008                     	ds	2
   321  00000A                     Ds_Separar_Digito@datto:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0x9
   325  00000A                     	ds	2
   326  00000C                     ??_main:
   327                           
   328                           ; 1 bytes @ 0xB
   329  00000C                     	ds	1
   330  00000D                     main@ADC_Value:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0xC
   334  00000D                     	ds	2
   335  00000F                     main@enviar:
   336                           	callstack 0
   337                           
   338                           ; 1 bytes @ 0xE
   339  00000F                     	ds	1
   340  000010                     main@My_Paquete_Salida:
   341                           	callstack 0
   342                           
   343                           ; 4 bytes @ 0xF
   344  000010                     	ds	4
   345  000014                     main@My_Maquinita:
   346                           	callstack 0
   347                           
   348                           ; 5 bytes @ 0x13
   349  000014                     	ds	5
   350                           
   351 ;;
   352 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   353 ;;
   354 ;; *************** function _main *****************
   355 ;; Defined at:
   356 ;;		line 185 in file "main.c"
   357 ;; Parameters:    Size  Location     Type
   358 ;;		None
   359 ;; Auto vars:     Size  Location     Type
   360 ;;  My_Maquinita    5   19[COMRAM] struct Maquinita
   361 ;;  My_Paquete_S    4   15[COMRAM] struct Paquete_Salida
   362 ;;  ADC_Value       2   12[COMRAM] unsigned short 
   363 ;;  enviar          1   14[COMRAM] unsigned char 
   364 ;; Return value:  Size  Location     Type
   365 ;;                  1    wreg      void 
   366 ;; Registers used:
   367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   368 ;; Tracked objects:
   369 ;;		On entry : 0/0
   370 ;;		On exit  : 0/0
   371 ;;		Unchanged: 0/0
   372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   374 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   375 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   376 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   377 ;;Total ram usage:       13 bytes
   378 ;; Hardware stack levels required when called:    3
   379 ;; This function calls:
   380 ;;		_ADCC_GetConversionResult
   381 ;;		_ADCC_Initialize
   382 ;;		_ADCC_IsConversionDone
   383 ;;		_Ds_Separar_Digito
   384 ;;		_EUSART1_Write
   385 ;;		_EUSART1_is_rx_ready
   386 ;;		_EUSART1_is_tx_ready
   387 ;;		_Inicializar_Maquinita
   388 ;;		_Inicializar_Paquete
   389 ;;		_Procese_Dato_Rebido
   390 ;;		_Procese_UART
   391 ;;		_SYSTEM_Initialize
   392 ;;		_TMR6_HasOverflowOccured
   393 ;; This function is called by:
   394 ;;		Startup code after reset
   395 ;; This function uses a non-reentrant model
   396 ;;
   397                           
   398                           	psect	text0
   399  00F700                     __ptext0:
   400                           	callstack 0
   401  00F700                     _main:
   402                           	callstack 28
   403  00F700                     
   404                           ;main.c: 186:     SYSTEM_Initialize();
   405  00F700  EC5E  F079         	call	_SYSTEM_Initialize	;wreg free
   406  00F704                     
   407                           ;main.c: 188:  Maquinita My_Maquinita;;main.c: 189:  Inicializar_Maquinita(&My_Maquinita
      +                          );
   408  00F704  0E14               	movlw	low main@My_Maquinita
   409  00F706  6E01               	movwf	Inicializar_Maquinita@mqnt^0,c
   410  00F708  0E00               	movlw	high main@My_Maquinita
   411  00F70A  6E02               	movwf	(Inicializar_Maquinita@mqnt+1)^0,c
   412  00F70C  EC19  F07A         	call	_Inicializar_Maquinita	;wreg free
   413  00F710                     
   414                           ;main.c: 191:  Paquete_Salida My_Paquete_Salida;;main.c: 192:  Inicializar_Paquete(&My_P
      +                          aquete_Salida);
   415  00F710  0E10               	movlw	low main@My_Paquete_Salida
   416  00F712  6E01               	movwf	Inicializar_Paquete@mqnt^0,c
   417  00F714  0E00               	movlw	high main@My_Paquete_Salida
   418  00F716  6E02               	movwf	(Inicializar_Paquete@mqnt+1)^0,c
   419  00F718  ECDB  F079         	call	_Inicializar_Paquete	;wreg free
   420  00F71C                     
   421                           ;main.c: 194:  ADCC_Initialize();
   422  00F71C  EC3A  F07A         	call	_ADCC_Initialize	;wreg free
   423  00F720                     
   424                           ;main.c: 197:  char enviar = 0;
   425  00F720  0E00               	movlw	0
   426  00F722  6E0F               	movwf	main@enviar^0,c
   427  00F724                     
   428                           ;main.c: 200:  T6PR = 0x4F;
   429  00F724  0E4F               	movlw	79
   430  00F726  6EB0               	movwf	176,c	;volatile
   431  00F728                     
   432                           ;main.c: 201:  T6CON = 0xF6;
   433  00F728  0EF6               	movlw	246
   434  00F72A  6EB1               	movwf	177,c	;volatile
   435  00F72C  9086               	bcf	134,0,c	;volatile
   436  00F72E  9286               	bcf	134,1,c	;volatile
   437  00F730  9684               	bcf	132,3,c	;volatile
   438  00F732  9A86               	bcf	134,5,c	;volatile
   439  00F734                     l2106:
   440                           
   441                           ;main.c: 207:   if (EUSART1_is_rx_ready()){
   442  00F734  EC30  F079         	call	_EUSART1_is_rx_ready	;wreg free
   443  00F738  0900               	iorlw	0
   444  00F73A  B4D8               	btfsc	status,2,c
   445  00F73C  EFA2  F07B         	goto	u991
   446  00F740  EFA4  F07B         	goto	u990
   447  00F744                     u991:
   448  00F744  EFAA  F07B         	goto	l2110
   449  00F748                     u990:
   450  00F748                     
   451                           ;main.c: 208:    Procese_UART (&My_Maquinita);
   452  00F748  0E14               	movlw	low main@My_Maquinita
   453  00F74A  6E01               	movwf	Procese_UART@mqnt^0,c
   454  00F74C  0E00               	movlw	high main@My_Maquinita
   455  00F74E  6E02               	movwf	(Procese_UART@mqnt+1)^0,c
   456  00F750  EC40  F07C         	call	_Procese_UART	;wreg free
   457  00F754                     l2110:
   458                           
   459                           ;main.c: 212:   if (Transmision_Completada==1){
   460  00F754  0425               	decf	_Transmision_Completada^0,w,c	;volatile
   461  00F756  A4D8               	btfss	status,2,c
   462  00F758  EFB0  F07B         	goto	u1001
   463  00F75C  EFB2  F07B         	goto	u1000
   464  00F760                     u1001:
   465  00F760  EFC6  F07B         	goto	l2118
   466  00F764                     u1000:
   467  00F764  B086               	btfsc	134,0,c	;volatile
   468  00F766  EFB7  F07B         	goto	u1011
   469  00F76A  EFBA  F07B         	goto	u1010
   470  00F76E                     u1011:
   471  00F76E  0E01               	movlw	1
   472  00F770  EFBB  F07B         	goto	u1016
   473  00F774                     u1010:
   474  00F774  0E00               	movlw	0
   475  00F776                     u1016:
   476  00F776  0AFF               	xorlw	255
   477  00F778  6E0C               	movwf	??_main^0,c
   478  00F77A  5086               	movf	134,w,c	;volatile
   479  00F77C  180C               	xorwf	??_main^0,w,c
   480  00F77E  0BFE               	andlw	-2
   481  00F780  180C               	xorwf	??_main^0,w,c
   482  00F782  6E86               	movwf	134,c	;volatile
   483  00F784                     
   484                           ;main.c: 214:    Transmision_Completada = 0;
   485  00F784  0E00               	movlw	0
   486  00F786  6E25               	movwf	_Transmision_Completada^0,c	;volatile
   487  00F788                     
   488                           ;main.c: 215:    Procese_Dato_Rebido();
   489  00F788  ECF1  F07D         	call	_Procese_Dato_Rebido	;wreg free
   490  00F78C                     l2118:
   491                           
   492                           ;main.c: 218:         if (TMR6_HasOverflowOccured()){
   493  00F78C  ECC5  F079         	call	_TMR6_HasOverflowOccured	;wreg free
   494  00F790  0900               	iorlw	0
   495  00F792  B4D8               	btfsc	status,2,c
   496  00F794  EFCE  F07B         	goto	u1021
   497  00F798  EFD0  F07B         	goto	u1020
   498  00F79C                     u1021:
   499  00F79C  EFE6  F07B         	goto	l2122
   500  00F7A0                     u1020:
   501  00F7A0  8086               	bsf	134,0,c	;volatile
   502  00F7A2                     
   503                           ;main.c: 221:             ADCON0bits.ADON = 1;
   504  00F7A2  8E60               	bsf	96,7,c	;volatile
   505                           
   506                           ;main.c: 224:             ADCON0bits.ADGO = 1;
   507  00F7A4  8060               	bsf	96,0,c	;volatile
   508  00F7A6  B684               	btfsc	132,3,c	;volatile
   509  00F7A8  EFD8  F07B         	goto	u1031
   510  00F7AC  EFDB  F07B         	goto	u1030
   511  00F7B0                     u1031:
   512  00F7B0  0E01               	movlw	1
   513  00F7B2  EFDC  F07B         	goto	u1036
   514  00F7B6                     u1030:
   515  00F7B6  0E00               	movlw	0
   516  00F7B8                     u1036:
   517  00F7B8  0AFF               	xorlw	255
   518  00F7BA  6E0C               	movwf	??_main^0,c
   519  00F7BC  460C               	rlncf	??_main^0,f,c
   520  00F7BE  460C               	rlncf	??_main^0,f,c
   521  00F7C0  460C               	rlncf	??_main^0,f,c
   522  00F7C2  5084               	movf	132,w,c	;volatile
   523  00F7C4  180C               	xorwf	??_main^0,w,c
   524  00F7C6  0BF7               	andlw	-9
   525  00F7C8  180C               	xorwf	??_main^0,w,c
   526  00F7CA  6E84               	movwf	132,c	;volatile
   527  00F7CC                     l2122:
   528                           
   529                           ;main.c: 228:   if (!ADCC_IsConversionDone()){
   530  00F7CC  EC26  F079         	call	_ADCC_IsConversionDone	;wreg free
   531  00F7D0  0900               	iorlw	0
   532  00F7D2  A4D8               	btfss	status,2,c
   533  00F7D4  EFEE  F07B         	goto	u1041
   534  00F7D8  EFF0  F07B         	goto	u1040
   535  00F7DC                     u1041:
   536  00F7DC  EF15  F07C         	goto	l2132
   537  00F7E0                     u1040:
   538  00F7E0  9086               	bcf	134,0,c	;volatile
   539  00F7E2  BA86               	btfsc	134,5,c	;volatile
   540  00F7E4  EFF6  F07B         	goto	u1051
   541  00F7E8  EFF9  F07B         	goto	u1050
   542  00F7EC                     u1051:
   543  00F7EC  0E01               	movlw	1
   544  00F7EE  EFFA  F07B         	goto	u1056
   545  00F7F2                     u1050:
   546  00F7F2  0E00               	movlw	0
   547  00F7F4                     u1056:
   548  00F7F4  0AFF               	xorlw	255
   549  00F7F6  6E0C               	movwf	??_main^0,c
   550  00F7F8  3A0C               	swapf	??_main^0,f,c
   551  00F7FA  460C               	rlncf	??_main^0,f,c
   552  00F7FC  5086               	movf	134,w,c	;volatile
   553  00F7FE  180C               	xorwf	??_main^0,w,c
   554  00F800  0BDF               	andlw	-33
   555  00F802  180C               	xorwf	??_main^0,w,c
   556  00F804  6E86               	movwf	134,c	;volatile
   557  00F806                     
   558                           ;main.c: 231:    ADC_Value = ADCC_GetConversionResult();
   559  00F806  EC1C  F079         	call	_ADCC_GetConversionResult	;wreg free
   560  00F80A  C001  F00D         	movff	?_ADCC_GetConversionResult,main@ADC_Value
   561  00F80E  C002  F00E         	movff	?_ADCC_GetConversionResult+1,main@ADC_Value+1
   562  00F812                     
   563                           ;main.c: 232:    Ds_Separar_Digito(&My_Paquete_Salida, ADC_Value);
   564  00F812  0E10               	movlw	low main@My_Paquete_Salida
   565  00F814  6E08               	movwf	Ds_Separar_Digito@dsp^0,c
   566  00F816  0E00               	movlw	high main@My_Paquete_Salida
   567  00F818  6E09               	movwf	(Ds_Separar_Digito@dsp+1)^0,c
   568  00F81A  C00D  F00A         	movff	main@ADC_Value,Ds_Separar_Digito@datto
   569  00F81E  C00E  F00B         	movff	main@ADC_Value+1,Ds_Separar_Digito@datto+1
   570  00F822  EC0F  F07B         	call	_Ds_Separar_Digito	;wreg free
   571  00F826                     
   572                           ;main.c: 233:    enviar = 1;
   573  00F826  0E01               	movlw	1
   574  00F828  6E0F               	movwf	main@enviar^0,c
   575  00F82A                     l2132:
   576                           
   577                           ;main.c: 236:   if(enviar && EUSART1_is_tx_ready()){
   578  00F82A  500F               	movf	main@enviar^0,w,c
   579  00F82C  B4D8               	btfsc	status,2,c
   580  00F82E  EF1B  F07C         	goto	u1061
   581  00F832  EF1D  F07C         	goto	u1060
   582  00F836                     u1061:
   583  00F836  EF9A  F07B         	goto	l2106
   584  00F83A                     u1060:
   585  00F83A  EC9B  F079         	call	_EUSART1_is_tx_ready	;wreg free
   586  00F83E  0900               	iorlw	0
   587  00F840  B4D8               	btfsc	status,2,c
   588  00F842  EF25  F07C         	goto	u1071
   589  00F846  EF27  F07C         	goto	u1070
   590  00F84A                     u1071:
   591  00F84A  EF9A  F07B         	goto	l2106
   592  00F84E                     u1070:
   593  00F84E                     
   594                           ;main.c: 237:    enviar = 0;
   595  00F84E  0E00               	movlw	0
   596  00F850  6E0F               	movwf	main@enviar^0,c
   597  00F852                     
   598                           ;main.c: 239:    EUSART1_Write(My_Paquete_Salida.Pack[0] + '0');
   599  00F852  5010               	movf	main@My_Paquete_Salida^0,w,c
   600  00F854  0F30               	addlw	48
   601  00F856  EC46  F079         	call	_EUSART1_Write
   602  00F85A                     
   603                           ;main.c: 240:    EUSART1_Write(My_Paquete_Salida.Pack[1] + '0');
   604  00F85A  5011               	movf	(main@My_Paquete_Salida+1)^0,w,c
   605  00F85C  0F30               	addlw	48
   606  00F85E  EC46  F079         	call	_EUSART1_Write
   607  00F862                     
   608                           ;main.c: 241:    EUSART1_Write(My_Paquete_Salida.Pack[2] + '0');
   609  00F862  5012               	movf	(main@My_Paquete_Salida+2)^0,w,c
   610  00F864  0F30               	addlw	48
   611  00F866  EC46  F079         	call	_EUSART1_Write
   612  00F86A                     
   613                           ;main.c: 242:    EUSART1_Write(My_Paquete_Salida.Pack[3] + '0');
   614  00F86A  5013               	movf	(main@My_Paquete_Salida+3)^0,w,c
   615  00F86C  0F30               	addlw	48
   616  00F86E  EC46  F079         	call	_EUSART1_Write
   617  00F872                     
   618                           ;main.c: 245:    EUSART1_Write(0x0D);
   619  00F872  0E0D               	movlw	13
   620  00F874  EC46  F079         	call	_EUSART1_Write
   621  00F878  EF9A  F07B         	goto	l2106
   622  00F87C  EF00  F000         	goto	start
   623  00F880                     __end_of_main:
   624                           	callstack 0
   625                           
   626 ;; *************** function _TMR6_HasOverflowOccured *****************
   627 ;; Defined at:
   628 ;;		line 157 in file "mcc_generated_files/tmr6.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;		None
   631 ;; Auto vars:     Size  Location     Type
   632 ;;  status          1    0[COMRAM] _Bool 
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      _Bool 
   635 ;; Registers used:
   636 ;;		wreg, status,2
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   643 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   645 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   646 ;;Total ram usage:        1 bytes
   647 ;; Hardware stack levels used:    1
   648 ;; This function calls:
   649 ;;		Nothing
   650 ;; This function is called by:
   651 ;;		_main
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           	psect	text1
   656  00F38A                     __ptext1:
   657                           	callstack 0
   658  00F38A                     _TMR6_HasOverflowOccured:
   659                           	callstack 30
   660  00F38A                     
   661                           ;mcc_generated_files/tmr6.c: 160:     _Bool status = PIR4bits.TMR6IF;
   662  00F38A  010E               	movlb	14	; () banked
   663  00F38C  BBCE               	btfsc	206,5,b	;volatile
   664  00F38E  EFCB  F079         	goto	u91
   665  00F392  EFCE  F079         	goto	u90
   666  00F396                     u91:
   667  00F396  0E01               	movlw	1
   668  00F398  EFCF  F079         	goto	u96
   669  00F39C                     u90:
   670  00F39C  0E00               	movlw	0
   671  00F39E                     u96:
   672  00F39E  6E01               	movwf	TMR6_HasOverflowOccured@status^0,c
   673                           
   674                           ;mcc_generated_files/tmr6.c: 161:     if(status)
   675  00F3A0  5001               	movf	TMR6_HasOverflowOccured@status^0,w,c
   676  00F3A2  B4D8               	btfsc	status,2,c
   677  00F3A4  EFD6  F079         	goto	u101
   678  00F3A8  EFD8  F079         	goto	u100
   679  00F3AC                     u101:
   680  00F3AC  EFD9  F079         	goto	l1374
   681  00F3B0                     u100:
   682  00F3B0                     
   683                           ; BSR set to: 14
   684                           ;mcc_generated_files/tmr6.c: 162:     {;mcc_generated_files/tmr6.c: 164:         PIR4bit
      +                          s.TMR6IF = 0;
   685  00F3B0  9BCE               	bcf	206,5,b	;volatile
   686  00F3B2                     l1374:
   687                           
   688                           ; BSR set to: 14
   689                           ;mcc_generated_files/tmr6.c: 166:     return status;
   690  00F3B2  5001               	movf	TMR6_HasOverflowOccured@status^0,w,c
   691  00F3B4                     
   692                           ; BSR set to: 14
   693  00F3B4  0012               	return		;funcret
   694  00F3B6                     __end_of_TMR6_HasOverflowOccured:
   695                           	callstack 0
   696                           
   697 ;; *************** function _SYSTEM_Initialize *****************
   698 ;; Defined at:
   699 ;;		line 50 in file "mcc_generated_files/mcc.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;		None
   702 ;; Auto vars:     Size  Location     Type
   703 ;;		None
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      void 
   706 ;; Registers used:
   707 ;;		wreg, status,2, status,0, cstack
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   717 ;;Total ram usage:        0 bytes
   718 ;; Hardware stack levels used:    1
   719 ;; Hardware stack levels required when called:    2
   720 ;; This function calls:
   721 ;;		_ADCC_Initialize
   722 ;;		_EUSART1_Initialize
   723 ;;		_OSCILLATOR_Initialize
   724 ;;		_PIN_MANAGER_Initialize
   725 ;;		_PMD_Initialize
   726 ;;		_TMR6_Initialize
   727 ;; This function is called by:
   728 ;;		_main
   729 ;; This function uses a non-reentrant model
   730 ;;
   731                           
   732                           	psect	text2
   733  00F2BC                     __ptext2:
   734                           	callstack 0
   735  00F2BC                     _SYSTEM_Initialize:
   736                           	callstack 28
   737  00F2BC                     
   738                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
   739  00F2BC  EC6B  F079         	call	_PMD_Initialize	;wreg free
   740                           
   741                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   742  00F2C0  ECCE  F07A         	call	_PIN_MANAGER_Initialize	;wreg free
   743                           
   744                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   745  00F2C4  EC52  F079         	call	_OSCILLATOR_Initialize	;wreg free
   746                           
   747                           ;mcc_generated_files/mcc.c: 55:     ADCC_Initialize();
   748  00F2C8  EC3A  F07A         	call	_ADCC_Initialize	;wreg free
   749                           
   750                           ;mcc_generated_files/mcc.c: 56:     TMR6_Initialize();
   751  00F2CC  EC79  F079         	call	_TMR6_Initialize	;wreg free
   752  00F2D0                     
   753                           ;mcc_generated_files/mcc.c: 57:     EUSART1_Initialize();
   754  00F2D0  ECFA  F079         	call	_EUSART1_Initialize	;wreg free
   755  00F2D4  0012               	return		;funcret
   756  00F2D6                     __end_of_SYSTEM_Initialize:
   757                           	callstack 0
   758                           
   759 ;; *************** function _TMR6_Initialize *****************
   760 ;; Defined at:
   761 ;;		line 62 in file "mcc_generated_files/tmr6.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;		None
   764 ;; Auto vars:     Size  Location     Type
   765 ;;		None
   766 ;; Return value:  Size  Location     Type
   767 ;;                  1    wreg      void 
   768 ;; Registers used:
   769 ;;		wreg, status,2
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   779 ;;Total ram usage:        0 bytes
   780 ;; Hardware stack levels used:    1
   781 ;; This function calls:
   782 ;;		Nothing
   783 ;; This function is called by:
   784 ;;		_SYSTEM_Initialize
   785 ;; This function uses a non-reentrant model
   786 ;;
   787                           
   788                           	psect	text3
   789  00F2F2                     __ptext3:
   790                           	callstack 0
   791  00F2F2                     _TMR6_Initialize:
   792                           	callstack 29
   793  00F2F2                     
   794                           ;mcc_generated_files/tmr6.c: 67:     T6CLKCON = 0x03;
   795  00F2F2  0E03               	movlw	3
   796  00F2F4  6EB3               	movwf	179,c	;volatile
   797                           
   798                           ;mcc_generated_files/tmr6.c: 70:     T6HLT = 0x20;
   799  00F2F6  0E20               	movlw	32
   800  00F2F8  6EB2               	movwf	178,c	;volatile
   801                           
   802                           ;mcc_generated_files/tmr6.c: 73:     T6RST = 0x00;
   803  00F2FA  0E00               	movlw	0
   804  00F2FC  6EB4               	movwf	180,c	;volatile
   805                           
   806                           ;mcc_generated_files/tmr6.c: 76:     T6PR = 0x04;
   807  00F2FE  0E04               	movlw	4
   808  00F300  6EB0               	movwf	176,c	;volatile
   809                           
   810                           ;mcc_generated_files/tmr6.c: 79:     T6TMR = 0x00;
   811  00F302  0E00               	movlw	0
   812  00F304  6EAF               	movwf	175,c	;volatile
   813  00F306                     
   814                           ;mcc_generated_files/tmr6.c: 82:     PIR4bits.TMR6IF = 0;
   815  00F306  010E               	movlb	14	; () banked
   816  00F308  9BCE               	bcf	206,5,b	;volatile
   817                           
   818                           ;mcc_generated_files/tmr6.c: 85:     T6CON = 0xFC;
   819  00F30A  0EFC               	movlw	252
   820  00F30C  6EB1               	movwf	177,c	;volatile
   821  00F30E                     
   822                           ; BSR set to: 14
   823  00F30E  0012               	return		;funcret
   824  00F310                     __end_of_TMR6_Initialize:
   825                           	callstack 0
   826                           
   827 ;; *************** function _PMD_Initialize *****************
   828 ;; Defined at:
   829 ;;		line 74 in file "mcc_generated_files/mcc.c"
   830 ;; Parameters:    Size  Location     Type
   831 ;;		None
   832 ;; Auto vars:     Size  Location     Type
   833 ;;		None
   834 ;; Return value:  Size  Location     Type
   835 ;;                  1    wreg      void 
   836 ;; Registers used:
   837 ;;		wreg, status,2
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   847 ;;Total ram usage:        0 bytes
   848 ;; Hardware stack levels used:    1
   849 ;; This function calls:
   850 ;;		Nothing
   851 ;; This function is called by:
   852 ;;		_SYSTEM_Initialize
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           	psect	text4
   857  00F2D6                     __ptext4:
   858                           	callstack 0
   859  00F2D6                     _PMD_Initialize:
   860                           	callstack 29
   861  00F2D6                     
   862                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
   863  00F2D6  0E00               	movlw	0
   864  00F2D8  010E               	movlb	14	; () banked
   865  00F2DA  6FE1               	movwf	225,b	;volatile
   866                           
   867                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
   868  00F2DC  0E00               	movlw	0
   869  00F2DE  6FE2               	movwf	226,b	;volatile
   870                           
   871                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
   872  00F2E0  0E00               	movlw	0
   873  00F2E2  6FE3               	movwf	227,b	;volatile
   874                           
   875                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
   876  00F2E4  0E00               	movlw	0
   877  00F2E6  6FE4               	movwf	228,b	;volatile
   878                           
   879                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
   880  00F2E8  0E00               	movlw	0
   881  00F2EA  6FE5               	movwf	229,b	;volatile
   882                           
   883                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
   884  00F2EC  0E00               	movlw	0
   885  00F2EE  6FE6               	movwf	230,b	;volatile
   886  00F2F0                     
   887                           ; BSR set to: 14
   888  00F2F0  0012               	return		;funcret
   889  00F2F2                     __end_of_PMD_Initialize:
   890                           	callstack 0
   891                           
   892 ;; *************** function _PIN_MANAGER_Initialize *****************
   893 ;; Defined at:
   894 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;		None
   897 ;; Auto vars:     Size  Location     Type
   898 ;;		None
   899 ;; Return value:  Size  Location     Type
   900 ;;                  1    wreg      void 
   901 ;; Registers used:
   902 ;;		wreg, status,2
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   912 ;;Total ram usage:        0 bytes
   913 ;; Hardware stack levels used:    1
   914 ;; This function calls:
   915 ;;		Nothing
   916 ;; This function is called by:
   917 ;;		_SYSTEM_Initialize
   918 ;; This function uses a non-reentrant model
   919 ;;
   920                           
   921                           	psect	text5
   922  00F59C                     __ptext5:
   923                           	callstack 0
   924  00F59C                     _PIN_MANAGER_Initialize:
   925                           	callstack 29
   926  00F59C                     
   927                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
   928  00F59C  0E00               	movlw	0
   929  00F59E  6E87               	movwf	135,c	;volatile
   930                           
   931                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
   932  00F5A0  0E00               	movlw	0
   933  00F5A2  6E86               	movwf	134,c	;volatile
   934                           
   935                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
   936  00F5A4  0E00               	movlw	0
   937  00F5A6  6E83               	movwf	131,c	;volatile
   938                           
   939                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
   940  00F5A8  0E00               	movlw	0
   941  00F5AA  6E84               	movwf	132,c	;volatile
   942                           
   943                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
   944  00F5AC  0E00               	movlw	0
   945  00F5AE  6E85               	movwf	133,c	;volatile
   946                           
   947                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
   948  00F5B0  0E07               	movlw	7
   949  00F5B2  6E8C               	movwf	140,c	;volatile
   950  00F5B4                     
   951                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
   952  00F5B4  6888               	setf	136,c	;volatile
   953                           
   954                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
   955  00F5B6  0EF7               	movlw	247
   956  00F5B8  6E89               	movwf	137,c	;volatile
   957                           
   958                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFD;
   959  00F5BA  0EFD               	movlw	253
   960  00F5BC  6E8A               	movwf	138,c	;volatile
   961                           
   962                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xDC;
   963  00F5BE  0EDC               	movlw	220
   964  00F5C0  6E8B               	movwf	139,c	;volatile
   965  00F5C2                     
   966                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
   967  00F5C2  010F               	movlb	15	; () banked
   968  00F5C4  6926               	setf	38,b	;volatile
   969                           
   970                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFE;
   971  00F5C6  0EFE               	movlw	254
   972  00F5C8  6F21               	movwf	33,b	;volatile
   973  00F5CA                     
   974                           ; BSR set to: 15
   975                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xFF;
   976  00F5CA  6919               	setf	25,b	;volatile
   977                           
   978                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
   979  00F5CC  0E07               	movlw	7
   980  00F5CE  6F2E               	movwf	46,b	;volatile
   981  00F5D0                     
   982                           ; BSR set to: 15
   983                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
   984  00F5D0  6911               	setf	17,b	;volatile
   985                           
   986                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
   987  00F5D2  0E00               	movlw	0
   988  00F5D4  6F25               	movwf	37,b	;volatile
   989                           
   990                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
   991  00F5D6  0E00               	movlw	0
   992  00F5D8  6F2D               	movwf	45,b	;volatile
   993                           
   994                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
   995  00F5DA  0E00               	movlw	0
   996  00F5DC  6F18               	movwf	24,b	;volatile
   997                           
   998                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
   999  00F5DE  0E00               	movlw	0
  1000  00F5E0  6F10               	movwf	16,b	;volatile
  1001                           
  1002                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  1003  00F5E2  0E00               	movlw	0
  1004  00F5E4  6F20               	movwf	32,b	;volatile
  1005                           
  1006                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  1007  00F5E6  0E00               	movlw	0
  1008  00F5E8  6F2C               	movwf	44,b	;volatile
  1009                           
  1010                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  1011  00F5EA  0E00               	movlw	0
  1012  00F5EC  6F0F               	movwf	15,b	;volatile
  1013                           
  1014                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  1015  00F5EE  0E00               	movlw	0
  1016  00F5F0  6F17               	movwf	23,b	;volatile
  1017                           
  1018                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  1019  00F5F2  0E00               	movlw	0
  1020  00F5F4  6F1F               	movwf	31,b	;volatile
  1021                           
  1022                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  1023  00F5F6  0E00               	movlw	0
  1024  00F5F8  6F24               	movwf	36,b	;volatile
  1025  00F5FA                     
  1026                           ; BSR set to: 15
  1027                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  1028  00F5FA  690E               	setf	14,b	;volatile
  1029  00F5FC                     
  1030                           ; BSR set to: 15
  1031                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  1032  00F5FC  6916               	setf	22,b	;volatile
  1033  00F5FE                     
  1034                           ; BSR set to: 15
  1035                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  1036  00F5FE  691E               	setf	30,b	;volatile
  1037  00F600                     
  1038                           ; BSR set to: 15
  1039                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  1040  00F600  6923               	setf	35,b	;volatile
  1041                           
  1042                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  1043  00F602  0E07               	movlw	7
  1044  00F604  6F2B               	movwf	43,b	;volatile
  1045  00F606                     
  1046                           ; BSR set to: 15
  1047                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  1048  00F606  690D               	setf	13,b	;volatile
  1049  00F608                     
  1050                           ; BSR set to: 15
  1051                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  1052  00F608  6915               	setf	21,b	;volatile
  1053  00F60A                     
  1054                           ; BSR set to: 15
  1055                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  1056  00F60A  691D               	setf	29,b	;volatile
  1057  00F60C                     
  1058                           ; BSR set to: 15
  1059                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  1060  00F60C  6922               	setf	34,b	;volatile
  1061                           
  1062                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  1063  00F60E  0E0F               	movlw	15
  1064  00F610  6F2A               	movwf	42,b	;volatile
  1065                           
  1066                           ;mcc_generated_files/pin_manager.c: 127:     RX1PPS = 0x10;
  1067  00F612  0E10               	movlw	16
  1068  00F614  010E               	movlb	14	; () banked
  1069  00F616  6FB5               	movwf	181,b	;volatile
  1070                           
  1071                           ;mcc_generated_files/pin_manager.c: 128:     RC1PPS = 0x09;
  1072  00F618  0E09               	movlw	9
  1073  00F61A  6FF8               	movwf	248,b	;volatile
  1074  00F61C                     
  1075                           ; BSR set to: 14
  1076  00F61C  0012               	return		;funcret
  1077  00F61E                     __end_of_PIN_MANAGER_Initialize:
  1078                           	callstack 0
  1079                           
  1080 ;; *************** function _OSCILLATOR_Initialize *****************
  1081 ;; Defined at:
  1082 ;;		line 60 in file "mcc_generated_files/mcc.c"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;		None
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;		None
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  1    wreg      void 
  1089 ;; Registers used:
  1090 ;;		wreg, status,2
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1100 ;;Total ram usage:        0 bytes
  1101 ;; Hardware stack levels used:    1
  1102 ;; This function calls:
  1103 ;;		Nothing
  1104 ;; This function is called by:
  1105 ;;		_SYSTEM_Initialize
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           	psect	text6
  1110  00F2A4                     __ptext6:
  1111                           	callstack 0
  1112  00F2A4                     _OSCILLATOR_Initialize:
  1113                           	callstack 29
  1114  00F2A4                     
  1115                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x60;
  1116  00F2A4  0E60               	movlw	96
  1117  00F2A6  010E               	movlb	14	; () banked
  1118  00F2A8  6FD8               	movwf	216,b	;volatile
  1119                           
  1120                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  1121  00F2AA  0E00               	movlw	0
  1122  00F2AC  6FDA               	movwf	218,b	;volatile
  1123                           
  1124                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  1125  00F2AE  0E00               	movlw	0
  1126  00F2B0  6FDC               	movwf	220,b	;volatile
  1127                           
  1128                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x03;
  1129  00F2B2  0E03               	movlw	3
  1130  00F2B4  6FDE               	movwf	222,b	;volatile
  1131                           
  1132                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  1133  00F2B6  0E00               	movlw	0
  1134  00F2B8  6FDD               	movwf	221,b	;volatile
  1135  00F2BA                     
  1136                           ; BSR set to: 14
  1137  00F2BA  0012               	return		;funcret
  1138  00F2BC                     __end_of_OSCILLATOR_Initialize:
  1139                           	callstack 0
  1140                           
  1141 ;; *************** function _EUSART1_Initialize *****************
  1142 ;; Defined at:
  1143 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;		None
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;		None
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  1    wreg      void 
  1150 ;; Registers used:
  1151 ;;		wreg, status,2, status,0, cstack
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1161 ;;Total ram usage:        0 bytes
  1162 ;; Hardware stack levels used:    1
  1163 ;; Hardware stack levels required when called:    1
  1164 ;; This function calls:
  1165 ;;		_EUSART1_SetErrorHandler
  1166 ;;		_EUSART1_SetFramingErrorHandler
  1167 ;;		_EUSART1_SetOverrunErrorHandler
  1168 ;; This function is called by:
  1169 ;;		_SYSTEM_Initialize
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           	psect	text7
  1174  00F3F4                     __ptext7:
  1175                           	callstack 0
  1176  00F3F4                     _EUSART1_Initialize:
  1177                           	callstack 28
  1178  00F3F4                     
  1179                           ;mcc_generated_files/eusart1.c: 71:     BAUD1CON = 0x08;
  1180  00F3F4  0E08               	movlw	8
  1181  00F3F6  6E9F               	movwf	159,c	;volatile
  1182                           
  1183                           ;mcc_generated_files/eusart1.c: 74:     RC1STA = 0x90;
  1184  00F3F8  0E90               	movlw	144
  1185  00F3FA  6E9D               	movwf	157,c	;volatile
  1186                           
  1187                           ;mcc_generated_files/eusart1.c: 77:     TX1STA = 0x24;
  1188  00F3FC  0E24               	movlw	36
  1189  00F3FE  6E9E               	movwf	158,c	;volatile
  1190                           
  1191                           ;mcc_generated_files/eusart1.c: 80:     SP1BRGL = 0x22;
  1192  00F400  0E22               	movlw	34
  1193  00F402  6E9B               	movwf	155,c	;volatile
  1194                           
  1195                           ;mcc_generated_files/eusart1.c: 83:     SP1BRGH = 0x00;
  1196  00F404  0E00               	movlw	0
  1197  00F406  6E9C               	movwf	156,c	;volatile
  1198  00F408                     
  1199                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  1200  00F408  0E00               	movlw	0
  1201  00F40A  6E01               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  1202  00F40C  0E00               	movlw	0
  1203  00F40E  6E02               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  1204  00F410  EC12  F079         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  1205  00F414                     
  1206                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  1207  00F414  0E00               	movlw	0
  1208  00F416  6E01               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  1209  00F418  0E00               	movlw	0
  1210  00F41A  6E02               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  1211  00F41C  EC17  F079         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  1212  00F420                     
  1213                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  1214  00F420  0E00               	movlw	0
  1215  00F422  6E01               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  1216  00F424  0E00               	movlw	0
  1217  00F426  6E02               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  1218  00F428  EC0D  F079         	call	_EUSART1_SetErrorHandler	;wreg free
  1219  00F42C                     
  1220                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  1221  00F42C  0E00               	movlw	0
  1222  00F42E  6E27               	movwf	_eusart1RxLastError^0,c	;volatile
  1223  00F430  0012               	return		;funcret
  1224  00F432                     __end_of_EUSART1_Initialize:
  1225                           	callstack 0
  1226                           
  1227 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  1228 ;; Defined at:
  1229 ;;		line 161 in file "mcc_generated_files/eusart1.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1232 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;		None
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  1    wreg      void 
  1237 ;; Registers used:
  1238 ;;		wreg, status,2, status,0
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1244 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1247 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1248 ;;Total ram usage:        2 bytes
  1249 ;; Hardware stack levels used:    1
  1250 ;; This function calls:
  1251 ;;		Nothing
  1252 ;; This function is called by:
  1253 ;;		_EUSART1_Initialize
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257                           	psect	text8
  1258  00F22E                     __ptext8:
  1259                           	callstack 0
  1260  00F22E                     _EUSART1_SetOverrunErrorHandler:
  1261                           	callstack 28
  1262  00F22E                     
  1263                           ;mcc_generated_files/eusart1.c: 162:     EUSART1_OverrunErrorHandler = interruptHandler;
  1264  00F22E  C001  F02A         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  1265  00F232  C002  F02B         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  1266  00F236  0012               	return		;funcret
  1267  00F238                     __end_of_EUSART1_SetOverrunErrorHandler:
  1268                           	callstack 0
  1269                           
  1270 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  1271 ;; Defined at:
  1272 ;;		line 157 in file "mcc_generated_files/eusart1.c"
  1273 ;; Parameters:    Size  Location     Type
  1274 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1275 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  1276 ;; Auto vars:     Size  Location     Type
  1277 ;;		None
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  1    wreg      void 
  1280 ;; Registers used:
  1281 ;;		wreg, status,2, status,0
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1287 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1290 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1291 ;;Total ram usage:        2 bytes
  1292 ;; Hardware stack levels used:    1
  1293 ;; This function calls:
  1294 ;;		Nothing
  1295 ;; This function is called by:
  1296 ;;		_EUSART1_Initialize
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           	psect	text9
  1301  00F224                     __ptext9:
  1302                           	callstack 0
  1303  00F224                     _EUSART1_SetFramingErrorHandler:
  1304                           	callstack 28
  1305  00F224                     
  1306                           ;mcc_generated_files/eusart1.c: 158:     EUSART1_FramingErrorHandler = interruptHandler;
  1307  00F224  C001  F02C         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  1308  00F228  C002  F02D         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  1309  00F22C  0012               	return		;funcret
  1310  00F22E                     __end_of_EUSART1_SetFramingErrorHandler:
  1311                           	callstack 0
  1312                           
  1313 ;; *************** function _EUSART1_SetErrorHandler *****************
  1314 ;; Defined at:
  1315 ;;		line 165 in file "mcc_generated_files/eusart1.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1318 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;		None
  1321 ;; Return value:  Size  Location     Type
  1322 ;;                  1    wreg      void 
  1323 ;; Registers used:
  1324 ;;		wreg, status,2, status,0
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1330 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1333 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1334 ;;Total ram usage:        2 bytes
  1335 ;; Hardware stack levels used:    1
  1336 ;; This function calls:
  1337 ;;		Nothing
  1338 ;; This function is called by:
  1339 ;;		_EUSART1_Initialize
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343                           	psect	text10
  1344  00F21A                     __ptext10:
  1345                           	callstack 0
  1346  00F21A                     _EUSART1_SetErrorHandler:
  1347                           	callstack 28
  1348  00F21A                     
  1349                           ;mcc_generated_files/eusart1.c: 166:     EUSART1_ErrorHandler = interruptHandler;
  1350  00F21A  C001  F028         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  1351  00F21E  C002  F029         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  1352  00F222  0012               	return		;funcret
  1353  00F224                     __end_of_EUSART1_SetErrorHandler:
  1354                           	callstack 0
  1355                           
  1356 ;; *************** function _ADCC_Initialize *****************
  1357 ;; Defined at:
  1358 ;;		line 62 in file "mcc_generated_files/adcc.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;		None
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;		None
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      void 
  1365 ;; Registers used:
  1366 ;;		wreg, status,2
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1376 ;;Total ram usage:        0 bytes
  1377 ;; Hardware stack levels used:    1
  1378 ;; This function calls:
  1379 ;;		Nothing
  1380 ;; This function is called by:
  1381 ;;		_SYSTEM_Initialize
  1382 ;;		_main
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           	psect	text11
  1387  00F474                     __ptext11:
  1388                           	callstack 0
  1389  00F474                     _ADCC_Initialize:
  1390                           	callstack 29
  1391  00F474                     
  1392                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  1393  00F474  0E00               	movlw	0
  1394  00F476  6E6A               	movwf	106,c	;volatile
  1395                           
  1396                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  1397  00F478  0E00               	movlw	0
  1398  00F47A  6E6B               	movwf	107,c	;volatile
  1399                           
  1400                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  1401  00F47C  0E00               	movlw	0
  1402  00F47E  6E6C               	movwf	108,c	;volatile
  1403                           
  1404                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  1405  00F480  0E00               	movlw	0
  1406  00F482  6E6D               	movwf	109,c	;volatile
  1407                           
  1408                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  1409  00F484  0E00               	movlw	0
  1410  00F486  6E68               	movwf	104,c	;volatile
  1411                           
  1412                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  1413  00F488  0E00               	movlw	0
  1414  00F48A  6E69               	movwf	105,c	;volatile
  1415                           
  1416                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
  1417  00F48C  0E00               	movlw	0
  1418  00F48E  6E66               	movwf	102,c	;volatile
  1419                           
  1420                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x08;
  1421  00F490  0E08               	movlw	8
  1422  00F492  010F               	movlb	15	; () banked
  1423  00F494  6F5F               	movwf	95,b	;volatile
  1424                           
  1425                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
  1426  00F496  0E00               	movlw	0
  1427  00F498  6F5D               	movwf	93,b	;volatile
  1428                           
  1429                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
  1430  00F49A  0E00               	movlw	0
  1431  00F49C  6F5E               	movwf	94,b	;volatile
  1432                           
  1433                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
  1434  00F49E  0E00               	movlw	0
  1435  00F4A0  6F59               	movwf	89,b	;volatile
  1436                           
  1437                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x00;
  1438  00F4A2  0E00               	movlw	0
  1439  00F4A4  6F5A               	movwf	90,b	;volatile
  1440                           
  1441                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
  1442  00F4A6  0E00               	movlw	0
  1443  00F4A8  6F5B               	movwf	91,b	;volatile
  1444                           
  1445                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
  1446  00F4AA  0E00               	movlw	0
  1447  00F4AC  6E65               	movwf	101,c	;volatile
  1448                           
  1449                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x00;
  1450  00F4AE  0E00               	movlw	0
  1451  00F4B0  6F58               	movwf	88,b	;volatile
  1452                           
  1453                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
  1454  00F4B2  0E00               	movlw	0
  1455  00F4B4  6F56               	movwf	86,b	;volatile
  1456                           
  1457                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x07;
  1458  00F4B6  0E07               	movlw	7
  1459  00F4B8  6F57               	movwf	87,b	;volatile
  1460                           
  1461                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x84;
  1462  00F4BA  0E84               	movlw	132
  1463  00F4BC  6E60               	movwf	96,c	;volatile
  1464                           
  1465                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x01;
  1466  00F4BE  0E01               	movlw	1
  1467  00F4C0  6F5C               	movwf	92,b	;volatile
  1468  00F4C2                     
  1469                           ; BSR set to: 15
  1470  00F4C2  0012               	return		;funcret
  1471  00F4C4                     __end_of_ADCC_Initialize:
  1472                           	callstack 0
  1473                           
  1474 ;; *************** function _Procese_UART *****************
  1475 ;; Defined at:
  1476 ;;		line 41 in file "main.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;  mqnt            2    0[COMRAM] PTR struct Maquinita
  1479 ;;		 -> main@My_Maquinita(5), 
  1480 ;; Auto vars:     Size  Location     Type
  1481 ;;		None
  1482 ;; Return value:  Size  Location     Type
  1483 ;;                  1    wreg      void 
  1484 ;; Registers used:
  1485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1486 ;; Tracked objects:
  1487 ;;		On entry : 0/0
  1488 ;;		On exit  : 0/0
  1489 ;;		Unchanged: 0/0
  1490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1491 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1493 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1494 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1495 ;;Total ram usage:        6 bytes
  1496 ;; Hardware stack levels used:    1
  1497 ;; Hardware stack levels required when called:    1
  1498 ;; This function calls:
  1499 ;;		_EUSART1_Read
  1500 ;; This function is called by:
  1501 ;;		_main
  1502 ;; This function uses a non-reentrant model
  1503 ;;
  1504                           
  1505                           	psect	text12
  1506  00F880                     __ptext12:
  1507                           	callstack 0
  1508  00F880                     _Procese_UART:
  1509                           	callstack 29
  1510  00F880                     
  1511                           ;main.c: 43:  switch (mqnt->estados) {
  1512  00F880  EFC1  F07D         	goto	l1958
  1513  00F884                     l1906:
  1514                           
  1515                           ;main.c: 45:    V_Recibido[mqnt-> posicion] = EUSART1_Read();
  1516  00F884  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1517  00F888  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1518  00F88C  CFDE F003          	movff	postinc2,??_Procese_UART
  1519  00F890  CFDD F004          	movff	postdec2,??_Procese_UART+1
  1520  00F894  0E19               	movlw	low _V_Recibido
  1521  00F896  2403               	addwf	??_Procese_UART^0,w,c
  1522  00F898  6ED9               	movwf	fsr2l,c
  1523  00F89A  0E00               	movlw	high _V_Recibido
  1524  00F89C  2004               	addwfc	(??_Procese_UART+1)^0,w,c
  1525  00F89E  6EDA               	movwf	fsr2h,c
  1526  00F8A0  ECB0  F079         	call	_EUSART1_Read	;wreg free
  1527  00F8A4  6EDF               	movwf	indf2,c
  1528  00F8A6                     
  1529                           ;main.c: 46:    if (V_Recibido[mqnt-> posicion]== mqnt->inicio){
  1530  00F8A6  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1531  00F8AA  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1532  00F8AE  CFDE F003          	movff	postinc2,??_Procese_UART
  1533  00F8B2  CFDD F004          	movff	postdec2,??_Procese_UART+1
  1534  00F8B6  0E19               	movlw	low _V_Recibido
  1535  00F8B8  2403               	addwf	??_Procese_UART^0,w,c
  1536  00F8BA  6ED9               	movwf	fsr2l,c
  1537  00F8BC  0E00               	movlw	high _V_Recibido
  1538  00F8BE  2004               	addwfc	(??_Procese_UART+1)^0,w,c
  1539  00F8C0  6EDA               	movwf	fsr2h,c
  1540  00F8C2  EE10 F002          	lfsr	1,2
  1541  00F8C6  5001               	movf	Procese_UART@mqnt^0,w,c
  1542  00F8C8  26E1               	addwf	fsr1l,f,c
  1543  00F8CA  5002               	movf	(Procese_UART@mqnt+1)^0,w,c
  1544  00F8CC  22E2               	addwfc	fsr1h,f,c
  1545  00F8CE  50DE               	movf	postinc2,w,c
  1546  00F8D0  18E6               	xorwf	postinc1,w,c
  1547  00F8D2  A4D8               	btfss	status,2,c
  1548  00F8D4  EF6E  F07C         	goto	u671
  1549  00F8D8  EF70  F07C         	goto	u670
  1550  00F8DC                     u671:
  1551  00F8DC  EF8C  F07C         	goto	l1912
  1552  00F8E0                     u670:
  1553  00F8E0                     
  1554                           ;main.c: 48:                 mqnt->estados = 1;
  1555  00F8E0  EE20 F004          	lfsr	2,4
  1556  00F8E4  5001               	movf	Procese_UART@mqnt^0,w,c
  1557  00F8E6  26D9               	addwf	fsr2l,f,c
  1558  00F8E8  5002               	movf	(Procese_UART@mqnt+1)^0,w,c
  1559  00F8EA  22DA               	addwfc	fsr2h,f,c
  1560  00F8EC  0E01               	movlw	1
  1561  00F8EE  6EDF               	movwf	indf2,c
  1562                           
  1563                           ;main.c: 49:     mqnt-> posicion = mqnt-> posicion + 1;
  1564  00F8F0  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1565  00F8F4  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1566  00F8F8  CFDE F003          	movff	postinc2,??_Procese_UART
  1567  00F8FC  CFDD F004          	movff	postdec2,??_Procese_UART+1
  1568  00F900  0E01               	movlw	1
  1569  00F902  2603               	addwf	??_Procese_UART^0,f,c
  1570  00F904  0E00               	movlw	0
  1571  00F906  2204               	addwfc	(??_Procese_UART+1)^0,f,c
  1572  00F908  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1573  00F90C  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1574  00F910  C003  FFDE         	movff	??_Procese_UART,postinc2
  1575  00F914  C004  FFDD         	movff	??_Procese_UART+1,postdec2
  1576  00F918                     l1912:
  1577                           
  1578                           ;main.c: 51:    Transmision_Error=0;
  1579  00F918  0E00               	movlw	0
  1580  00F91A  6E26               	movwf	_Transmision_Error^0,c	;volatile
  1581                           
  1582                           ;main.c: 52:   break;
  1583  00F91C  EFF0  F07D         	goto	l493
  1584  00F920                     l1914:
  1585                           
  1586                           ;main.c: 56:    V_Recibido[mqnt-> posicion] = EUSART1_Read();
  1587  00F920  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1588  00F924  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1589  00F928  CFDE F003          	movff	postinc2,??_Procese_UART
  1590  00F92C  CFDD F004          	movff	postdec2,??_Procese_UART+1
  1591  00F930  0E19               	movlw	low _V_Recibido
  1592  00F932  2403               	addwf	??_Procese_UART^0,w,c
  1593  00F934  6ED9               	movwf	fsr2l,c
  1594  00F936  0E00               	movlw	high _V_Recibido
  1595  00F938  2004               	addwfc	(??_Procese_UART+1)^0,w,c
  1596  00F93A  6EDA               	movwf	fsr2h,c
  1597  00F93C  ECB0  F079         	call	_EUSART1_Read	;wreg free
  1598  00F940  6EDF               	movwf	indf2,c
  1599  00F942                     
  1600                           ;main.c: 57:    mqnt->estados = 2;
  1601  00F942  EE20 F004          	lfsr	2,4
  1602  00F946  5001               	movf	Procese_UART@mqnt^0,w,c
  1603  00F948  26D9               	addwf	fsr2l,f,c
  1604  00F94A  5002               	movf	(Procese_UART@mqnt+1)^0,w,c
  1605  00F94C  22DA               	addwfc	fsr2h,f,c
  1606  00F94E  0E02               	movlw	2
  1607  00F950  6EDF               	movwf	indf2,c
  1608  00F952                     
  1609                           ;main.c: 58:    mqnt-> posicion = mqnt-> posicion + 1;
  1610  00F952  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1611  00F956  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1612  00F95A  CFDE F003          	movff	postinc2,??_Procese_UART
  1613  00F95E  CFDD F004          	movff	postdec2,??_Procese_UART+1
  1614  00F962  0E01               	movlw	1
  1615  00F964  2603               	addwf	??_Procese_UART^0,f,c
  1616  00F966  0E00               	movlw	0
  1617  00F968  2204               	addwfc	(??_Procese_UART+1)^0,f,c
  1618  00F96A  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1619  00F96E  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1620  00F972  C003  FFDE         	movff	??_Procese_UART,postinc2
  1621  00F976  C004  FFDD         	movff	??_Procese_UART+1,postdec2
  1622                           
  1623                           ;main.c: 59:   break;
  1624  00F97A  EFF0  F07D         	goto	l493
  1625  00F97E                     l1920:
  1626                           
  1627                           ;main.c: 62:    V_Recibido[mqnt-> posicion] = EUSART1_Read();
  1628  00F97E  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1629  00F982  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1630  00F986  CFDE F003          	movff	postinc2,??_Procese_UART
  1631  00F98A  CFDD F004          	movff	postdec2,??_Procese_UART+1
  1632  00F98E  0E19               	movlw	low _V_Recibido
  1633  00F990  2403               	addwf	??_Procese_UART^0,w,c
  1634  00F992  6ED9               	movwf	fsr2l,c
  1635  00F994  0E00               	movlw	high _V_Recibido
  1636  00F996  2004               	addwfc	(??_Procese_UART+1)^0,w,c
  1637  00F998  6EDA               	movwf	fsr2h,c
  1638  00F99A  ECB0  F079         	call	_EUSART1_Read	;wreg free
  1639  00F99E  6EDF               	movwf	indf2,c
  1640  00F9A0                     
  1641                           ;main.c: 63:    mqnt->estados = 3;
  1642  00F9A0  EE20 F004          	lfsr	2,4
  1643  00F9A4  5001               	movf	Procese_UART@mqnt^0,w,c
  1644  00F9A6  26D9               	addwf	fsr2l,f,c
  1645  00F9A8  5002               	movf	(Procese_UART@mqnt+1)^0,w,c
  1646  00F9AA  22DA               	addwfc	fsr2h,f,c
  1647  00F9AC  0E03               	movlw	3
  1648  00F9AE  6EDF               	movwf	indf2,c
  1649  00F9B0                     
  1650                           ;main.c: 64:    mqnt-> posicion = mqnt-> posicion + 1;
  1651  00F9B0  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1652  00F9B4  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1653  00F9B8  CFDE F003          	movff	postinc2,??_Procese_UART
  1654  00F9BC  CFDD F004          	movff	postdec2,??_Procese_UART+1
  1655  00F9C0  0E01               	movlw	1
  1656  00F9C2  2603               	addwf	??_Procese_UART^0,f,c
  1657  00F9C4  0E00               	movlw	0
  1658  00F9C6  2204               	addwfc	(??_Procese_UART+1)^0,f,c
  1659  00F9C8  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1660  00F9CC  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1661  00F9D0  C003  FFDE         	movff	??_Procese_UART,postinc2
  1662  00F9D4  C004  FFDD         	movff	??_Procese_UART+1,postdec2
  1663                           
  1664                           ;main.c: 65:   break;
  1665  00F9D8  EFF0  F07D         	goto	l493
  1666  00F9DC                     l1926:
  1667                           
  1668                           ;main.c: 68:    V_Recibido[mqnt-> posicion] = EUSART1_Read();
  1669  00F9DC  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1670  00F9E0  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1671  00F9E4  CFDE F003          	movff	postinc2,??_Procese_UART
  1672  00F9E8  CFDD F004          	movff	postdec2,??_Procese_UART+1
  1673  00F9EC  0E19               	movlw	low _V_Recibido
  1674  00F9EE  2403               	addwf	??_Procese_UART^0,w,c
  1675  00F9F0  6ED9               	movwf	fsr2l,c
  1676  00F9F2  0E00               	movlw	high _V_Recibido
  1677  00F9F4  2004               	addwfc	(??_Procese_UART+1)^0,w,c
  1678  00F9F6  6EDA               	movwf	fsr2h,c
  1679  00F9F8  ECB0  F079         	call	_EUSART1_Read	;wreg free
  1680  00F9FC  6EDF               	movwf	indf2,c
  1681  00F9FE                     
  1682                           ;main.c: 69:    mqnt->estados = 4;
  1683  00F9FE  EE20 F004          	lfsr	2,4
  1684  00FA02  5001               	movf	Procese_UART@mqnt^0,w,c
  1685  00FA04  26D9               	addwf	fsr2l,f,c
  1686  00FA06  5002               	movf	(Procese_UART@mqnt+1)^0,w,c
  1687  00FA08  22DA               	addwfc	fsr2h,f,c
  1688  00FA0A  0E04               	movlw	4
  1689  00FA0C  6EDF               	movwf	indf2,c
  1690  00FA0E                     
  1691                           ;main.c: 70:    mqnt-> posicion = mqnt-> posicion + 1;
  1692  00FA0E  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1693  00FA12  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1694  00FA16  CFDE F003          	movff	postinc2,??_Procese_UART
  1695  00FA1A  CFDD F004          	movff	postdec2,??_Procese_UART+1
  1696  00FA1E  0E01               	movlw	1
  1697  00FA20  2603               	addwf	??_Procese_UART^0,f,c
  1698  00FA22  0E00               	movlw	0
  1699  00FA24  2204               	addwfc	(??_Procese_UART+1)^0,f,c
  1700  00FA26  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1701  00FA2A  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1702  00FA2E  C003  FFDE         	movff	??_Procese_UART,postinc2
  1703  00FA32  C004  FFDD         	movff	??_Procese_UART+1,postdec2
  1704                           
  1705                           ;main.c: 71:   break;
  1706  00FA36  EFF0  F07D         	goto	l493
  1707  00FA3A                     l1932:
  1708                           
  1709                           ;main.c: 74:    V_Recibido[mqnt-> posicion] = EUSART1_Read();
  1710  00FA3A  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1711  00FA3E  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1712  00FA42  CFDE F003          	movff	postinc2,??_Procese_UART
  1713  00FA46  CFDD F004          	movff	postdec2,??_Procese_UART+1
  1714  00FA4A  0E19               	movlw	low _V_Recibido
  1715  00FA4C  2403               	addwf	??_Procese_UART^0,w,c
  1716  00FA4E  6ED9               	movwf	fsr2l,c
  1717  00FA50  0E00               	movlw	high _V_Recibido
  1718  00FA52  2004               	addwfc	(??_Procese_UART+1)^0,w,c
  1719  00FA54  6EDA               	movwf	fsr2h,c
  1720  00FA56  ECB0  F079         	call	_EUSART1_Read	;wreg free
  1721  00FA5A  6EDF               	movwf	indf2,c
  1722  00FA5C                     
  1723                           ;main.c: 75:    mqnt->estados = 5;
  1724  00FA5C  EE20 F004          	lfsr	2,4
  1725  00FA60  5001               	movf	Procese_UART@mqnt^0,w,c
  1726  00FA62  26D9               	addwf	fsr2l,f,c
  1727  00FA64  5002               	movf	(Procese_UART@mqnt+1)^0,w,c
  1728  00FA66  22DA               	addwfc	fsr2h,f,c
  1729  00FA68  0E05               	movlw	5
  1730  00FA6A  6EDF               	movwf	indf2,c
  1731  00FA6C                     
  1732                           ;main.c: 76:    mqnt-> posicion = mqnt-> posicion + 1;
  1733  00FA6C  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1734  00FA70  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1735  00FA74  CFDE F003          	movff	postinc2,??_Procese_UART
  1736  00FA78  CFDD F004          	movff	postdec2,??_Procese_UART+1
  1737  00FA7C  0E01               	movlw	1
  1738  00FA7E  2603               	addwf	??_Procese_UART^0,f,c
  1739  00FA80  0E00               	movlw	0
  1740  00FA82  2204               	addwfc	(??_Procese_UART+1)^0,f,c
  1741  00FA84  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1742  00FA88  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1743  00FA8C  C003  FFDE         	movff	??_Procese_UART,postinc2
  1744  00FA90  C004  FFDD         	movff	??_Procese_UART+1,postdec2
  1745                           
  1746                           ;main.c: 77:   break;
  1747  00FA94  EFF0  F07D         	goto	l493
  1748  00FA98                     l1938:
  1749                           
  1750                           ;main.c: 80:    V_Recibido[mqnt-> posicion] = EUSART1_Read();
  1751  00FA98  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1752  00FA9C  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1753  00FAA0  CFDE F003          	movff	postinc2,??_Procese_UART
  1754  00FAA4  CFDD F004          	movff	postdec2,??_Procese_UART+1
  1755  00FAA8  0E19               	movlw	low _V_Recibido
  1756  00FAAA  2403               	addwf	??_Procese_UART^0,w,c
  1757  00FAAC  6ED9               	movwf	fsr2l,c
  1758  00FAAE  0E00               	movlw	high _V_Recibido
  1759  00FAB0  2004               	addwfc	(??_Procese_UART+1)^0,w,c
  1760  00FAB2  6EDA               	movwf	fsr2h,c
  1761  00FAB4  ECB0  F079         	call	_EUSART1_Read	;wreg free
  1762  00FAB8  6EDF               	movwf	indf2,c
  1763  00FABA                     
  1764                           ;main.c: 81:    mqnt->estados = 6;
  1765  00FABA  EE20 F004          	lfsr	2,4
  1766  00FABE  5001               	movf	Procese_UART@mqnt^0,w,c
  1767  00FAC0  26D9               	addwf	fsr2l,f,c
  1768  00FAC2  5002               	movf	(Procese_UART@mqnt+1)^0,w,c
  1769  00FAC4  22DA               	addwfc	fsr2h,f,c
  1770  00FAC6  0E06               	movlw	6
  1771  00FAC8  6EDF               	movwf	indf2,c
  1772  00FACA                     
  1773                           ;main.c: 82:    mqnt-> posicion = mqnt-> posicion + 1;
  1774  00FACA  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1775  00FACE  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1776  00FAD2  CFDE F003          	movff	postinc2,??_Procese_UART
  1777  00FAD6  CFDD F004          	movff	postdec2,??_Procese_UART+1
  1778  00FADA  0E01               	movlw	1
  1779  00FADC  2603               	addwf	??_Procese_UART^0,f,c
  1780  00FADE  0E00               	movlw	0
  1781  00FAE0  2204               	addwfc	(??_Procese_UART+1)^0,f,c
  1782  00FAE2  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1783  00FAE6  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1784  00FAEA  C003  FFDE         	movff	??_Procese_UART,postinc2
  1785  00FAEE  C004  FFDD         	movff	??_Procese_UART+1,postdec2
  1786                           
  1787                           ;main.c: 83:   break;
  1788  00FAF2  EFF0  F07D         	goto	l493
  1789  00FAF6                     l1944:
  1790                           
  1791                           ;main.c: 86:    V_Recibido[mqnt-> posicion] = EUSART1_Read();
  1792  00FAF6  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1793  00FAFA  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1794  00FAFE  CFDE F003          	movff	postinc2,??_Procese_UART
  1795  00FB02  CFDD F004          	movff	postdec2,??_Procese_UART+1
  1796  00FB06  0E19               	movlw	low _V_Recibido
  1797  00FB08  2403               	addwf	??_Procese_UART^0,w,c
  1798  00FB0A  6ED9               	movwf	fsr2l,c
  1799  00FB0C  0E00               	movlw	high _V_Recibido
  1800  00FB0E  2004               	addwfc	(??_Procese_UART+1)^0,w,c
  1801  00FB10  6EDA               	movwf	fsr2h,c
  1802  00FB12  ECB0  F079         	call	_EUSART1_Read	;wreg free
  1803  00FB16  6EDF               	movwf	indf2,c
  1804  00FB18                     
  1805                           ;main.c: 88:    if (V_Recibido[mqnt-> posicion] == mqnt->finall){
  1806  00FB18  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1807  00FB1C  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1808  00FB20  CFDE F003          	movff	postinc2,??_Procese_UART
  1809  00FB24  CFDD F004          	movff	postdec2,??_Procese_UART+1
  1810  00FB28  0E19               	movlw	low _V_Recibido
  1811  00FB2A  2403               	addwf	??_Procese_UART^0,w,c
  1812  00FB2C  6ED9               	movwf	fsr2l,c
  1813  00FB2E  0E00               	movlw	high _V_Recibido
  1814  00FB30  2004               	addwfc	(??_Procese_UART+1)^0,w,c
  1815  00FB32  6EDA               	movwf	fsr2h,c
  1816  00FB34  EE10 F003          	lfsr	1,3
  1817  00FB38  5001               	movf	Procese_UART@mqnt^0,w,c
  1818  00FB3A  26E1               	addwf	fsr1l,f,c
  1819  00FB3C  5002               	movf	(Procese_UART@mqnt+1)^0,w,c
  1820  00FB3E  22E2               	addwfc	fsr1h,f,c
  1821  00FB40  50DE               	movf	postinc2,w,c
  1822  00FB42  18E6               	xorwf	postinc1,w,c
  1823  00FB44  A4D8               	btfss	status,2,c
  1824  00FB46  EFA7  F07D         	goto	u681
  1825  00FB4A  EFA9  F07D         	goto	u680
  1826  00FB4E                     u681:
  1827  00FB4E  EFAD  F07D         	goto	l1950
  1828  00FB52                     u680:
  1829  00FB52                     
  1830                           ;main.c: 89:     Transmision_Completada = 1;
  1831  00FB52  0E01               	movlw	1
  1832  00FB54  6E25               	movwf	_Transmision_Completada^0,c	;volatile
  1833                           
  1834                           ;main.c: 90:    }else {
  1835  00FB56  EFAF  F07D         	goto	l1952
  1836  00FB5A                     l1950:
  1837                           
  1838                           ;main.c: 91:     Transmision_Error = 1;
  1839  00FB5A  0E01               	movlw	1
  1840  00FB5C  6E26               	movwf	_Transmision_Error^0,c	;volatile
  1841  00FB5E                     l1952:
  1842                           
  1843                           ;main.c: 93:    mqnt->estados = 0;
  1844  00FB5E  EE20 F004          	lfsr	2,4
  1845  00FB62  5001               	movf	Procese_UART@mqnt^0,w,c
  1846  00FB64  26D9               	addwf	fsr2l,f,c
  1847  00FB66  5002               	movf	(Procese_UART@mqnt+1)^0,w,c
  1848  00FB68  22DA               	addwfc	fsr2h,f,c
  1849  00FB6A  0E00               	movlw	0
  1850  00FB6C  6EDF               	movwf	indf2,c
  1851  00FB6E                     
  1852                           ;main.c: 94:    mqnt-> posicion = 0;
  1853  00FB6E  C001  FFD9         	movff	Procese_UART@mqnt,fsr2l
  1854  00FB72  C002  FFDA         	movff	Procese_UART@mqnt+1,fsr2h
  1855  00FB76  0E00               	movlw	0
  1856  00FB78  6EDE               	movwf	postinc2,c
  1857  00FB7A  0E00               	movlw	0
  1858  00FB7C  6EDD               	movwf	postdec2,c
  1859                           
  1860                           ;main.c: 95:   break;
  1861  00FB7E  EFF0  F07D         	goto	l493
  1862  00FB82                     l1958:
  1863  00FB82  EE20 F004          	lfsr	2,4
  1864  00FB86  5001               	movf	Procese_UART@mqnt^0,w,c
  1865  00FB88  26D9               	addwf	fsr2l,f,c
  1866  00FB8A  5002               	movf	(Procese_UART@mqnt+1)^0,w,c
  1867  00FB8C  22DA               	addwfc	fsr2h,f,c
  1868  00FB8E  50DF               	movf	indf2,w,c
  1869  00FB90  6E03               	movwf	??_Procese_UART^0,c
  1870  00FB92  6A04               	clrf	(??_Procese_UART+1)^0,c
  1871                           
  1872                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1873                           ; Switch size 1, requested type "simple"
  1874                           ; Number of cases is 1, Range of values is 0 to 0
  1875                           ; switch strategies available:
  1876                           ; Name         Instructions Cycles
  1877                           ; simple_byte            4     3 (average)
  1878                           ;	Chosen strategy is simple_byte
  1879  00FB94  5004               	movf	(??_Procese_UART+1)^0,w,c
  1880  00FB96  0A00               	xorlw	0	; case 0
  1881  00FB98  B4D8               	btfsc	status,2,c
  1882  00FB9A  EFD1  F07D         	goto	l2168
  1883  00FB9E  EFF0  F07D         	goto	l493
  1884  00FBA2                     l2168:
  1885                           
  1886                           ; Switch size 1, requested type "simple"
  1887                           ; Number of cases is 7, Range of values is 0 to 6
  1888                           ; switch strategies available:
  1889                           ; Name         Instructions Cycles
  1890                           ; simple_byte           22    12 (average)
  1891                           ;	Chosen strategy is simple_byte
  1892  00FBA2  5003               	movf	??_Procese_UART^0,w,c
  1893  00FBA4  0A00               	xorlw	0	; case 0
  1894  00FBA6  B4D8               	btfsc	status,2,c
  1895  00FBA8  EF42  F07C         	goto	l1906
  1896  00FBAC  0A01               	xorlw	1	; case 1
  1897  00FBAE  B4D8               	btfsc	status,2,c
  1898  00FBB0  EF90  F07C         	goto	l1914
  1899  00FBB4  0A03               	xorlw	3	; case 2
  1900  00FBB6  B4D8               	btfsc	status,2,c
  1901  00FBB8  EFBF  F07C         	goto	l1920
  1902  00FBBC  0A01               	xorlw	1	; case 3
  1903  00FBBE  B4D8               	btfsc	status,2,c
  1904  00FBC0  EFEE  F07C         	goto	l1926
  1905  00FBC4  0A07               	xorlw	7	; case 4
  1906  00FBC6  B4D8               	btfsc	status,2,c
  1907  00FBC8  EF1D  F07D         	goto	l1932
  1908  00FBCC  0A01               	xorlw	1	; case 5
  1909  00FBCE  B4D8               	btfsc	status,2,c
  1910  00FBD0  EF4C  F07D         	goto	l1938
  1911  00FBD4  0A03               	xorlw	3	; case 6
  1912  00FBD6  B4D8               	btfsc	status,2,c
  1913  00FBD8  EF7B  F07D         	goto	l1944
  1914  00FBDC  EFF0  F07D         	goto	l493
  1915  00FBE0                     l493:
  1916  00FBE0  0012               	return		;funcret
  1917  00FBE2                     __end_of_Procese_UART:
  1918                           	callstack 0
  1919                           
  1920 ;; *************** function _EUSART1_Read *****************
  1921 ;; Defined at:
  1922 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;		None
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;		None
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  1    wreg      unsigned char 
  1929 ;; Registers used:
  1930 ;;		wreg, status,2
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1940 ;;Total ram usage:        0 bytes
  1941 ;; Hardware stack levels used:    1
  1942 ;; This function calls:
  1943 ;;		Nothing
  1944 ;; This function is called by:
  1945 ;;		_Procese_UART
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           	psect	text13
  1950  00F360                     __ptext13:
  1951                           	callstack 0
  1952  00F360                     _EUSART1_Read:
  1953                           	callstack 29
  1954  00F360                     l207:
  1955                           
  1956                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR3bits.RC1IF)
  1957  00F360  010E               	movlb	14	; () banked
  1958  00F362  ABCD               	btfss	205,5,b	;volatile
  1959  00F364  EFB6  F079         	goto	u11
  1960  00F368  EFB8  F079         	goto	u10
  1961  00F36C                     u11:
  1962  00F36C  EFB0  F079         	goto	l207
  1963  00F370                     u10:
  1964  00F370                     
  1965                           ; BSR set to: 14
  1966                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  1967  00F370  0E00               	movlw	0
  1968  00F372  6E27               	movwf	_eusart1RxLastError^0,c	;volatile
  1969  00F374                     
  1970                           ; BSR set to: 14
  1971                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RC1STAbits.OERR)
  1972  00F374  A29D               	btfss	157,1,c	;volatile
  1973  00F376  EFBF  F079         	goto	u21
  1974  00F37A  EFC1  F079         	goto	u20
  1975  00F37E                     u21:
  1976  00F37E  EFC3  F079         	goto	l1302
  1977  00F382                     u20:
  1978  00F382                     
  1979                           ; BSR set to: 14
  1980                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          C1STAbits.CREN = 0;
  1981  00F382  989D               	bcf	157,4,c	;volatile
  1982                           
  1983                           ;mcc_generated_files/eusart1.c: 126:         RC1STAbits.CREN = 1;
  1984  00F384  889D               	bsf	157,4,c	;volatile
  1985  00F386                     l1302:
  1986                           
  1987                           ; BSR set to: 14
  1988                           ;mcc_generated_files/eusart1.c: 129:     return RC1REG;
  1989  00F386  5099               	movf	153,w,c	;volatile
  1990  00F388                     
  1991                           ; BSR set to: 14
  1992  00F388  0012               	return		;funcret
  1993  00F38A                     __end_of_EUSART1_Read:
  1994                           	callstack 0
  1995                           
  1996 ;; *************** function _Procese_Dato_Rebido *****************
  1997 ;; Defined at:
  1998 ;;		line 99 in file "main.c"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;		None
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;		None
  2003 ;; Return value:  Size  Location     Type
  2004 ;;                  1    wreg      void 
  2005 ;; Registers used:
  2006 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2007 ;; Tracked objects:
  2008 ;;		On entry : 0/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2014 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2015 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2016 ;;Total ram usage:        3 bytes
  2017 ;; Hardware stack levels used:    1
  2018 ;; Hardware stack levels required when called:    1
  2019 ;; This function calls:
  2020 ;;		___lwdiv
  2021 ;;		___wmul
  2022 ;; This function is called by:
  2023 ;;		_main
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           	psect	text14
  2028  00FBE2                     __ptext14:
  2029                           	callstack 0
  2030  00FBE2                     _Procese_Dato_Rebido:
  2031                           	callstack 29
  2032  00FBE2                     
  2033                           ;main.c: 101:  recibido=((V_Recibido[5]-'0')*1 + (V_Recibido[4]-'0')*10 + (V_Recibido[3]
      +                          -'0')*100 + (V_Recibido[2]-'0')*1000+(V_Recibido[1]-'0')*10000);
  2034  00FBE2  C01A  F001         	movff	_V_Recibido+1,___wmul@multiplier	;volatile
  2035  00FBE6  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2036  00FBE8  0E27               	movlw	39
  2037  00FBEA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2038  00FBEC  0E10               	movlw	16
  2039  00FBEE  6E03               	movwf	___wmul@multiplicand^0,c
  2040  00FBF0  EC88  F079         	call	___wmul	;wreg free
  2041  00FBF4  501C               	movf	(_V_Recibido+3)^0,w,c	;volatile
  2042  00FBF6  0D64               	mullw	100
  2043  00FBF8  CFF3 F008          	movff	prodl,??_Procese_Dato_Rebido
  2044  00FBFC  CFF4 F009          	movff	prodh,??_Procese_Dato_Rebido+1
  2045  00FC00  501D               	movf	(_V_Recibido+4)^0,w,c	;volatile
  2046  00FC02  0D0A               	mullw	10
  2047  00FC04  50F3               	movf	243,w,c
  2048  00FC06  2608               	addwf	??_Procese_Dato_Rebido^0,f,c
  2049  00FC08  50F4               	movf	244,w,c
  2050  00FC0A  2209               	addwfc	(??_Procese_Dato_Rebido+1)^0,f,c
  2051  00FC0C  5001               	movf	?___wmul^0,w,c
  2052  00FC0E  2608               	addwf	??_Procese_Dato_Rebido^0,f,c
  2053  00FC10  5002               	movf	(?___wmul+1)^0,w,c
  2054  00FC12  2209               	addwfc	(??_Procese_Dato_Rebido+1)^0,f,c
  2055  00FC14  C01B  F001         	movff	_V_Recibido+2,___wmul@multiplier	;volatile
  2056  00FC18  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2057  00FC1A  0E03               	movlw	3
  2058  00FC1C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2059  00FC1E  0EE8               	movlw	232
  2060  00FC20  6E03               	movwf	___wmul@multiplicand^0,c
  2061  00FC22  EC88  F079         	call	___wmul	;wreg free
  2062  00FC26  5001               	movf	?___wmul^0,w,c
  2063  00FC28  2608               	addwf	??_Procese_Dato_Rebido^0,f,c
  2064  00FC2A  5002               	movf	(?___wmul+1)^0,w,c
  2065  00FC2C  2209               	addwfc	(??_Procese_Dato_Rebido+1)^0,f,c
  2066  00FC2E  501E               	movf	(_V_Recibido+5)^0,w,c	;volatile
  2067  00FC30  2608               	addwf	??_Procese_Dato_Rebido^0,f,c
  2068  00FC32  0E00               	movlw	0
  2069  00FC34  2209               	addwfc	(??_Procese_Dato_Rebido+1)^0,f,c
  2070  00FC36  0EB0               	movlw	176
  2071  00FC38  2408               	addwf	??_Procese_Dato_Rebido^0,w,c
  2072  00FC3A  6E22               	movwf	_recibido^0,c	;volatile
  2073  00FC3C  0EDC               	movlw	220
  2074  00FC3E  2009               	addwfc	(??_Procese_Dato_Rebido+1)^0,w,c
  2075  00FC40  6E23               	movwf	(_recibido+1)^0,c	;volatile
  2076  00FC42                     
  2077                           ;main.c: 102:     if(recibido >= 500 && recibido <= 4100){
  2078  00FC42  0EF4               	movlw	244
  2079  00FC44  5C22               	subwf	_recibido^0,w,c	;volatile
  2080  00FC46  0E01               	movlw	1
  2081  00FC48  5823               	subwfb	(_recibido+1)^0,w,c	;volatile
  2082  00FC4A  A0D8               	btfss	status,0,c
  2083  00FC4C  EF2A  F07E         	goto	u691
  2084  00FC50  EF2C  F07E         	goto	u690
  2085  00FC54                     u691:
  2086  00FC54  EF47  F07E         	goto	l1974
  2087  00FC58                     u690:
  2088  00FC58  0E05               	movlw	5
  2089  00FC5A  5C22               	subwf	_recibido^0,w,c	;volatile
  2090  00FC5C  0E10               	movlw	16
  2091  00FC5E  5823               	subwfb	(_recibido+1)^0,w,c	;volatile
  2092  00FC60  B0D8               	btfsc	status,0,c
  2093  00FC62  EF35  F07E         	goto	u701
  2094  00FC66  EF37  F07E         	goto	u700
  2095  00FC6A                     u701:
  2096  00FC6A  EF47  F07E         	goto	l1974
  2097  00FC6E                     u700:
  2098  00FC6E                     
  2099                           ;main.c: 103:   T6CON = 0xF0;
  2100  00FC6E  0EF0               	movlw	240
  2101  00FC70  6EB1               	movwf	177,c	;volatile
  2102  00FC72                     
  2103                           ;main.c: 104:   conteo = recibido / 16;
  2104  00FC72  C022  F008         	movff	_recibido,??_Procese_Dato_Rebido	;volatile
  2105  00FC76  C023  F009         	movff	_recibido+1,??_Procese_Dato_Rebido+1	;volatile
  2106  00FC7A  0E04               	movlw	4
  2107  00FC7C  6E0A               	movwf	(??_Procese_Dato_Rebido+2)^0,c
  2108  00FC7E                     u715:
  2109  00FC7E  90D8               	bcf	status,0,c
  2110  00FC80  3209               	rrcf	(??_Procese_Dato_Rebido+1)^0,f,c
  2111  00FC82  3208               	rrcf	??_Procese_Dato_Rebido^0,f,c
  2112  00FC84  2E0A               	decfsz	(??_Procese_Dato_Rebido+2)^0,f,c
  2113  00FC86  EF3F  F07E         	goto	u715
  2114  00FC8A  5008               	movf	??_Procese_Dato_Rebido^0,w,c
  2115  00FC8C  6E24               	movwf	_conteo^0,c	;volatile
  2116  00FC8E                     l1974:
  2117                           
  2118                           ;main.c: 107:  if(recibido > 4100 && recibido <= 8200){
  2119  00FC8E  0E05               	movlw	5
  2120  00FC90  5C22               	subwf	_recibido^0,w,c	;volatile
  2121  00FC92  0E10               	movlw	16
  2122  00FC94  5823               	subwfb	(_recibido+1)^0,w,c	;volatile
  2123  00FC96  A0D8               	btfss	status,0,c
  2124  00FC98  EF50  F07E         	goto	u721
  2125  00FC9C  EF52  F07E         	goto	u720
  2126  00FCA0                     u721:
  2127  00FCA0  EF6D  F07E         	goto	l1982
  2128  00FCA4                     u720:
  2129  00FCA4  0E09               	movlw	9
  2130  00FCA6  5C22               	subwf	_recibido^0,w,c	;volatile
  2131  00FCA8  0E20               	movlw	32
  2132  00FCAA  5823               	subwfb	(_recibido+1)^0,w,c	;volatile
  2133  00FCAC  B0D8               	btfsc	status,0,c
  2134  00FCAE  EF5B  F07E         	goto	u731
  2135  00FCB2  EF5D  F07E         	goto	u730
  2136  00FCB6                     u731:
  2137  00FCB6  EF6D  F07E         	goto	l1982
  2138  00FCBA                     u730:
  2139  00FCBA                     
  2140                           ;main.c: 108:   T6CON = 0xF1;
  2141  00FCBA  0EF1               	movlw	241
  2142  00FCBC  6EB1               	movwf	177,c	;volatile
  2143  00FCBE                     
  2144                           ;main.c: 109:   conteo = recibido / 32;
  2145  00FCBE  C022  F008         	movff	_recibido,??_Procese_Dato_Rebido	;volatile
  2146  00FCC2  C023  F009         	movff	_recibido+1,??_Procese_Dato_Rebido+1	;volatile
  2147  00FCC6  0E05               	movlw	5
  2148  00FCC8  6E0A               	movwf	(??_Procese_Dato_Rebido+2)^0,c
  2149  00FCCA                     u745:
  2150  00FCCA  90D8               	bcf	status,0,c
  2151  00FCCC  3209               	rrcf	(??_Procese_Dato_Rebido+1)^0,f,c
  2152  00FCCE  3208               	rrcf	??_Procese_Dato_Rebido^0,f,c
  2153  00FCD0  2E0A               	decfsz	(??_Procese_Dato_Rebido+2)^0,f,c
  2154  00FCD2  EF65  F07E         	goto	u745
  2155  00FCD6  5008               	movf	??_Procese_Dato_Rebido^0,w,c
  2156  00FCD8  6E24               	movwf	_conteo^0,c	;volatile
  2157  00FCDA                     l1982:
  2158                           
  2159                           ;main.c: 112:  if(recibido > 8200 && recibido <= 12200){
  2160  00FCDA  0E09               	movlw	9
  2161  00FCDC  5C22               	subwf	_recibido^0,w,c	;volatile
  2162  00FCDE  0E20               	movlw	32
  2163  00FCE0  5823               	subwfb	(_recibido+1)^0,w,c	;volatile
  2164  00FCE2  A0D8               	btfss	status,0,c
  2165  00FCE4  EF76  F07E         	goto	u751
  2166  00FCE8  EF78  F07E         	goto	u750
  2167  00FCEC                     u751:
  2168  00FCEC  EF91  F07E         	goto	l1990
  2169  00FCF0                     u750:
  2170  00FCF0  0EA9               	movlw	169
  2171  00FCF2  5C22               	subwf	_recibido^0,w,c	;volatile
  2172  00FCF4  0E2F               	movlw	47
  2173  00FCF6  5823               	subwfb	(_recibido+1)^0,w,c	;volatile
  2174  00FCF8  B0D8               	btfsc	status,0,c
  2175  00FCFA  EF81  F07E         	goto	u761
  2176  00FCFE  EF83  F07E         	goto	u760
  2177  00FD02                     u761:
  2178  00FD02  EF91  F07E         	goto	l1990
  2179  00FD06                     u760:
  2180  00FD06                     
  2181                           ;main.c: 113:   T6CON = 0xF2;
  2182  00FD06  0EF2               	movlw	242
  2183  00FD08  6EB1               	movwf	177,c	;volatile
  2184  00FD0A                     
  2185                           ;main.c: 114:   conteo = recibido / 48;
  2186  00FD0A  C022  F001         	movff	_recibido,___lwdiv@dividend	;volatile
  2187  00FD0E  C023  F002         	movff	_recibido+1,___lwdiv@dividend+1	;volatile
  2188  00FD12  0E00               	movlw	0
  2189  00FD14  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2190  00FD16  0E30               	movlw	48
  2191  00FD18  6E03               	movwf	___lwdiv@divisor^0,c
  2192  00FD1A  EC94  F07A         	call	___lwdiv	;wreg free
  2193  00FD1E  5001               	movf	?___lwdiv^0,w,c
  2194  00FD20  6E24               	movwf	_conteo^0,c	;volatile
  2195  00FD22                     l1990:
  2196                           
  2197                           ;main.c: 117:  if(recibido > 12200 && recibido <= 16200){
  2198  00FD22  0EA9               	movlw	169
  2199  00FD24  5C22               	subwf	_recibido^0,w,c	;volatile
  2200  00FD26  0E2F               	movlw	47
  2201  00FD28  5823               	subwfb	(_recibido+1)^0,w,c	;volatile
  2202  00FD2A  A0D8               	btfss	status,0,c
  2203  00FD2C  EF9A  F07E         	goto	u771
  2204  00FD30  EF9C  F07E         	goto	u770
  2205  00FD34                     u771:
  2206  00FD34  EFB7  F07E         	goto	l1998
  2207  00FD38                     u770:
  2208  00FD38  0E49               	movlw	73
  2209  00FD3A  5C22               	subwf	_recibido^0,w,c	;volatile
  2210  00FD3C  0E3F               	movlw	63
  2211  00FD3E  5823               	subwfb	(_recibido+1)^0,w,c	;volatile
  2212  00FD40  B0D8               	btfsc	status,0,c
  2213  00FD42  EFA5  F07E         	goto	u781
  2214  00FD46  EFA7  F07E         	goto	u780
  2215  00FD4A                     u781:
  2216  00FD4A  EFB7  F07E         	goto	l1998
  2217  00FD4E                     u780:
  2218  00FD4E                     
  2219                           ;main.c: 118:   T6CON = 0xF3;
  2220  00FD4E  0EF3               	movlw	243
  2221  00FD50  6EB1               	movwf	177,c	;volatile
  2222  00FD52                     
  2223                           ;main.c: 119:   conteo = recibido / 64;
  2224  00FD52  C022  F008         	movff	_recibido,??_Procese_Dato_Rebido	;volatile
  2225  00FD56  C023  F009         	movff	_recibido+1,??_Procese_Dato_Rebido+1	;volatile
  2226  00FD5A  0E06               	movlw	6
  2227  00FD5C  6E0A               	movwf	(??_Procese_Dato_Rebido+2)^0,c
  2228  00FD5E                     u795:
  2229  00FD5E  90D8               	bcf	status,0,c
  2230  00FD60  3209               	rrcf	(??_Procese_Dato_Rebido+1)^0,f,c
  2231  00FD62  3208               	rrcf	??_Procese_Dato_Rebido^0,f,c
  2232  00FD64  2E0A               	decfsz	(??_Procese_Dato_Rebido+2)^0,f,c
  2233  00FD66  EFAF  F07E         	goto	u795
  2234  00FD6A  5008               	movf	??_Procese_Dato_Rebido^0,w,c
  2235  00FD6C  6E24               	movwf	_conteo^0,c	;volatile
  2236  00FD6E                     l1998:
  2237                           
  2238                           ;main.c: 122:  if(recibido > 16200 && recibido <= 20400){
  2239  00FD6E  0E49               	movlw	73
  2240  00FD70  5C22               	subwf	_recibido^0,w,c	;volatile
  2241  00FD72  0E3F               	movlw	63
  2242  00FD74  5823               	subwfb	(_recibido+1)^0,w,c	;volatile
  2243  00FD76  A0D8               	btfss	status,0,c
  2244  00FD78  EFC0  F07E         	goto	u801
  2245  00FD7C  EFC2  F07E         	goto	u800
  2246  00FD80                     u801:
  2247  00FD80  EFDB  F07E         	goto	l2006
  2248  00FD84                     u800:
  2249  00FD84  0EB1               	movlw	177
  2250  00FD86  5C22               	subwf	_recibido^0,w,c	;volatile
  2251  00FD88  0E4F               	movlw	79
  2252  00FD8A  5823               	subwfb	(_recibido+1)^0,w,c	;volatile
  2253  00FD8C  B0D8               	btfsc	status,0,c
  2254  00FD8E  EFCB  F07E         	goto	u811
  2255  00FD92  EFCD  F07E         	goto	u810
  2256  00FD96                     u811:
  2257  00FD96  EFDB  F07E         	goto	l2006
  2258  00FD9A                     u810:
  2259  00FD9A                     
  2260                           ;main.c: 123:   T6CON = 0xF4;
  2261  00FD9A  0EF4               	movlw	244
  2262  00FD9C  6EB1               	movwf	177,c	;volatile
  2263  00FD9E                     
  2264                           ;main.c: 124:   conteo = recibido / 80;
  2265  00FD9E  C022  F001         	movff	_recibido,___lwdiv@dividend	;volatile
  2266  00FDA2  C023  F002         	movff	_recibido+1,___lwdiv@dividend+1	;volatile
  2267  00FDA6  0E00               	movlw	0
  2268  00FDA8  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2269  00FDAA  0E50               	movlw	80
  2270  00FDAC  6E03               	movwf	___lwdiv@divisor^0,c
  2271  00FDAE  EC94  F07A         	call	___lwdiv	;wreg free
  2272  00FDB2  5001               	movf	?___lwdiv^0,w,c
  2273  00FDB4  6E24               	movwf	_conteo^0,c	;volatile
  2274  00FDB6                     l2006:
  2275                           
  2276                           ;main.c: 127:  if(recibido > 20400 && recibido <= 24500){
  2277  00FDB6  0EB1               	movlw	177
  2278  00FDB8  5C22               	subwf	_recibido^0,w,c	;volatile
  2279  00FDBA  0E4F               	movlw	79
  2280  00FDBC  5823               	subwfb	(_recibido+1)^0,w,c	;volatile
  2281  00FDBE  A0D8               	btfss	status,0,c
  2282  00FDC0  EFE4  F07E         	goto	u821
  2283  00FDC4  EFE6  F07E         	goto	u820
  2284  00FDC8                     u821:
  2285  00FDC8  EFFF  F07E         	goto	l2014
  2286  00FDCC                     u820:
  2287  00FDCC  0EB5               	movlw	181
  2288  00FDCE  5C22               	subwf	_recibido^0,w,c	;volatile
  2289  00FDD0  0E5F               	movlw	95
  2290  00FDD2  5823               	subwfb	(_recibido+1)^0,w,c	;volatile
  2291  00FDD4  B0D8               	btfsc	status,0,c
  2292  00FDD6  EFEF  F07E         	goto	u831
  2293  00FDDA  EFF1  F07E         	goto	u830
  2294  00FDDE                     u831:
  2295  00FDDE  EFFF  F07E         	goto	l2014
  2296  00FDE2                     u830:
  2297  00FDE2                     
  2298                           ;main.c: 128:   T6CON = 0xF5;
  2299  00FDE2  0EF5               	movlw	245
  2300  00FDE4  6EB1               	movwf	177,c	;volatile
  2301  00FDE6                     
  2302                           ;main.c: 129:   conteo = recibido / 96;
  2303  00FDE6  C022  F001         	movff	_recibido,___lwdiv@dividend	;volatile
  2304  00FDEA  C023  F002         	movff	_recibido+1,___lwdiv@dividend+1	;volatile
  2305  00FDEE  0E00               	movlw	0
  2306  00FDF0  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2307  00FDF2  0E60               	movlw	96
  2308  00FDF4  6E03               	movwf	___lwdiv@divisor^0,c
  2309  00FDF6  EC94  F07A         	call	___lwdiv	;wreg free
  2310  00FDFA  5001               	movf	?___lwdiv^0,w,c
  2311  00FDFC  6E24               	movwf	_conteo^0,c	;volatile
  2312  00FDFE                     l2014:
  2313                           
  2314                           ;main.c: 132:  if(recibido > 24500 && recibido <= 28600){
  2315  00FDFE  0EB5               	movlw	181
  2316  00FE00  5C22               	subwf	_recibido^0,w,c	;volatile
  2317  00FE02  0E5F               	movlw	95
  2318  00FE04  5823               	subwfb	(_recibido+1)^0,w,c	;volatile
  2319  00FE06  A0D8               	btfss	status,0,c
  2320  00FE08  EF08  F07F         	goto	u841
  2321  00FE0C  EF0A  F07F         	goto	u840
  2322  00FE10                     u841:
  2323  00FE10  EF23  F07F         	goto	l2022
  2324  00FE14                     u840:
  2325  00FE14  0EB9               	movlw	185
  2326  00FE16  5C22               	subwf	_recibido^0,w,c	;volatile
  2327  00FE18  0E6F               	movlw	111
  2328  00FE1A  5823               	subwfb	(_recibido+1)^0,w,c	;volatile
  2329  00FE1C  B0D8               	btfsc	status,0,c
  2330  00FE1E  EF13  F07F         	goto	u851
  2331  00FE22  EF15  F07F         	goto	u850
  2332  00FE26                     u851:
  2333  00FE26  EF23  F07F         	goto	l2022
  2334  00FE2A                     u850:
  2335  00FE2A                     
  2336                           ;main.c: 133:   T6CON = 0xF6;
  2337  00FE2A  0EF6               	movlw	246
  2338  00FE2C  6EB1               	movwf	177,c	;volatile
  2339  00FE2E                     
  2340                           ;main.c: 134:   conteo = recibido / 112;
  2341  00FE2E  C022  F001         	movff	_recibido,___lwdiv@dividend	;volatile
  2342  00FE32  C023  F002         	movff	_recibido+1,___lwdiv@dividend+1	;volatile
  2343  00FE36  0E00               	movlw	0
  2344  00FE38  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2345  00FE3A  0E70               	movlw	112
  2346  00FE3C  6E03               	movwf	___lwdiv@divisor^0,c
  2347  00FE3E  EC94  F07A         	call	___lwdiv	;wreg free
  2348  00FE42  5001               	movf	?___lwdiv^0,w,c
  2349  00FE44  6E24               	movwf	_conteo^0,c	;volatile
  2350  00FE46                     l2022:
  2351                           
  2352                           ;main.c: 137:  if(recibido > 28600 && recibido <= 32700){
  2353  00FE46  0EB9               	movlw	185
  2354  00FE48  5C22               	subwf	_recibido^0,w,c	;volatile
  2355  00FE4A  0E6F               	movlw	111
  2356  00FE4C  5823               	subwfb	(_recibido+1)^0,w,c	;volatile
  2357  00FE4E  A0D8               	btfss	status,0,c
  2358  00FE50  EF2C  F07F         	goto	u861
  2359  00FE54  EF2E  F07F         	goto	u860
  2360  00FE58                     u861:
  2361  00FE58  EF49  F07F         	goto	l2030
  2362  00FE5C                     u860:
  2363  00FE5C  0EBD               	movlw	189
  2364  00FE5E  5C22               	subwf	_recibido^0,w,c	;volatile
  2365  00FE60  0E7F               	movlw	127
  2366  00FE62  5823               	subwfb	(_recibido+1)^0,w,c	;volatile
  2367  00FE64  B0D8               	btfsc	status,0,c
  2368  00FE66  EF37  F07F         	goto	u871
  2369  00FE6A  EF39  F07F         	goto	u870
  2370  00FE6E                     u871:
  2371  00FE6E  EF49  F07F         	goto	l2030
  2372  00FE72                     u870:
  2373  00FE72                     
  2374                           ;main.c: 138:   T6CON = 0xF7;
  2375  00FE72  0EF7               	movlw	247
  2376  00FE74  6EB1               	movwf	177,c	;volatile
  2377  00FE76                     
  2378                           ;main.c: 139:   conteo = recibido / 128;
  2379  00FE76  C022  F008         	movff	_recibido,??_Procese_Dato_Rebido	;volatile
  2380  00FE7A  C023  F009         	movff	_recibido+1,??_Procese_Dato_Rebido+1	;volatile
  2381  00FE7E  0E07               	movlw	7
  2382  00FE80  6E0A               	movwf	(??_Procese_Dato_Rebido+2)^0,c
  2383  00FE82                     u885:
  2384  00FE82  90D8               	bcf	status,0,c
  2385  00FE84  3209               	rrcf	(??_Procese_Dato_Rebido+1)^0,f,c
  2386  00FE86  3208               	rrcf	??_Procese_Dato_Rebido^0,f,c
  2387  00FE88  2E0A               	decfsz	(??_Procese_Dato_Rebido+2)^0,f,c
  2388  00FE8A  EF41  F07F         	goto	u885
  2389  00FE8E  5008               	movf	??_Procese_Dato_Rebido^0,w,c
  2390  00FE90  6E24               	movwf	_conteo^0,c	;volatile
  2391  00FE92                     l2030:
  2392                           
  2393                           ;main.c: 143:  if(recibido > 32700 && recibido <= 36800){
  2394  00FE92  0EBD               	movlw	189
  2395  00FE94  5C22               	subwf	_recibido^0,w,c	;volatile
  2396  00FE96  0E7F               	movlw	127
  2397  00FE98  5823               	subwfb	(_recibido+1)^0,w,c	;volatile
  2398  00FE9A  A0D8               	btfss	status,0,c
  2399  00FE9C  EF52  F07F         	goto	u891
  2400  00FEA0  EF54  F07F         	goto	u890
  2401  00FEA4                     u891:
  2402  00FEA4  EF6D  F07F         	goto	l2038
  2403  00FEA8                     u890:
  2404  00FEA8  0EC1               	movlw	193
  2405  00FEAA  5C22               	subwf	_recibido^0,w,c	;volatile
  2406  00FEAC  0E8F               	movlw	143
  2407  00FEAE  5823               	subwfb	(_recibido+1)^0,w,c	;volatile
  2408  00FEB0  B0D8               	btfsc	status,0,c
  2409  00FEB2  EF5D  F07F         	goto	u901
  2410  00FEB6  EF5F  F07F         	goto	u900
  2411  00FEBA                     u901:
  2412  00FEBA  EF6D  F07F         	goto	l2038
  2413  00FEBE                     u900:
  2414  00FEBE                     
  2415                           ;main.c: 144:   T6CON = 0xF8;
  2416  00FEBE  0EF8               	movlw	248
  2417  00FEC0  6EB1               	movwf	177,c	;volatile
  2418  00FEC2                     
  2419                           ;main.c: 145:   conteo = recibido / 144;
  2420  00FEC2  C022  F001         	movff	_recibido,___lwdiv@dividend	;volatile
  2421  00FEC6  C023  F002         	movff	_recibido+1,___lwdiv@dividend+1	;volatile
  2422  00FECA  0E00               	movlw	0
  2423  00FECC  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2424  00FECE  0E90               	movlw	144
  2425  00FED0  6E03               	movwf	___lwdiv@divisor^0,c
  2426  00FED2  EC94  F07A         	call	___lwdiv	;wreg free
  2427  00FED6  5001               	movf	?___lwdiv^0,w,c
  2428  00FED8  6E24               	movwf	_conteo^0,c	;volatile
  2429  00FEDA                     l2038:
  2430                           
  2431                           ;main.c: 148:  if(recibido > 36800 && recibido <= 40100){
  2432  00FEDA  0EC1               	movlw	193
  2433  00FEDC  5C22               	subwf	_recibido^0,w,c	;volatile
  2434  00FEDE  0E8F               	movlw	143
  2435  00FEE0  5823               	subwfb	(_recibido+1)^0,w,c	;volatile
  2436  00FEE2  A0D8               	btfss	status,0,c
  2437  00FEE4  EF76  F07F         	goto	u911
  2438  00FEE8  EF78  F07F         	goto	u910
  2439  00FEEC                     u911:
  2440  00FEEC  EF91  F07F         	goto	l2046
  2441  00FEF0                     u910:
  2442  00FEF0  0EA5               	movlw	165
  2443  00FEF2  5C22               	subwf	_recibido^0,w,c	;volatile
  2444  00FEF4  0E9C               	movlw	156
  2445  00FEF6  5823               	subwfb	(_recibido+1)^0,w,c	;volatile
  2446  00FEF8  B0D8               	btfsc	status,0,c
  2447  00FEFA  EF81  F07F         	goto	u921
  2448  00FEFE  EF83  F07F         	goto	u920
  2449  00FF02                     u921:
  2450  00FF02  EF91  F07F         	goto	l2046
  2451  00FF06                     u920:
  2452  00FF06                     
  2453                           ;main.c: 149:   T6CON = 0xF9;
  2454  00FF06  0EF9               	movlw	249
  2455  00FF08  6EB1               	movwf	177,c	;volatile
  2456  00FF0A                     
  2457                           ;main.c: 150:   conteo = recibido / 160;
  2458  00FF0A  C022  F001         	movff	_recibido,___lwdiv@dividend	;volatile
  2459  00FF0E  C023  F002         	movff	_recibido+1,___lwdiv@dividend+1	;volatile
  2460  00FF12  0E00               	movlw	0
  2461  00FF14  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2462  00FF16  0EA0               	movlw	160
  2463  00FF18  6E03               	movwf	___lwdiv@divisor^0,c
  2464  00FF1A  EC94  F07A         	call	___lwdiv	;wreg free
  2465  00FF1E  5001               	movf	?___lwdiv^0,w,c
  2466  00FF20  6E24               	movwf	_conteo^0,c	;volatile
  2467  00FF22                     l2046:
  2468                           
  2469                           ;main.c: 153:  if(recibido > 40100 && recibido <= 45000){
  2470  00FF22  0EA5               	movlw	165
  2471  00FF24  5C22               	subwf	_recibido^0,w,c	;volatile
  2472  00FF26  0E9C               	movlw	156
  2473  00FF28  5823               	subwfb	(_recibido+1)^0,w,c	;volatile
  2474  00FF2A  A0D8               	btfss	status,0,c
  2475  00FF2C  EF9A  F07F         	goto	u931
  2476  00FF30  EF9C  F07F         	goto	u930
  2477  00FF34                     u931:
  2478  00FF34  EFB5  F07F         	goto	l2054
  2479  00FF38                     u930:
  2480  00FF38  0EC9               	movlw	201
  2481  00FF3A  5C22               	subwf	_recibido^0,w,c	;volatile
  2482  00FF3C  0EAF               	movlw	175
  2483  00FF3E  5823               	subwfb	(_recibido+1)^0,w,c	;volatile
  2484  00FF40  B0D8               	btfsc	status,0,c
  2485  00FF42  EFA5  F07F         	goto	u941
  2486  00FF46  EFA7  F07F         	goto	u940
  2487  00FF4A                     u941:
  2488  00FF4A  EFB5  F07F         	goto	l2054
  2489  00FF4E                     u940:
  2490  00FF4E                     
  2491                           ;main.c: 154:   T6CON = 0xFA;
  2492  00FF4E  0EFA               	movlw	250
  2493  00FF50  6EB1               	movwf	177,c	;volatile
  2494  00FF52                     
  2495                           ;main.c: 155:   conteo = recibido / 176;
  2496  00FF52  C022  F001         	movff	_recibido,___lwdiv@dividend	;volatile
  2497  00FF56  C023  F002         	movff	_recibido+1,___lwdiv@dividend+1	;volatile
  2498  00FF5A  0E00               	movlw	0
  2499  00FF5C  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2500  00FF5E  0EB0               	movlw	176
  2501  00FF60  6E03               	movwf	___lwdiv@divisor^0,c
  2502  00FF62  EC94  F07A         	call	___lwdiv	;wreg free
  2503  00FF66  5001               	movf	?___lwdiv^0,w,c
  2504  00FF68  6E24               	movwf	_conteo^0,c	;volatile
  2505  00FF6A                     l2054:
  2506                           
  2507                           ;main.c: 158:  if(recibido > 45000 && recibido <= 49100){
  2508  00FF6A  0EC9               	movlw	201
  2509  00FF6C  5C22               	subwf	_recibido^0,w,c	;volatile
  2510  00FF6E  0EAF               	movlw	175
  2511  00FF70  5823               	subwfb	(_recibido+1)^0,w,c	;volatile
  2512  00FF72  A0D8               	btfss	status,0,c
  2513  00FF74  EFBE  F07F         	goto	u951
  2514  00FF78  EFC0  F07F         	goto	u950
  2515  00FF7C                     u951:
  2516  00FF7C  EFD9  F07F         	goto	l2062
  2517  00FF80                     u950:
  2518  00FF80  0ECD               	movlw	205
  2519  00FF82  5C22               	subwf	_recibido^0,w,c	;volatile
  2520  00FF84  0EBF               	movlw	191
  2521  00FF86  5823               	subwfb	(_recibido+1)^0,w,c	;volatile
  2522  00FF88  B0D8               	btfsc	status,0,c
  2523  00FF8A  EFC9  F07F         	goto	u961
  2524  00FF8E  EFCB  F07F         	goto	u960
  2525  00FF92                     u961:
  2526  00FF92  EFD9  F07F         	goto	l2062
  2527  00FF96                     u960:
  2528  00FF96                     
  2529                           ;main.c: 159:   T6CON = 0xFB;
  2530  00FF96  0EFB               	movlw	251
  2531  00FF98  6EB1               	movwf	177,c	;volatile
  2532  00FF9A                     
  2533                           ;main.c: 160:   conteo = recibido / 192;
  2534  00FF9A  C022  F001         	movff	_recibido,___lwdiv@dividend	;volatile
  2535  00FF9E  C023  F002         	movff	_recibido+1,___lwdiv@dividend+1	;volatile
  2536  00FFA2  0E00               	movlw	0
  2537  00FFA4  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2538  00FFA6  0EC0               	movlw	192
  2539  00FFA8  6E03               	movwf	___lwdiv@divisor^0,c
  2540  00FFAA  EC94  F07A         	call	___lwdiv	;wreg free
  2541  00FFAE  5001               	movf	?___lwdiv^0,w,c
  2542  00FFB0  6E24               	movwf	_conteo^0,c	;volatile
  2543  00FFB2                     l2062:
  2544                           
  2545                           ;main.c: 163:  if(recibido > 49100 && recibido <= 53200){
  2546  00FFB2  0ECD               	movlw	205
  2547  00FFB4  5C22               	subwf	_recibido^0,w,c	;volatile
  2548  00FFB6  0EBF               	movlw	191
  2549  00FFB8  5823               	subwfb	(_recibido+1)^0,w,c	;volatile
  2550  00FFBA  A0D8               	btfss	status,0,c
  2551  00FFBC  EFE2  F07F         	goto	u971
  2552  00FFC0  EFE4  F07F         	goto	u970
  2553  00FFC4                     u971:
  2554  00FFC4  EFFD  F07F         	goto	l2070
  2555  00FFC8                     u970:
  2556  00FFC8  0ED1               	movlw	209
  2557  00FFCA  5C22               	subwf	_recibido^0,w,c	;volatile
  2558  00FFCC  0ECF               	movlw	207
  2559  00FFCE  5823               	subwfb	(_recibido+1)^0,w,c	;volatile
  2560  00FFD0  B0D8               	btfsc	status,0,c
  2561  00FFD2  EFED  F07F         	goto	u981
  2562  00FFD6  EFEF  F07F         	goto	u980
  2563  00FFDA                     u981:
  2564  00FFDA  EFFD  F07F         	goto	l2070
  2565  00FFDE                     u980:
  2566  00FFDE                     
  2567                           ;main.c: 164:   T6CON = 0xFC;
  2568  00FFDE  0EFC               	movlw	252
  2569  00FFE0  6EB1               	movwf	177,c	;volatile
  2570  00FFE2                     
  2571                           ;main.c: 165:   conteo = recibido / 208;
  2572  00FFE2  C022  F001         	movff	_recibido,___lwdiv@dividend	;volatile
  2573  00FFE6  C023  F002         	movff	_recibido+1,___lwdiv@dividend+1	;volatile
  2574  00FFEA  0E00               	movlw	0
  2575  00FFEC  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2576  00FFEE  0ED0               	movlw	208
  2577  00FFF0  6E03               	movwf	___lwdiv@divisor^0,c
  2578  00FFF2  EC94  F07A         	call	___lwdiv	;wreg free
  2579  00FFF6  5001               	movf	?___lwdiv^0,w,c
  2580  00FFF8  6E24               	movwf	_conteo^0,c	;volatile
  2581  00FFFA                     l2070:
  2582                           
  2583                           ;main.c: 167:     T6PR=conteo;
  2584  00FFFA  C024  FFB0         	movff	_conteo,4016	;volatile
  2585  00FFFE  0012               	return		;funcret
  2586  010000                     __end_of_Procese_Dato_Rebido:
  2587                           	callstack 0
  2588                           
  2589 ;; *************** function ___wmul *****************
  2590 ;; Defined at:
  2591 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;  multiplier      2    0[COMRAM] unsigned int 
  2594 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;  product         2    4[COMRAM] unsigned int 
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  2    0[COMRAM] unsigned int 
  2599 ;; Registers used:
  2600 ;;		wreg, status,2, status,0, prodl, prodh
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2606 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2607 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2609 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2610 ;;Total ram usage:        6 bytes
  2611 ;; Hardware stack levels used:    1
  2612 ;; This function calls:
  2613 ;;		Nothing
  2614 ;; This function is called by:
  2615 ;;		_Procese_Dato_Rebido
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           	psect	text15
  2620  00F310                     __ptext15:
  2621                           	callstack 0
  2622  00F310                     ___wmul:
  2623                           	callstack 29
  2624  00F310  5001               	movf	___wmul@multiplier^0,w,c
  2625  00F312  0203               	mulwf	___wmul@multiplicand^0,c
  2626  00F314  CFF3 F005          	movff	prodl,___wmul@product
  2627  00F318  CFF4 F006          	movff	prodh,___wmul@product+1
  2628  00F31C  5001               	movf	___wmul@multiplier^0,w,c
  2629  00F31E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2630  00F320  50F3               	movf	243,w,c
  2631  00F322  2606               	addwf	(___wmul@product+1)^0,f,c
  2632  00F324  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2633  00F326  0203               	mulwf	___wmul@multiplicand^0,c
  2634  00F328  50F3               	movf	243,w,c
  2635  00F32A  2606               	addwf	(___wmul@product+1)^0,f,c
  2636  00F32C  C005  F001         	movff	___wmul@product,?___wmul
  2637  00F330  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2638  00F334  0012               	return		;funcret
  2639  00F336                     __end_of___wmul:
  2640                           	callstack 0
  2641                           
  2642 ;; *************** function _Inicializar_Paquete *****************
  2643 ;; Defined at:
  2644 ;;		line 34 in file "main.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;  mqnt            2    0[COMRAM] PTR struct Paquete_Salid
  2647 ;;		 -> main@My_Paquete_Salida(4), 
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;		None
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  1    wreg      void 
  2652 ;; Registers used:
  2653 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2659 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2662 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2663 ;;Total ram usage:        2 bytes
  2664 ;; Hardware stack levels used:    1
  2665 ;; This function calls:
  2666 ;;		Nothing
  2667 ;; This function is called by:
  2668 ;;		_main
  2669 ;; This function uses a non-reentrant model
  2670 ;;
  2671                           
  2672                           	psect	text16
  2673  00F3B6                     __ptext16:
  2674                           	callstack 0
  2675  00F3B6                     _Inicializar_Paquete:
  2676                           	callstack 30
  2677  00F3B6                     
  2678                           ;main.c: 35:  mqnt-> Pack[0] = 0;
  2679  00F3B6  C001  FFD9         	movff	Inicializar_Paquete@mqnt,fsr2l
  2680  00F3BA  C002  FFDA         	movff	Inicializar_Paquete@mqnt+1,fsr2h
  2681  00F3BE  0E00               	movlw	0
  2682  00F3C0  6EDF               	movwf	indf2,c
  2683  00F3C2                     
  2684                           ;main.c: 36:  mqnt-> Pack[1] = 0;
  2685  00F3C2  EE20 F001          	lfsr	2,1
  2686  00F3C6  5001               	movf	Inicializar_Paquete@mqnt^0,w,c
  2687  00F3C8  26D9               	addwf	fsr2l,f,c
  2688  00F3CA  5002               	movf	(Inicializar_Paquete@mqnt+1)^0,w,c
  2689  00F3CC  22DA               	addwfc	fsr2h,f,c
  2690  00F3CE  0E00               	movlw	0
  2691  00F3D0  6EDF               	movwf	indf2,c
  2692  00F3D2                     
  2693                           ;main.c: 37:  mqnt-> Pack[2] = 0;
  2694  00F3D2  EE20 F002          	lfsr	2,2
  2695  00F3D6  5001               	movf	Inicializar_Paquete@mqnt^0,w,c
  2696  00F3D8  26D9               	addwf	fsr2l,f,c
  2697  00F3DA  5002               	movf	(Inicializar_Paquete@mqnt+1)^0,w,c
  2698  00F3DC  22DA               	addwfc	fsr2h,f,c
  2699  00F3DE  0E00               	movlw	0
  2700  00F3E0  6EDF               	movwf	indf2,c
  2701  00F3E2                     
  2702                           ;main.c: 38:  mqnt-> Pack[3] = 0;
  2703  00F3E2  EE20 F003          	lfsr	2,3
  2704  00F3E6  5001               	movf	Inicializar_Paquete@mqnt^0,w,c
  2705  00F3E8  26D9               	addwf	fsr2l,f,c
  2706  00F3EA  5002               	movf	(Inicializar_Paquete@mqnt+1)^0,w,c
  2707  00F3EC  22DA               	addwfc	fsr2h,f,c
  2708  00F3EE  0E00               	movlw	0
  2709  00F3F0  6EDF               	movwf	indf2,c
  2710  00F3F2  0012               	return		;funcret
  2711  00F3F4                     __end_of_Inicializar_Paquete:
  2712                           	callstack 0
  2713                           
  2714 ;; *************** function _Inicializar_Maquinita *****************
  2715 ;; Defined at:
  2716 ;;		line 22 in file "main.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;  mqnt            2    0[COMRAM] PTR struct Maquinita
  2719 ;;		 -> main@My_Maquinita(5), 
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;		None
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  1    wreg      void 
  2724 ;; Registers used:
  2725 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2731 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2734 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2735 ;;Total ram usage:        2 bytes
  2736 ;; Hardware stack levels used:    1
  2737 ;; This function calls:
  2738 ;;		Nothing
  2739 ;; This function is called by:
  2740 ;;		_main
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743                           
  2744                           	psect	text17
  2745  00F432                     __ptext17:
  2746                           	callstack 0
  2747  00F432                     _Inicializar_Maquinita:
  2748                           	callstack 30
  2749  00F432                     
  2750                           ;main.c: 23:  mqnt-> posicion = 0;
  2751  00F432  C001  FFD9         	movff	Inicializar_Maquinita@mqnt,fsr2l
  2752  00F436  C002  FFDA         	movff	Inicializar_Maquinita@mqnt+1,fsr2h
  2753  00F43A  0E00               	movlw	0
  2754  00F43C  6EDE               	movwf	postinc2,c
  2755  00F43E  0E00               	movlw	0
  2756  00F440  6EDD               	movwf	postdec2,c
  2757  00F442                     
  2758                           ;main.c: 24:  mqnt-> inicio = '#';
  2759  00F442  EE20 F002          	lfsr	2,2
  2760  00F446  5001               	movf	Inicializar_Maquinita@mqnt^0,w,c
  2761  00F448  26D9               	addwf	fsr2l,f,c
  2762  00F44A  5002               	movf	(Inicializar_Maquinita@mqnt+1)^0,w,c
  2763  00F44C  22DA               	addwfc	fsr2h,f,c
  2764  00F44E  0E23               	movlw	35
  2765  00F450  6EDF               	movwf	indf2,c
  2766  00F452                     
  2767                           ;main.c: 25:  mqnt-> finall = '*';
  2768  00F452  EE20 F003          	lfsr	2,3
  2769  00F456  5001               	movf	Inicializar_Maquinita@mqnt^0,w,c
  2770  00F458  26D9               	addwf	fsr2l,f,c
  2771  00F45A  5002               	movf	(Inicializar_Maquinita@mqnt+1)^0,w,c
  2772  00F45C  22DA               	addwfc	fsr2h,f,c
  2773  00F45E  0E2A               	movlw	42
  2774  00F460  6EDF               	movwf	indf2,c
  2775  00F462                     
  2776                           ;main.c: 26:  mqnt-> estados = 0;
  2777  00F462  EE20 F004          	lfsr	2,4
  2778  00F466  5001               	movf	Inicializar_Maquinita@mqnt^0,w,c
  2779  00F468  26D9               	addwf	fsr2l,f,c
  2780  00F46A  5002               	movf	(Inicializar_Maquinita@mqnt+1)^0,w,c
  2781  00F46C  22DA               	addwfc	fsr2h,f,c
  2782  00F46E  0E00               	movlw	0
  2783  00F470  6EDF               	movwf	indf2,c
  2784  00F472  0012               	return		;funcret
  2785  00F474                     __end_of_Inicializar_Maquinita:
  2786                           	callstack 0
  2787                           
  2788 ;; *************** function _EUSART1_is_tx_ready *****************
  2789 ;; Defined at:
  2790 ;;		line 94 in file "mcc_generated_files/eusart1.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;		None
  2793 ;; Auto vars:     Size  Location     Type
  2794 ;;		None
  2795 ;; Return value:  Size  Location     Type
  2796 ;;                  1    wreg      _Bool 
  2797 ;; Registers used:
  2798 ;;		wreg, status,2
  2799 ;; Tracked objects:
  2800 ;;		On entry : 0/0
  2801 ;;		On exit  : 0/0
  2802 ;;		Unchanged: 0/0
  2803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2805 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2807 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2808 ;;Total ram usage:        1 bytes
  2809 ;; Hardware stack levels used:    1
  2810 ;; This function calls:
  2811 ;;		Nothing
  2812 ;; This function is called by:
  2813 ;;		_main
  2814 ;; This function uses a non-reentrant model
  2815 ;;
  2816                           
  2817                           	psect	text18
  2818  00F336                     __ptext18:
  2819                           	callstack 0
  2820  00F336                     _EUSART1_is_tx_ready:
  2821                           	callstack 30
  2822  00F336                     
  2823                           ;mcc_generated_files/eusart1.c: 96:     return (_Bool)(PIR3bits.TX1IF && TX1STAbits.TXEN
      +                          );
  2824  00F336  0E00               	movlw	0
  2825  00F338  6E01               	movwf	_EUSART1_is_tx_ready$556^0,c
  2826  00F33A  010E               	movlb	14	; () banked
  2827  00F33C  A9CD               	btfss	205,4,b	;volatile
  2828  00F33E  EFA3  F079         	goto	u651
  2829  00F342  EFA5  F079         	goto	u650
  2830  00F346                     u651:
  2831  00F346  EFAE  F079         	goto	l194
  2832  00F34A                     u650:
  2833  00F34A                     
  2834                           ; BSR set to: 14
  2835  00F34A  AA9E               	btfss	158,5,c	;volatile
  2836  00F34C  EFAA  F079         	goto	u661
  2837  00F350  EFAC  F079         	goto	u660
  2838  00F354                     u661:
  2839  00F354  EFAE  F079         	goto	l194
  2840  00F358                     u660:
  2841  00F358                     
  2842                           ; BSR set to: 14
  2843  00F358  0E01               	movlw	1
  2844  00F35A  6E01               	movwf	_EUSART1_is_tx_ready$556^0,c
  2845  00F35C                     l194:
  2846                           
  2847                           ; BSR set to: 14
  2848  00F35C  5001               	movf	_EUSART1_is_tx_ready$556^0,w,c
  2849  00F35E                     
  2850                           ; BSR set to: 14
  2851  00F35E  0012               	return		;funcret
  2852  00F360                     __end_of_EUSART1_is_tx_ready:
  2853                           	callstack 0
  2854                           
  2855 ;; *************** function _EUSART1_is_rx_ready *****************
  2856 ;; Defined at:
  2857 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;		None
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;		None
  2862 ;; Return value:  Size  Location     Type
  2863 ;;                  1    wreg      _Bool 
  2864 ;; Registers used:
  2865 ;;		wreg
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2875 ;;Total ram usage:        0 bytes
  2876 ;; Hardware stack levels used:    1
  2877 ;; This function calls:
  2878 ;;		Nothing
  2879 ;; This function is called by:
  2880 ;;		_main
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           	psect	text19
  2885  00F260                     __ptext19:
  2886                           	callstack 0
  2887  00F260                     _EUSART1_is_rx_ready:
  2888                           	callstack 30
  2889  00F260                     
  2890                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR3bits.RC1IF);
  2891  00F260  010E               	movlb	14	; () banked
  2892  00F262  BBCD               	btfsc	205,5,b	;volatile
  2893  00F264  EF36  F079         	goto	u131
  2894  00F268  EF39  F079         	goto	u130
  2895  00F26C                     u131:
  2896  00F26C  0E01               	movlw	1
  2897  00F26E  EF3A  F079         	goto	u136
  2898  00F272                     u130:
  2899  00F272  0E00               	movlw	0
  2900  00F274                     u136:
  2901  00F274                     
  2902                           ; BSR set to: 14
  2903  00F274  0012               	return		;funcret
  2904  00F276                     __end_of_EUSART1_is_rx_ready:
  2905                           	callstack 0
  2906                           
  2907 ;; *************** function _EUSART1_Write *****************
  2908 ;; Defined at:
  2909 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;  txData          1    wreg     unsigned char 
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;  txData          1    0[COMRAM] unsigned char 
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  1    wreg      void 
  2916 ;; Registers used:
  2917 ;;		wreg
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2924 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2926 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2927 ;;Total ram usage:        1 bytes
  2928 ;; Hardware stack levels used:    1
  2929 ;; This function calls:
  2930 ;;		Nothing
  2931 ;; This function is called by:
  2932 ;;		_main
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           	psect	text20
  2937  00F28C                     __ptext20:
  2938                           	callstack 0
  2939  00F28C                     _EUSART1_Write:
  2940                           	callstack 30
  2941                           
  2942                           ; BSR set to: 14
  2943                           ;incstack = 0
  2944                           ;EUSART1_Write@txData stored from wreg
  2945  00F28C  6E01               	movwf	EUSART1_Write@txData^0,c
  2946  00F28E                     l214:
  2947                           
  2948                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR3bits.TX1IF)
  2949  00F28E  010E               	movlb	14	; () banked
  2950  00F290  A9CD               	btfss	205,4,b	;volatile
  2951  00F292  EF4D  F079         	goto	u141
  2952  00F296  EF4F  F079         	goto	u140
  2953  00F29A                     u141:
  2954  00F29A  EF47  F079         	goto	l214
  2955  00F29E                     u140:
  2956  00F29E                     
  2957                           ; BSR set to: 14
  2958                           ;mcc_generated_files/eusart1.c: 138:     TX1REG = txData;
  2959  00F29E  C001  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
  2960  00F2A2                     
  2961                           ; BSR set to: 14
  2962  00F2A2  0012               	return		;funcret
  2963  00F2A4                     __end_of_EUSART1_Write:
  2964                           	callstack 0
  2965                           
  2966 ;; *************** function _Ds_Separar_Digito *****************
  2967 ;; Defined at:
  2968 ;;		line 171 in file "main.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;  dsp             2    7[COMRAM] PTR struct Paquete_Salid
  2971 ;;		 -> main@My_Paquete_Salida(4), 
  2972 ;;  datto           2    9[COMRAM] unsigned short 
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;		None
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  1    wreg      void 
  2977 ;; Registers used:
  2978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2984 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2987 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2988 ;;Total ram usage:        4 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; Hardware stack levels required when called:    1
  2991 ;; This function calls:
  2992 ;;		___lwdiv
  2993 ;;		___lwmod
  2994 ;; This function is called by:
  2995 ;;		_main
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           	psect	text21
  3000  00F61E                     __ptext21:
  3001                           	callstack 0
  3002  00F61E                     _Ds_Separar_Digito:
  3003                           	callstack 29
  3004  00F61E                     
  3005                           ;main.c: 172:                 dsp-> Pack[3] = datto % 10;
  3006  00F61E  EE20 F003          	lfsr	2,3
  3007  00F622  5008               	movf	Ds_Separar_Digito@dsp^0,w,c
  3008  00F624  26D9               	addwf	fsr2l,f,c
  3009  00F626  5009               	movf	(Ds_Separar_Digito@dsp+1)^0,w,c
  3010  00F628  22DA               	addwfc	fsr2h,f,c
  3011  00F62A  C00A  F001         	movff	Ds_Separar_Digito@datto,___lwmod@dividend
  3012  00F62E  C00B  F002         	movff	Ds_Separar_Digito@datto+1,___lwmod@dividend+1
  3013  00F632  0E00               	movlw	0
  3014  00F634  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3015  00F636  0E0A               	movlw	10
  3016  00F638  6E03               	movwf	___lwmod@divisor^0,c
  3017  00F63A  EC62  F07A         	call	___lwmod	;wreg free
  3018  00F63E  5001               	movf	?___lwmod^0,w,c
  3019  00F640  6EDF               	movwf	indf2,c
  3020  00F642                     
  3021                           ;main.c: 173:                 datto = datto/10;
  3022  00F642  C00A  F001         	movff	Ds_Separar_Digito@datto,___lwdiv@dividend
  3023  00F646  C00B  F002         	movff	Ds_Separar_Digito@datto+1,___lwdiv@dividend+1
  3024  00F64A  0E00               	movlw	0
  3025  00F64C  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3026  00F64E  0E0A               	movlw	10
  3027  00F650  6E03               	movwf	___lwdiv@divisor^0,c
  3028  00F652  EC94  F07A         	call	___lwdiv	;wreg free
  3029  00F656  C001  F00A         	movff	?___lwdiv,Ds_Separar_Digito@datto
  3030  00F65A  C002  F00B         	movff	?___lwdiv+1,Ds_Separar_Digito@datto+1
  3031  00F65E                     
  3032                           ;main.c: 174:     dsp->Pack[2] = datto % 10;
  3033  00F65E  EE20 F002          	lfsr	2,2
  3034  00F662  5008               	movf	Ds_Separar_Digito@dsp^0,w,c
  3035  00F664  26D9               	addwf	fsr2l,f,c
  3036  00F666  5009               	movf	(Ds_Separar_Digito@dsp+1)^0,w,c
  3037  00F668  22DA               	addwfc	fsr2h,f,c
  3038  00F66A  C00A  F001         	movff	Ds_Separar_Digito@datto,___lwmod@dividend
  3039  00F66E  C00B  F002         	movff	Ds_Separar_Digito@datto+1,___lwmod@dividend+1
  3040  00F672  0E00               	movlw	0
  3041  00F674  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3042  00F676  0E0A               	movlw	10
  3043  00F678  6E03               	movwf	___lwmod@divisor^0,c
  3044  00F67A  EC62  F07A         	call	___lwmod	;wreg free
  3045  00F67E  5001               	movf	?___lwmod^0,w,c
  3046  00F680  6EDF               	movwf	indf2,c
  3047                           
  3048                           ;main.c: 175:     datto = datto/10;
  3049  00F682  C00A  F001         	movff	Ds_Separar_Digito@datto,___lwdiv@dividend
  3050  00F686  C00B  F002         	movff	Ds_Separar_Digito@datto+1,___lwdiv@dividend+1
  3051  00F68A  0E00               	movlw	0
  3052  00F68C  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3053  00F68E  0E0A               	movlw	10
  3054  00F690  6E03               	movwf	___lwdiv@divisor^0,c
  3055  00F692  EC94  F07A         	call	___lwdiv	;wreg free
  3056  00F696  C001  F00A         	movff	?___lwdiv,Ds_Separar_Digito@datto
  3057  00F69A  C002  F00B         	movff	?___lwdiv+1,Ds_Separar_Digito@datto+1
  3058  00F69E                     
  3059                           ;main.c: 176:     dsp->Pack[1] = datto % 10;
  3060  00F69E  EE20 F001          	lfsr	2,1
  3061  00F6A2  5008               	movf	Ds_Separar_Digito@dsp^0,w,c
  3062  00F6A4  26D9               	addwf	fsr2l,f,c
  3063  00F6A6  5009               	movf	(Ds_Separar_Digito@dsp+1)^0,w,c
  3064  00F6A8  22DA               	addwfc	fsr2h,f,c
  3065  00F6AA  C00A  F001         	movff	Ds_Separar_Digito@datto,___lwmod@dividend
  3066  00F6AE  C00B  F002         	movff	Ds_Separar_Digito@datto+1,___lwmod@dividend+1
  3067  00F6B2  0E00               	movlw	0
  3068  00F6B4  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3069  00F6B6  0E0A               	movlw	10
  3070  00F6B8  6E03               	movwf	___lwmod@divisor^0,c
  3071  00F6BA  EC62  F07A         	call	___lwmod	;wreg free
  3072  00F6BE  5001               	movf	?___lwmod^0,w,c
  3073  00F6C0  6EDF               	movwf	indf2,c
  3074  00F6C2                     
  3075                           ;main.c: 177:     datto = datto/10;
  3076  00F6C2  C00A  F001         	movff	Ds_Separar_Digito@datto,___lwdiv@dividend
  3077  00F6C6  C00B  F002         	movff	Ds_Separar_Digito@datto+1,___lwdiv@dividend+1
  3078  00F6CA  0E00               	movlw	0
  3079  00F6CC  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3080  00F6CE  0E0A               	movlw	10
  3081  00F6D0  6E03               	movwf	___lwdiv@divisor^0,c
  3082  00F6D2  EC94  F07A         	call	___lwdiv	;wreg free
  3083  00F6D6  C001  F00A         	movff	?___lwdiv,Ds_Separar_Digito@datto
  3084  00F6DA  C002  F00B         	movff	?___lwdiv+1,Ds_Separar_Digito@datto+1
  3085                           
  3086                           ;main.c: 178:     dsp->Pack[0] = datto % 10;
  3087  00F6DE  C00A  F001         	movff	Ds_Separar_Digito@datto,___lwmod@dividend
  3088  00F6E2  C00B  F002         	movff	Ds_Separar_Digito@datto+1,___lwmod@dividend+1
  3089  00F6E6  0E00               	movlw	0
  3090  00F6E8  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3091  00F6EA  0E0A               	movlw	10
  3092  00F6EC  6E03               	movwf	___lwmod@divisor^0,c
  3093  00F6EE  EC62  F07A         	call	___lwmod	;wreg free
  3094  00F6F2  5001               	movf	?___lwmod^0,w,c
  3095  00F6F4  C008  FFD9         	movff	Ds_Separar_Digito@dsp,fsr2l
  3096  00F6F8  C009  FFDA         	movff	Ds_Separar_Digito@dsp+1,fsr2h
  3097  00F6FC  6EDF               	movwf	indf2,c
  3098  00F6FE  0012               	return		;funcret
  3099  00F700                     __end_of_Ds_Separar_Digito:
  3100                           	callstack 0
  3101                           
  3102 ;; *************** function ___lwmod *****************
  3103 ;; Defined at:
  3104 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwmod.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;  dividend        2    0[COMRAM] unsigned int 
  3107 ;;  divisor         2    2[COMRAM] unsigned int 
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;  counter         1    4[COMRAM] unsigned char 
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  2    0[COMRAM] unsigned int 
  3112 ;; Registers used:
  3113 ;;		wreg, status,2, status,0
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3119 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3120 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3122 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3123 ;;Total ram usage:        5 bytes
  3124 ;; Hardware stack levels used:    1
  3125 ;; This function calls:
  3126 ;;		Nothing
  3127 ;; This function is called by:
  3128 ;;		_Ds_Separar_Digito
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132                           	psect	text22
  3133  00F4C4                     __ptext22:
  3134                           	callstack 0
  3135  00F4C4                     ___lwmod:
  3136                           	callstack 29
  3137  00F4C4  5003               	movf	___lwmod@divisor^0,w,c
  3138  00F4C6  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  3139  00F4C8  B4D8               	btfsc	status,2,c
  3140  00F4CA  EF69  F07A         	goto	u621
  3141  00F4CE  EF6B  F07A         	goto	u620
  3142  00F4D2                     u621:
  3143  00F4D2  EF8F  F07A         	goto	l1076
  3144  00F4D6                     u620:
  3145  00F4D6  0E01               	movlw	1
  3146  00F4D8  6E05               	movwf	___lwmod@counter^0,c
  3147  00F4DA  EF73  F07A         	goto	l1860
  3148  00F4DE                     l1858:
  3149  00F4DE  90D8               	bcf	status,0,c
  3150  00F4E0  3603               	rlcf	___lwmod@divisor^0,f,c
  3151  00F4E2  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  3152  00F4E4  2A05               	incf	___lwmod@counter^0,f,c
  3153  00F4E6                     l1860:
  3154  00F4E6  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  3155  00F4E8  EF78  F07A         	goto	u631
  3156  00F4EC  EF7A  F07A         	goto	u630
  3157  00F4F0                     u631:
  3158  00F4F0  EF6F  F07A         	goto	l1858
  3159  00F4F4                     u630:
  3160  00F4F4                     l1862:
  3161  00F4F4  5003               	movf	___lwmod@divisor^0,w,c
  3162  00F4F6  5C01               	subwf	___lwmod@dividend^0,w,c
  3163  00F4F8  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3164  00F4FA  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  3165  00F4FC  A0D8               	btfss	status,0,c
  3166  00F4FE  EF83  F07A         	goto	u641
  3167  00F502  EF85  F07A         	goto	u640
  3168  00F506                     u641:
  3169  00F506  EF89  F07A         	goto	l1866
  3170  00F50A                     u640:
  3171  00F50A  5003               	movf	___lwmod@divisor^0,w,c
  3172  00F50C  5E01               	subwf	___lwmod@dividend^0,f,c
  3173  00F50E  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3174  00F510  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  3175  00F512                     l1866:
  3176  00F512  90D8               	bcf	status,0,c
  3177  00F514  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  3178  00F516  3203               	rrcf	___lwmod@divisor^0,f,c
  3179  00F518  2E05               	decfsz	___lwmod@counter^0,f,c
  3180  00F51A  EF7A  F07A         	goto	l1862
  3181  00F51E                     l1076:
  3182  00F51E  C001  F001         	movff	___lwmod@dividend,?___lwmod
  3183  00F522  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  3184  00F526  0012               	return		;funcret
  3185  00F528                     __end_of___lwmod:
  3186                           	callstack 0
  3187                           
  3188 ;; *************** function ___lwdiv *****************
  3189 ;; Defined at:
  3190 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwdiv.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;  dividend        2    0[COMRAM] unsigned int 
  3193 ;;  divisor         2    2[COMRAM] unsigned int 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;  quotient        2    4[COMRAM] unsigned int 
  3196 ;;  counter         1    6[COMRAM] unsigned char 
  3197 ;; Return value:  Size  Location     Type
  3198 ;;                  2    0[COMRAM] unsigned int 
  3199 ;; Registers used:
  3200 ;;		wreg, status,2, status,0
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3206 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3207 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3209 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3210 ;;Total ram usage:        7 bytes
  3211 ;; Hardware stack levels used:    1
  3212 ;; This function calls:
  3213 ;;		Nothing
  3214 ;; This function is called by:
  3215 ;;		_Procese_Dato_Rebido
  3216 ;;		_Ds_Separar_Digito
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           	psect	text23
  3221  00F528                     __ptext23:
  3222                           	callstack 0
  3223  00F528                     ___lwdiv:
  3224                           	callstack 29
  3225  00F528  0E00               	movlw	0
  3226  00F52A  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  3227  00F52C  0E00               	movlw	0
  3228  00F52E  6E05               	movwf	___lwdiv@quotient^0,c
  3229  00F530  5003               	movf	___lwdiv@divisor^0,w,c
  3230  00F532  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3231  00F534  B4D8               	btfsc	status,2,c
  3232  00F536  EF9F  F07A         	goto	u591
  3233  00F53A  EFA1  F07A         	goto	u590
  3234  00F53E                     u591:
  3235  00F53E  EFC9  F07A         	goto	l1066
  3236  00F542                     u590:
  3237  00F542  0E01               	movlw	1
  3238  00F544  6E07               	movwf	___lwdiv@counter^0,c
  3239  00F546  EFA9  F07A         	goto	l1840
  3240  00F54A                     l1838:
  3241  00F54A  90D8               	bcf	status,0,c
  3242  00F54C  3603               	rlcf	___lwdiv@divisor^0,f,c
  3243  00F54E  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3244  00F550  2A07               	incf	___lwdiv@counter^0,f,c
  3245  00F552                     l1840:
  3246  00F552  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  3247  00F554  EFAE  F07A         	goto	u601
  3248  00F558  EFB0  F07A         	goto	u600
  3249  00F55C                     u601:
  3250  00F55C  EFA5  F07A         	goto	l1838
  3251  00F560                     u600:
  3252  00F560                     l1842:
  3253  00F560  90D8               	bcf	status,0,c
  3254  00F562  3605               	rlcf	___lwdiv@quotient^0,f,c
  3255  00F564  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3256  00F566  5003               	movf	___lwdiv@divisor^0,w,c
  3257  00F568  5C01               	subwf	___lwdiv@dividend^0,w,c
  3258  00F56A  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3259  00F56C  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3260  00F56E  A0D8               	btfss	status,0,c
  3261  00F570  EFBC  F07A         	goto	u611
  3262  00F574  EFBE  F07A         	goto	u610
  3263  00F578                     u611:
  3264  00F578  EFC3  F07A         	goto	l1850
  3265  00F57C                     u610:
  3266  00F57C  5003               	movf	___lwdiv@divisor^0,w,c
  3267  00F57E  5E01               	subwf	___lwdiv@dividend^0,f,c
  3268  00F580  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3269  00F582  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3270  00F584  8005               	bsf	___lwdiv@quotient^0,0,c
  3271  00F586                     l1850:
  3272  00F586  90D8               	bcf	status,0,c
  3273  00F588  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3274  00F58A  3203               	rrcf	___lwdiv@divisor^0,f,c
  3275  00F58C  2E07               	decfsz	___lwdiv@counter^0,f,c
  3276  00F58E  EFB0  F07A         	goto	l1842
  3277  00F592                     l1066:
  3278  00F592  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3279  00F596  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3280  00F59A  0012               	return		;funcret
  3281  00F59C                     __end_of___lwdiv:
  3282                           	callstack 0
  3283                           
  3284 ;; *************** function _ADCC_IsConversionDone *****************
  3285 ;; Defined at:
  3286 ;;		line 119 in file "mcc_generated_files/adcc.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;		None
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;		None
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  1    wreg      _Bool 
  3293 ;; Registers used:
  3294 ;;		wreg
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3304 ;;Total ram usage:        0 bytes
  3305 ;; Hardware stack levels used:    1
  3306 ;; This function calls:
  3307 ;;		Nothing
  3308 ;; This function is called by:
  3309 ;;		_main
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           	psect	text24
  3314  00F24C                     __ptext24:
  3315                           	callstack 0
  3316  00F24C                     _ADCC_IsConversionDone:
  3317                           	callstack 30
  3318  00F24C                     
  3319                           ;mcc_generated_files/adcc.c: 122:     return ((unsigned char)(!ADCON0bits.ADGO));
  3320  00F24C  A060               	btfss	96,0,c	;volatile
  3321  00F24E  EF2B  F079         	goto	u151
  3322  00F252  EF2E  F079         	goto	u150
  3323  00F256                     u151:
  3324  00F256  0E01               	movlw	1
  3325  00F258  EF2F  F079         	goto	u160
  3326  00F25C                     u150:
  3327  00F25C  0E00               	movlw	0
  3328  00F25E                     u160:
  3329  00F25E  0012               	return		;funcret
  3330  00F260                     __end_of_ADCC_IsConversionDone:
  3331                           	callstack 0
  3332                           
  3333 ;; *************** function _ADCC_GetConversionResult *****************
  3334 ;; Defined at:
  3335 ;;		line 125 in file "mcc_generated_files/adcc.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;		None
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;		None
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  2    0[COMRAM] unsigned short 
  3342 ;; Registers used:
  3343 ;;		wreg, status,2, status,0
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3349 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3351 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3352 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3353 ;;Total ram usage:        4 bytes
  3354 ;; Hardware stack levels used:    1
  3355 ;; This function calls:
  3356 ;;		Nothing
  3357 ;; This function is called by:
  3358 ;;		_main
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362                           	psect	text25
  3363  00F238                     __ptext25:
  3364                           	callstack 0
  3365  00F238                     _ADCC_GetConversionResult:
  3366                           	callstack 30
  3367  00F238                     
  3368                           ;mcc_generated_files/adcc.c: 128:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3369  00F238  5064               	movf	100,w,c	;volatile
  3370  00F23A  6E04               	movwf	(??_ADCC_GetConversionResult+1)^0,c
  3371  00F23C  6A03               	clrf	??_ADCC_GetConversionResult^0,c
  3372  00F23E  5063               	movf	99,w,c	;volatile
  3373  00F240  2403               	addwf	??_ADCC_GetConversionResult^0,w,c
  3374  00F242  6E01               	movwf	?_ADCC_GetConversionResult^0,c
  3375  00F244  0E00               	movlw	0
  3376  00F246  2004               	addwfc	(??_ADCC_GetConversionResult+1)^0,w,c
  3377  00F248  6E02               	movwf	(?_ADCC_GetConversionResult+1)^0,c
  3378  00F24A  0012               	return		;funcret
  3379  00F24C                     __end_of_ADCC_GetConversionResult:
  3380                           	callstack 0
  3381  0000                     
  3382                           	psect	rparam
  3383  0000                     
  3384                           	psect	idloc
  3385                           
  3386                           ;Config register IDLOC0 @ 0x200000
  3387                           ;	unspecified, using default values
  3388  200000                     	org	2097152
  3389  200000  0FFF               	dw	4095
  3390                           
  3391                           ;Config register IDLOC1 @ 0x200002
  3392                           ;	unspecified, using default values
  3393  200002                     	org	2097154
  3394  200002  0FFF               	dw	4095
  3395                           
  3396                           ;Config register IDLOC2 @ 0x200004
  3397                           ;	unspecified, using default values
  3398  200004                     	org	2097156
  3399  200004  0FFF               	dw	4095
  3400                           
  3401                           ;Config register IDLOC3 @ 0x200006
  3402                           ;	unspecified, using default values
  3403  200006                     	org	2097158
  3404  200006  0FFF               	dw	4095
  3405                           
  3406                           ;Config register IDLOC4 @ 0x200008
  3407                           ;	unspecified, using default values
  3408  200008                     	org	2097160
  3409  200008  0FFF               	dw	4095
  3410                           
  3411                           ;Config register IDLOC5 @ 0x20000A
  3412                           ;	unspecified, using default values
  3413  20000A                     	org	2097162
  3414  20000A  0FFF               	dw	4095
  3415                           
  3416                           ;Config register IDLOC6 @ 0x20000C
  3417                           ;	unspecified, using default values
  3418  20000C                     	org	2097164
  3419  20000C  0FFF               	dw	4095
  3420                           
  3421                           ;Config register IDLOC7 @ 0x20000E
  3422                           ;	unspecified, using default values
  3423  20000E                     	org	2097166
  3424  20000E  0FFF               	dw	4095
  3425                           
  3426                           	psect	config
  3427                           
  3428                           ;Config register CONFIG1L @ 0x300000
  3429                           ;	External Oscillator mode Selection bits
  3430                           ;	FEXTOSC = OFF, Oscillator not enabled
  3431                           ;	Power-up default value for COSC bits
  3432                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  3433  300000                     	org	3145728
  3434  300000  8C                 	db	140
  3435                           
  3436                           ;Config register CONFIG1H @ 0x300001
  3437                           ;	Clock Out Enable bit
  3438                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3439                           ;	Clock Switch Enable bit
  3440                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3441                           ;	Fail-Safe Clock Monitor Enable bit
  3442                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3443  300001                     	org	3145729
  3444  300001  FF                 	db	255
  3445                           
  3446                           ;Config register CONFIG2L @ 0x300002
  3447                           ;	Master Clear Enable bit
  3448                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3449                           ;	Power-up Timer Enable bit
  3450                           ;	PWRTE = OFF, Power up timer disabled
  3451                           ;	Low-power BOR enable bit
  3452                           ;	LPBOREN = OFF, ULPBOR disabled
  3453                           ;	Brown-out Reset Enable bits
  3454                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  3455  300002                     	org	3145730
  3456  300002  FF                 	db	255
  3457                           
  3458                           ;Config register CONFIG2H @ 0x300003
  3459                           ;	Brown Out Reset Voltage selection bits
  3460                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  3461                           ;	ZCD Disable bit
  3462                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  3463                           ;	PPSLOCK bit One-Way Set Enable bit
  3464                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  3465                           ;	Stack Full/Underflow Reset Enable bit
  3466                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3467                           ;	Debugger Enable bit
  3468                           ;	DEBUG = OFF, Background debugger disabled
  3469                           ;	Extended Instruction Set Enable bit
  3470                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3471  300003                     	org	3145731
  3472  300003  FF                 	db	255
  3473                           
  3474                           ;Config register CONFIG3L @ 0x300004
  3475                           ;	WDT Period Select bits
  3476                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3477                           ;	WDT operating mode
  3478                           ;	WDTE = OFF, WDT Disabled
  3479  300004                     	org	3145732
  3480  300004  9F                 	db	159
  3481                           
  3482                           ;Config register CONFIG3H @ 0x300005
  3483                           ;	WDT Window Select bits
  3484                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3485                           ;	WDT input clock selector
  3486                           ;	WDTCCS = SC, Software Control
  3487  300005                     	org	3145733
  3488  300005  FF                 	db	255
  3489                           
  3490                           ;Config register CONFIG4L @ 0x300006
  3491                           ;	Write Protection Block 0
  3492                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3493                           ;	Write Protection Block 1
  3494                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3495                           ;	Write Protection Block 2
  3496                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3497                           ;	Write Protection Block 3
  3498                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3499  300006                     	org	3145734
  3500  300006  FF                 	db	255
  3501                           
  3502                           ;Config register CONFIG4H @ 0x300007
  3503                           ;	Configuration Register Write Protection bit
  3504                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  3505                           ;	Boot Block Write Protection bit
  3506                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3507                           ;	Data EEPROM Write Protection bit
  3508                           ;	WRTD = OFF, Data EEPROM not write-protected
  3509                           ;	Scanner Enable bit
  3510                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  3511                           ;	Low Voltage Programming Enable bit
  3512                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  3513  300007                     	org	3145735
  3514  300007  FF                 	db	255
  3515                           
  3516                           ;Config register CONFIG5L @ 0x300008
  3517                           ;	UserNVM Program Memory Code Protection bit
  3518                           ;	CP = OFF, UserNVM code protection disabled
  3519                           ;	DataNVM Memory Code Protection bit
  3520                           ;	CPD = OFF, DataNVM code protection disabled
  3521  300008                     	org	3145736
  3522  300008  FF                 	db	255
  3523                           
  3524                           ;Config register CONFIG5H @ 0x300009
  3525                           ;	unspecified, using default values
  3526  300009                     	org	3145737
  3527  300009  FF                 	db	255
  3528                           
  3529                           ;Config register CONFIG6L @ 0x30000A
  3530                           ;	Table Read Protection Block 0
  3531                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3532                           ;	Table Read Protection Block 1
  3533                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3534                           ;	Table Read Protection Block 2
  3535                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3536                           ;	Table Read Protection Block 3
  3537                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3538  30000A                     	org	3145738
  3539  30000A  FF                 	db	255
  3540                           
  3541                           ;Config register CONFIG6H @ 0x30000B
  3542                           ;	Boot Block Table Read Protection bit
  3543                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3544  30000B                     	org	3145739
  3545  30000B  FF                 	db	255
  3546                           tosu	equ	0xFFF
  3547                           tosh	equ	0xFFE
  3548                           tosl	equ	0xFFD
  3549                           stkptr	equ	0xFFC
  3550                           pclatu	equ	0xFFB
  3551                           pclath	equ	0xFFA
  3552                           pcl	equ	0xFF9
  3553                           tblptru	equ	0xFF8
  3554                           tblptrh	equ	0xFF7
  3555                           tblptrl	equ	0xFF6
  3556                           tablat	equ	0xFF5
  3557                           prodh	equ	0xFF4
  3558                           prodl	equ	0xFF3
  3559                           indf0	equ	0xFEF
  3560                           postinc0	equ	0xFEE
  3561                           postdec0	equ	0xFED
  3562                           preinc0	equ	0xFEC
  3563                           plusw0	equ	0xFEB
  3564                           fsr0h	equ	0xFEA
  3565                           fsr0l	equ	0xFE9
  3566                           wreg	equ	0xFE8
  3567                           indf1	equ	0xFE7
  3568                           postinc1	equ	0xFE6
  3569                           postdec1	equ	0xFE5
  3570                           preinc1	equ	0xFE4
  3571                           plusw1	equ	0xFE3
  3572                           fsr1h	equ	0xFE2
  3573                           fsr1l	equ	0xFE1
  3574                           bsr	equ	0xFE0
  3575                           indf2	equ	0xFDF
  3576                           postinc2	equ	0xFDE
  3577                           postdec2	equ	0xFDD
  3578                           preinc2	equ	0xFDC
  3579                           plusw2	equ	0xFDB
  3580                           fsr2h	equ	0xFDA
  3581                           fsr2l	equ	0xFD9
  3582                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         15
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     24      45
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    Ds_Separar_Digito@dsp	PTR struct Paquete_Salida size(2) Largest target is 4
		 -> main@My_Paquete_Salida(COMRAM[4]), 

    Procese_UART@mqnt	PTR struct Maquinita size(2) Largest target is 5
		 -> main@My_Maquinita(COMRAM[5]), 

    Inicializar_Paquete@mqnt	PTR struct Paquete_Salida size(2) Largest target is 4
		 -> main@My_Paquete_Salida(COMRAM[4]), 

    Inicializar_Maquinita@mqnt	PTR struct Maquinita size(2) Largest target is 5
		 -> main@My_Maquinita(COMRAM[5]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_Ds_Separar_Digito
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _Procese_Dato_Rebido->___lwdiv
    _Ds_Separar_Digito->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    7368
                                             11 COMRAM    13    13      0
           _ADCC_GetConversionResult
                    _ADCC_Initialize
              _ADCC_IsConversionDone
                  _Ds_Separar_Digito
                      _EUSART1_Write
                _EUSART1_is_rx_ready
                _EUSART1_is_tx_ready
              _Inicializar_Maquinita
                _Inicializar_Paquete
                _Procese_Dato_Rebido
                       _Procese_UART
                  _SYSTEM_Initialize
            _TMR6_HasOverflowOccured
 ---------------------------------------------------------------------------------
 (1) _TMR6_HasOverflowOccured                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                    _ADCC_Initialize
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Procese_UART                                         6     4      2     780
                                              0 COMRAM     6     4      2
                       _EUSART1_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Procese_Dato_Rebido                                  3     3      0    2449
                                              7 COMRAM     3     3      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Inicializar_Paquete                                  2     0      2     164
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Inicializar_Maquinita                                2     0      2     164
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_tx_ready                                  1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ds_Separar_Digito                                    4     0      4    3150
                                              7 COMRAM     4     0      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     767
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1986
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetConversionResult                             4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetConversionResult
   _ADCC_Initialize
   _ADCC_IsConversionDone
   _Ds_Separar_Digito
     ___lwdiv
     ___lwmod
   _EUSART1_Write
   _EUSART1_is_rx_ready
   _EUSART1_is_tx_ready
   _Inicializar_Maquinita
   _Inicializar_Paquete
   _Procese_Dato_Rebido
     ___lwdiv
     ___wmul
   _Procese_UART
     _EUSART1_Read
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR6_Initialize
   _TMR6_HasOverflowOccured

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     18      2D       1       47.4%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2D       6        0.0%
DATA                 0      0      2D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Sep 30 16:07:27 2021

                                            l27 F30E                                              l67 F3B4  
               __end_of_TMR6_HasOverflowOccured F3B6                                              u10 F370  
                                            u11 F36C                                              u20 F382  
                                            u21 F37E                                              u90 F39C  
                                            u91 F396                                              u96 F39E  
                           ___wmul@multiplicand 0003                                             l211 F388  
                                           l214 F28E                                             l207 F360  
                                           l232 F236                                             l144 F61C  
                                           l217 F2A2                                             l235 F222  
                                           l229 F22C                                             l190 F430  
                                           l351 F4C2                                             l360 F24A  
                                           l512 F6FE                                             l272 F2D4  
                                           l194 F35C                                             l195 F35E  
                                           l275 F2BA                                             l531 F7A0  
                                           l532 F7A2                                             l357 F25E  
                                           l509 FFFE                                             l198 F274  
                                           l278 F2F0                                             l536 F7E0  
                                           l475 F472                                             l493 FBE0  
                                           l478 F3F2                                             l575 F334  
                                           u100 F3B0                                             u101 F3AC  
                                           u130 F272                                             u131 F26C  
                                           u140 F29E                                             u141 F29A  
                                           u150 F25C                                             u151 F256  
                                           u160 F25E                                             u136 F274  
                                           u600 F560                                             u601 F55C  
                                           u610 F57C                                             _PR6 000FB0  
                                           u611 F578                                             u620 F4D6  
                                           u700 FC6E                                             u621 F4D2  
                                           u701 FC6A                                             u630 F4F4  
                                           u631 F4F0                                             u640 F50A  
                                           u800 FD84                                             u720 FCA4  
                                           u641 F506                                             u801 FD80  
                                           u721 FCA0                                             u650 F34A  
                                           u810 FD9A                                             u730 FCBA  
                                           u651 F346                                             u811 FD96  
                                           u731 FCB6                                             u715 FC7E  
                                           u660 F358                                             u900 FEBE  
                                           u820 FDCC                                             u661 F354  
                                           u901 FEBA                                             u821 FDC8  
                                           u590 F542                                             u910 FEF0  
                                           u830 FDE2                                             u750 FCF0  
                                           u670 F8E0                                             u591 F53E  
                                           u911 FEEC                                             u831 FDDE  
                                           u751 FCEC                                             u671 F8DC  
                                           u920 FF06                                             u840 FE14  
                                           u760 FD06                                             u680 FB52  
                                           u921 FF02                                             u841 FE10  
                                           u761 FD02                                             u745 FCCA  
                                           u681 FB4E                                             u930 FF38  
                                           u850 FE2A                                             u770 FD38  
                                           u690 FC58                                             u931 FF34  
                                           u851 FE26                                             u771 FD34  
                                           u691 FC54                                             u940 FF4E  
                                           u860 FE5C                                             u780 FD4E  
                                           u941 FF4A                                             u861 FE58  
                                           u781 FD4A                                             u950 FF80  
                                           u870 FE72                                             u951 FF7C  
                                           u871 FE6E                                             u960 FF96  
                                           u961 FF92                                             u970 FFC8  
                                           u890 FEA8                                             u971 FFC4  
                                           u891 FEA4                                             u795 FD5E  
                                           u980 FFDE                                             u981 FFDA  
                                           u885 FE82                                             u990 F748  
                                           u991 F744                         __size_of_PMD_Initialize 001C  
                                           wreg 000FE8                     __end_of_Inicializar_Paquete F3F4  
                                          l2000 FD84                                            l2010 FDE2  
                                          l2002 FD9A                                            l2020 FE2E  
                                          l2012 FDE6                                            l2004 FD9E  
                                          l1300 F382                                            l2100 F72E  
                                          l2030 FE92                                            l2022 FE46  
                                          l2014 FDFE                                            l2006 FDB6  
                                          l1302 F386                                            l1310 F474  
                                          l2110 F754                                            l2102 F730  
                                          l1400 F24C                                            l2040 FEF0  
                                          l2032 FEA8                                            l2024 FE5C  
                                          l2016 FE14                                            l2008 FDCC  
                                          l2120 F7A6                                            l2112 F764  
                                          l2104 F732                                            l1073 F59A  
                                          l1066 F592                                            l2050 FF4E  
                                          l2042 FF06                                            l2034 FEBE  
                                          l2026 FE72                                            l2018 FE2A  
                                          l1306 F2D6                                            l2130 F826  
                                          l2122 F7CC                                            l2114 F784  
                                          l2106 F734                                            l1083 F526  
                                          l1076 F51E                                            l2060 FF9A  
                                          l2052 FF52                                            l2044 FF0A  
                                          l2036 FEC2                                            l2028 FE76  
                                          l1308 F2A4                                            l1260 F5B4  
                                          l2140 F85A                                            l2124 F7E2  
                                          l2132 F82A                                            l2116 F788  
                                          l2108 F748                                            l2070 FFFA  
                                          l2062 FFB2                                            l2054 FF6A  
                                          l2046 FF22                                            l2038 FEDA  
                                          l1270 F5FC                                            l1262 F5C2  
                                          l1254 F2F2                                            l2142 F862  
                                          l2134 F83A                                            l2126 F806  
                                          l2118 F78C                                            l2080 F6C2  
                                          l2072 F61E                                            l2064 FFC8  
                                          l2056 FF80                                            l2048 FF38  
                                          l1280 F60A                                            l1272 F5FE  
                                          l1264 F5CA                                            l1256 F306  
                                          l2144 F86A                                            l2136 F84E  
                                          l2128 F812                                            l2074 F642  
                                          l2066 FFDE                                            l2058 FF96  
                                          l1282 F60C                                            l1274 F600  
                                          l1266 F5D0                                            l1258 F59C  
                                          l1370 F38A                                            l2146 F872  
                                          l2138 F852                                            l2090 F720  
                                          l2082 F700                                            l2076 F65E  
                                          l2068 FFE2                                            l1276 F606  
                                          l1268 F5FA                                            l1372 F3B0  
                                          l2092 F720                                            l2084 F704  
                                          l2078 F69E                                            l1294 F360  
                                          l1278 F608                                            l1374 F3B2  
                                          l2094 F724                                            l2086 F710  
                                          l1392 F28E                                            l1296 F370  
                                          l2168 FBA2                                            l2096 F728  
                                          l2088 F71C                                            l1394 F29E  
                                          l1298 F374                                            l1810 F224  
                                          l2098 F72C                                            l1388 F260  
                                          l1900 F3D2                                            l1812 F22E  
                                          l1820 F414                                            l1902 F3E2  
                                          l1910 F8E0                                            l1814 F21A  
                                          l1822 F420                                            l1840 F552  
                                          l1832 F528                                            l1920 F97E  
                                          l1912 F918                                            l1904 F880  
                                          l1824 F42C                                            l1816 F3F4  
                                          l1850 F586                                            l1842 F560  
                                          l1834 F530                                            l1826 F310  
                                          l1930 FA0E                                            l1922 F9A0  
                                          l1914 F920                                            l1906 F884  
                                          l1818 F408                                            l1852 F58C  
                                          l1844 F566                                            l1836 F542  
                                          l1860 F4E6                                            l1828 F32C  
                                          l1940 FABA                                            l1932 FA3A  
                                          l1924 F9B0                                            l1916 F942  
                                          l1908 F8A6                                            l1846 F57C  
                                          l1838 F54A                                            l1862 F4F4  
                                          l1854 F4C4                                            l1870 F336  
                                          l1950 FB5A                                            l1942 FACA  
                                          l1934 FA5C                                            l1926 F9DC  
                                          l1918 F952                                            l1848 F584  
                                          l1864 F50A                                            l1856 F4D6  
                                          l1872 F33A                                            l1952 FB5E  
                                          l1944 FAF6                                            l1936 FA6C  
                                          l1928 F9FE                                            l1880 F2BC  
                                          l1866 F512                                            l1858 F4DE  
                                          l1874 F34A                                            l1890 F442  
                                          l1970 FC6E                                            l1954 FB6E  
                                          l1946 FB18                                            l1938 FA98  
                                          l1882 F2D0                                            l1884 F238  
                                          l1868 F518                                            l1876 F358  
                                          l1892 F452                                            l1980 FCBE  
                                          l1972 FC72                                            l1964 FBE2  
                                          l1948 FB52                                            l1894 F462  
                                          l1990 FD22                                            l1982 FCDA  
                                          l1974 FC8E                                            l1966 FC42  
                                          l1958 FB82                                            l1888 F432  
                                          l1896 F3B6                                            l1992 FD38  
                                          l1984 FCF0                                            l1976 FCA4  
                                          l1968 FC58                                            l1898 F3C2  
                                          l1994 FD4E                                            l1986 FD06  
                                          l1978 FCBA                                            l1996 FD52  
                                          l1988 FD0A                                            l1998 FD6E  
                    __size_of_Ds_Separar_Digito 00E2                                            u1000 F764  
                                          u1001 F760                                            u1010 F774  
                                          u1011 F76E                                            u1020 F7A0  
                                          u1021 F79C                                            u1030 F7B6  
                                          u1031 F7B0                                            u1040 F7E0  
                                          u1016 F776                                            u1041 F7DC  
                                          u1050 F7F2                                            u1051 F7EC  
                                          u1060 F83A                                            u1036 F7B8  
                                          u1061 F836                                            u1070 F84E  
                                          u1071 F84A                                            u1056 F7F4  
                                          _LATA 000F83                                            _LATB 000F84  
                                          _LATC 000F85                                            _LATD 000F86  
                                          _LATE 000F87                                            _T6PR 000FB0  
                                          _PMD0 000EE1                                            _PMD1 000EE2  
                                          _PMD2 000EE3                                            _PMD3 000EE4  
                                          _PMD4 000EE5                                            _PMD5 000EE6  
                                          _TMR6 000FAF                                            _WPUA 000F10  
                                          _WPUB 000F18                                            _WPUC 000F20  
                                          _WPUD 000F25                                            _WPUE 000F2D  
                                 _EUSART1_Write F28C                                            _main F700  
                                 ?_EUSART1_Read 0001                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            fsr2l 000FD9  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0000                                    ___param_bank 000000  
                __size_of_OSCILLATOR_Initialize 0018                   __end_of_OSCILLATOR_Initialize F2BC  
                                         _ADACQ 000F5C                                           _ADCAP 000F5D  
                                         _ADACT 000F56                                           ?_main 0001  
                                         _ADCLK 000F57                                           _ADCNT 000F67  
                                         _ADPCH 000F5F                                           _ADREF 000F58  
                                         _ADPRE 000F5E                                           _ADRPT 000F66  
                                         _T6CON 000FB1                                 __end_of___lwdiv F59C  
                                         _T6HLT 000FB2                                 __end_of___lwmod F528  
                                         _T6TMR 000FAF                                           _T6RST 000FB4  
                                         _OSCEN 000EDC                                           _TRISA 000F88  
                                         _TRISB 000F89                                           _TRISC 000F8A  
                                         _TRISD 000F8B                                           _TRISE 000F8C  
                       ??_ADCC_IsConversionDone 0001                                  ?_EUSART1_Write 0001  
                                ??_EUSART1_Read 0001                                           status 000FD8  
            _EUSART1_DefaultFramingErrorHandler 000000                                      _V_Recibido 0019  
                               __initialization F276                      __end_of_EUSART1_Initialize F432  
                                  __end_of_main F880                  __size_of_Inicializar_Maquinita 0042  
                 __end_of_Inicializar_Maquinita F474                                          ??_main 000C  
                                 __activetblptr 000002                                 _TMR6_Initialize F2F2  
                                        _ADACCH 000F71                                          _ADACCL 000F70  
                                        _ADCON0 000F60                                          _ADCON1 000F59  
                                        _ADCON2 000F5A                                          _ADCON3 000F5B  
                                        _ADERRH 000F6F                                          _ADERRL 000F6E  
                                        _ADLTHH 000F6B                                          _ADLTHL 000F6A  
                                        _ADRESH 000F64                                          _ADRESL 000F63  
                                        _ADSTAT 000F65                                          _ADUTHH 000F6D  
                                        _ADUTHL 000F6C                                          _ANSELA 000F11  
                                        _ANSELB 000F19                                          _ANSELC 000F21  
                                        _ANSELD 000F26                                          _ANSELE 000F2E  
                                        _RC1REG 000F99                                          _RC1PPS 000EF8  
                                        _RC1STA 000F9D                                          _ODCONA 000F0F  
                                        _ODCONB 000F17                                          _ODCONC 000F1F  
                                        _ODCOND 000F24                                          _ODCONE 000F2C  
                  __size_of_EUSART1_is_rx_ready 0016                                          _INLVLA 000F0D  
                                        _INLVLB 000F15                                          _INLVLC 000F1D  
                                        _INLVLD 000F22                                          _INLVLE 000F2A  
                                        _OSCFRQ 000EDE                    __size_of_EUSART1_is_tx_ready 002A  
                                        _RX1PPS 000EB5                                          _TX1REG 000F9A  
                                        _TX1STA 000F9E                __size_of_TMR6_HasOverflowOccured 002C  
                    ??_ADCC_GetConversionResult 0003                           main@My_Paquete_Salida 0010  
                                        ___wmul F310                                       ??___lwdiv 0005  
                          Ds_Separar_Digito@dsp 0008                                       ??___lwmod 0005  
                                        _conteo 0024                        ?_EUSART1_SetErrorHandler 0001  
                   __end_of_Procese_Dato_Rebido 0000                                          clear_0 F27C  
              ??_EUSART1_SetOverrunErrorHandler 0003                 ?_EUSART1_SetOverrunErrorHandler 0001  
                        _Transmision_Completada 0025                                 _ADCC_Initialize F474  
                                _PMD_Initialize F2D6                                          tblptru 000FF8  
                               ??_EUSART1_Write 0001                               _SYSTEM_Initialize F2BC  
                                    __accesstop 0060                         __end_of__initialization F282  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                                __pcstackCOMRAM 0001                             ??_SYSTEM_Initialize 0003  
                       __end_of_TMR6_Initialize F310                          __end_of_PMD_Initialize F2F2  
                          __end_of_EUSART1_Read F38A                       __end_of_SYSTEM_Initialize F2D6  
                                    __pnvCOMRAM 0028                 __end_of_EUSART1_SetErrorHandler F224  
                                       ?___wmul 0001                         __end_of_ADCC_Initialize F4C4  
                                       _ADFLTRH 000F73                                         _ADFLTRL 000F72  
                                       _ADPREVH 000F62                                         _ADPREVL 000F61  
                                       _ADSTPTH 000F69                                         _ADSTPTL 000F68  
                               ?_PMD_Initialize 0001          __end_of_EUSART1_SetFramingErrorHandler F22E  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler F224  
                                       _SP1BRGH 000F9C                                         _SP1BRGL 000F9B  
                                       _OSCCON1 000ED8                                         _OSCCON3 000EDA  
                                       _OSCTUNE 000EDD                                         _SLRCONA 000F0E  
                                       _SLRCONB 000F16                                         _SLRCONC 000F1E  
                                       _SLRCOND 000F23                                         _SLRCONE 000F2B  
                __size_of_ADCC_IsConversionDone 0014                   __end_of_ADCC_IsConversionDone F260  
                       _TMR6_HasOverflowOccured F38A                    __size_of_Inicializar_Paquete 003E  
                                 ?_Procese_UART 0001                                         __Hparam 0000  
                                       __Lparam 0000                                 __size_of___wmul 0026  
                                       ___lwdiv F528                                         ___lwmod F4C4  
                           _EUSART1_is_rx_ready F260                                         __pcinit F276  
                              ?_TMR6_Initialize 0001                                         __ramtop 0F00  
                           _EUSART1_is_tx_ready F336                                         __ptext0 F700  
                                       __ptext1 F38A                                         __ptext2 F2BC  
                                       __ptext3 F2F2                                         __ptext4 F2D6  
                                       __ptext5 F59C                                         __ptext6 F2A4  
                                       __ptext7 F3F4                                         __ptext8 F22E  
                                       __ptext9 F224                           _OSCILLATOR_Initialize F2A4  
                            _EUSART1_Initialize F3F4                        ??_PIN_MANAGER_Initialize 0001  
                                     _T6CONbits 000FB1                                       _T6HLTbits 000FB2  
                    __size_of_SYSTEM_Initialize 001A                            end_of_initialization F282  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                          ?_EUSART1_is_tx_ready 0001                                   __Lmediumconst 0000  
                   _EUSART1_OverrunErrorHandler 002A                                       _T6RSTbits 000FB4  
                                ??_Procese_UART 0003                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 002A  
                              ?_ADCC_Initialize 0001                            ??_EUSART1_Initialize 0003  
                         _Inicializar_Maquinita F432                   TMR6_HasOverflowOccured@status 0001  
                     ??_TMR6_HasOverflowOccured 0001                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 0001                           ??_EUSART1_is_rx_ready 0001  
                         ??_EUSART1_is_tx_ready 0001                                    _EUSART1_Read F360  
                                    main@enviar 000F                                main@My_Maquinita 0014  
                                __end_of___wmul F336                          ?_OSCILLATOR_Initialize 0001  
             __size_of_ADCC_GetConversionResult 0014                       ?_ADCC_GetConversionResult 0001  
                           start_initialization F276                    __size_of_Procese_Dato_Rebido 041E  
               __size_of_PIN_MANAGER_Initialize 0082                           __end_of_EUSART1_Write F2A4  
                              ??_PMD_Initialize 0001                                        ??___wmul 0005  
                       Inicializar_Paquete@mqnt 0001                          ?_Inicializar_Maquinita 0001  
                           _Inicializar_Paquete F3B6                            __end_of_Procese_UART FBE2  
                                   __pbssCOMRAM 0019                ??_EUSART1_SetFramingErrorHandler 0003  
               ?_EUSART1_SetFramingErrorHandler 0001                            ?_Inicializar_Paquete 0001  
                     Inicializar_Maquinita@mqnt 0001                                ___lwdiv@dividend 0001  
                        _PIN_MANAGER_Initialize F59C                         _EUSART1_is_tx_ready$556 0001  
                                      ?___lwdiv 0001                                        ?___lwmod 0001  
                                      _BAUD1CON 000F9F              _EUSART1_DefaultOverrunErrorHandler 000000  
                          _EUSART1_ErrorHandler 0028                         _EUSART1_SetErrorHandler F21A  
                              ___lwdiv@quotient 0005                                        _T6CLKCON 000FB3  
                                     _recibidoo 0020                           _ADCC_IsConversionDone F24C  
                                ___wmul@product 0005         EUSART1_SetErrorHandler@interruptHandler 0001  
                                      _LATBbits 000F84                                        _LATDbits 000F86  
                         ??_Inicializar_Paquete 0003                                        _PIR3bits 000ECD  
                                      _PIR4bits 000ECE                                      _ADCON0bits 000F60  
                                    _ADCON1bits 000F59                                      _ADCON2bits 000F5A  
                                    _ADCON3bits 000F5B                               ___wmul@multiplier 0001  
                      __size_of_TMR6_Initialize 001E                                      _ADSTATbits 000F65  
                                      __Hrparam 0000                __end_of_ADCC_GetConversionResult F24C  
                           _Procese_Dato_Rebido FBE2                                        __Lrparam 0000  
                       ??_OSCILLATOR_Initialize 0001                                Procese_UART@mqnt 0001  
                   __size_of_EUSART1_Initialize 003E                                __size_of___lwdiv 0074  
                         __size_of_Procese_UART 0362                                __size_of___lwmod 0064  
                     ??_EUSART1_SetErrorHandler 0003                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready F276                        __size_of_ADCC_Initialize 0050  
                          ?_Procese_Dato_Rebido 0001                     __end_of_EUSART1_is_tx_ready F360  
                               ___lwdiv@divisor 0003                                 ___lwdiv@counter 0007  
                        Ds_Separar_Digito@datto 000A                                        __ptext10 F21A  
                                      __ptext11 F474                                        __ptext20 F28C  
                                      __ptext12 F880                                        __ptext21 F61E  
                                      __ptext13 F360                                        __ptext22 F4C4  
                                      __ptext14 FBE2                                        __ptext23 F528  
                                      __ptext15 F310                                        __ptext24 F24C  
                                      __ptext16 F3B6                                        __ptext25 F238  
                                      __ptext17 F432                                        __ptext18 F336  
                                      __ptext19 F260                          ?_ADCC_IsConversionDone 0001  
                             _Ds_Separar_Digito F61E                                   __size_of_main 0180  
                                      _recibido 0022                              ?_Ds_Separar_Digito 0008  
                                  _Procese_UART F880                                      _RC1STAbits 000F9D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0001                             ??_Ds_Separar_Digito 000C  
                                 main@ADC_Value 000D                         ??_Inicializar_Maquinita 0003  
                             _Transmision_Error 0026                     _EUSART1_FramingErrorHandler 002C  
                      ?_TMR6_HasOverflowOccured 0001                           ??_Procese_Dato_Rebido 0008  
                     __end_of_Ds_Separar_Digito F700                                ___lwmod@dividend 0001  
                       ?_PIN_MANAGER_Initialize 0001                               ??_TMR6_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler F238         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler F22E  EUSART1_SetFramingErrorHandler@interruptHandler 0001  
                      _ADCC_GetConversionResult F238                          __size_of_EUSART1_Write 0018  
                            _eusart1RxLastError 0027                                 ___lwmod@divisor 0003  
                               ___lwmod@counter 0005                                      _TX1STAbits 000F9E  
                __end_of_PIN_MANAGER_Initialize F61E                               ??_ADCC_Initialize 0001  
